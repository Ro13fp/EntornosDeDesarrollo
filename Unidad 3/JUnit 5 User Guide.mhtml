From: <Saved by Blink>
Snapshot-Content-Location: https://junit.org/junit5/docs/current/user-guide/
Subject: JUnit 5 User Guide
Date: Sat, 25 Jun 2022 18:22:25 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----"


------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: text/html
Content-ID: <frame-93D7BDDDCD62FE18CE982EDC20FD2F88@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://junit.org/junit5/docs/current/user-guide/

<!DOCTYPE html><html lang=3D"en" data-darkreader-mode=3D"dynamic" data-dark=
reader-scheme=3D"dark"><head><meta http-equiv=3D"Content-Type" content=3D"t=
ext/html; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/css" href=
=3D"cid:css-0f63da74-8cd3-4c95-8c1b-e8c5672de590@mhtml.blink" /><link rel=
=3D"stylesheet" type=3D"text/css" href=3D"cid:css-ad1fd983-9467-4502-bf81-8=
9310c8662b3@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" href=
=3D"cid:css-b18ce14e-1be2-4527-b0b1-29827373262d@mhtml.blink" /><link rel=
=3D"stylesheet" type=3D"text/css" href=3D"cid:css-dca45a15-ab3a-47f6-8037-f=
01f1c5a8dc0@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" href=
=3D"cid:css-0093f8c7-2265-4b98-b092-dbfada589c4e@mhtml.blink" /><link rel=
=3D"stylesheet" type=3D"text/css" href=3D"cid:css-31c555f7-5df1-4502-9e28-2=
fadba4e96c3@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" href=
=3D"cid:css-29ce3bf5-56a8-43b2-b630-b0cf9c9de8c5@mhtml.blink" /><link rel=
=3D"stylesheet" type=3D"text/css" href=3D"cid:css-b9da9d93-fd41-4a7e-afbd-6=
6e08ce1798c@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" href=
=3D"cid:css-934ad147-a641-4d6a-a2f2-c23edef7d774@mhtml.blink" /><link rel=
=3D"stylesheet" type=3D"text/css" href=3D"cid:css-639e7612-30b2-4ce3-af1e-e=
958cff263f2@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" href=
=3D"cid:css-7af85a82-746b-42ff-b784-67cd4ee0db39@mhtml.blink" /><link rel=
=3D"stylesheet" type=3D"text/css" href=3D"cid:css-54770805-4691-4cc6-98c3-f=
0b9abe208ba@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" href=
=3D"cid:css-2c7d003a-1176-4267-befd-5372ded08650@mhtml.blink" /><link rel=
=3D"stylesheet" type=3D"text/css" href=3D"cid:css-fbc75ea6-a1c3-4781-aaa9-e=
6d8d18ccab2@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" href=
=3D"cid:css-4fd9c1e9-19a9-4fc4-a965-40a46016046d@mhtml.blink" />

<meta http-equiv=3D"X-UA-Compatible" content=3D"IE=3Dedge">
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1.=
0">
<meta name=3D"generator" content=3D"Asciidoctor 2.0.10">
<meta name=3D"author" content=3D"Stefan Bechtold, Sam Brannen, Johannes Lin=
k, Matthias Merdes, Marc Philipp, Juliette de Rancourt, Christian Stein">
<title>JUnit 5 User Guide</title>
<link rel=3D"stylesheet" href=3D"https://fonts.googleapis.com/css?family=3D=
Open+Sans:300,300italic,400,400italic,600,600italic%7CNoto+Serif:400,400ita=
lic,700,700italic%7CDroid+Sans+Mono:400,700">

<link rel=3D"stylesheet" href=3D"https://cdnjs.cloudflare.com/ajax/libs/fon=
t-awesome/4.7.0/css/font-awesome.min.css">
<link rel=3D"icon" type=3D"image/png" href=3D"https://junit.org/junit5/asse=
ts/img/junit5-logo.png">

<meta name=3D"darkreader" content=3D"cf5c09873d784c3ab755e1a4a1ee8042"></he=
ad>
<body id=3D"user-guide" class=3D"article toc2 toc-left">
<div id=3D"header">
<h1>JUnit 5 User Guide</h1>
<div class=3D"details">
<span id=3D"author" class=3D"author">Stefan Bechtold</span><br>
<span id=3D"author2" class=3D"author">Sam Brannen</span><br>
<span id=3D"author3" class=3D"author">Johannes Link</span><br>
<span id=3D"author4" class=3D"author">Matthias Merdes</span><br>
<span id=3D"author5" class=3D"author">Marc Philipp</span><br>
<span id=3D"author6" class=3D"author">Juliette de Rancourt</span><br>
<span id=3D"author7" class=3D"author">Christian Stein</span><br>
<span id=3D"revnumber">version 5.8.2</span>
</div>
<div id=3D"toc" class=3D"toc2">
<div id=3D"toctitle">Table of Contents</div>
<div id=3D"tocbot" class=3D"js-toc"><ul class=3D"toc-list "><li class=3D"to=
c-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-guide/#o=
verview" class=3D"toc-link node-name--H2  is-active-link">1. Overview</a><u=
l class=3D"toc-list  is-collapsible"><li class=3D"toc-list-item"><a href=3D=
"https://junit.org/junit5/docs/current/user-guide/#overview-what-is-junit-5=
" class=3D"toc-link node-name--H3 ">1.1. What is JUnit 5?</a></li><li class=
=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-gu=
ide/#overview-java-versions" class=3D"toc-link node-name--H3 ">1.2. Support=
ed Java Versions</a></li><li class=3D"toc-list-item"><a href=3D"https://jun=
it.org/junit5/docs/current/user-guide/#overview-getting-help" class=3D"toc-=
link node-name--H3 ">1.3. Getting Help</a></li><li class=3D"toc-list-item">=
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#overview-getti=
ng-started" class=3D"toc-link node-name--H3 ">1.4. Getting Started</a><ul c=
lass=3D"toc-list  is-collapsible is-collapsed"><li class=3D"toc-list-item">=
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#overview-getti=
ng-started-junit-artifacts" class=3D"toc-link node-name--H4 ">1.4.1. Downlo=
ading JUnit Artifacts</a></li><li class=3D"toc-list-item"><a href=3D"https:=
//junit.org/junit5/docs/current/user-guide/#overview-getting-started-featur=
es" class=3D"toc-link node-name--H4 ">1.4.2. JUnit 5 Features</a></li><li c=
lass=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/use=
r-guide/#overview-getting-started-example-projects" class=3D"toc-link node-=
name--H4 ">1.4.3. Example Projects</a></li></ul></li></ul></li><li class=3D=
"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-guide=
/#writing-tests" class=3D"toc-link node-name--H2 ">2. Writing Tests</a><ul =
class=3D"toc-list  is-collapsible is-collapsed"><li class=3D"toc-list-item"=
><a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests=
-annotations" class=3D"toc-link node-name--H3 ">2.1. Annotations</a><ul cla=
ss=3D"toc-list  is-collapsible is-collapsed"><li class=3D"toc-list-item"><a=
 href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-me=
ta-annotations" class=3D"toc-link node-name--H4 ">2.1.1. Meta-Annotations a=
nd Composed Annotations</a></li></ul></li><li class=3D"toc-list-item"><a hr=
ef=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-class=
es-and-methods" class=3D"toc-link node-name--H3 ">2.2. Test Classes and Met=
hods</a></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit=
5/docs/current/user-guide/#writing-tests-display-names" class=3D"toc-link n=
ode-name--H3 ">2.3. Display Names</a><ul class=3D"toc-list  is-collapsible =
is-collapsed"><li class=3D"toc-list-item"><a href=3D"https://junit.org/juni=
t5/docs/current/user-guide/#writing-tests-display-name-generator" class=3D"=
toc-link node-name--H4 ">2.3.1. Display Name Generators</a></li><li class=
=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-gu=
ide/#writing-tests-display-name-generator-default" class=3D"toc-link node-n=
ame--H4 ">2.3.2. Setting the Default Display Name Generator</a></li></ul></=
li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/cur=
rent/user-guide/#writing-tests-assertions" class=3D"toc-link node-name--H3 =
">2.4. Assertions</a><ul class=3D"toc-list  is-collapsible is-collapsed"><l=
i class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/=
user-guide/#writing-tests-assertions-kotlin" class=3D"toc-link node-name--H=
4 ">2.4.1. Kotlin Assertion Support</a></li><li class=3D"toc-list-item"><a =
href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-ass=
ertions-third-party" class=3D"toc-link node-name--H4 ">2.4.2. Third-party A=
ssertion Libraries</a></li></ul></li><li class=3D"toc-list-item"><a href=3D=
"https://junit.org/junit5/docs/current/user-guide/#writing-tests-assumption=
s" class=3D"toc-link node-name--H3 ">2.5. Assumptions</a></li><li class=3D"=
toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-guide/=
#writing-tests-disabling" class=3D"toc-link node-name--H3 ">2.6. Disabling =
Tests</a></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/juni=
t5/docs/current/user-guide/#writing-tests-conditional-execution" class=3D"t=
oc-link node-name--H3 ">2.7. Conditional Test Execution</a><ul class=3D"toc=
-list  is-collapsible is-collapsed"><li class=3D"toc-list-item"><a href=3D"=
https://junit.org/junit5/docs/current/user-guide/#writing-tests-conditional=
-execution-os" class=3D"toc-link node-name--H4 ">2.7.1. Operating System Co=
nditions</a></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/j=
unit5/docs/current/user-guide/#writing-tests-conditional-execution-jre" cla=
ss=3D"toc-link node-name--H4 ">2.7.2. Java Runtime Environment Conditions</=
a></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs=
/current/user-guide/#writing-tests-conditional-execution-system-properties"=
 class=3D"toc-link node-name--H4 ">2.7.3. System Property Conditions</a></l=
i><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/curr=
ent/user-guide/#writing-tests-conditional-execution-environment-variables" =
class=3D"toc-link node-name--H4 ">2.7.4. Environment Variable Conditions</a=
></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/=
current/user-guide/#writing-tests-conditional-execution-custom" class=3D"to=
c-link node-name--H4 ">2.7.5. Custom Conditions</a></li></ul></li><li class=
=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-gu=
ide/#writing-tests-tagging-and-filtering" class=3D"toc-link node-name--H3 "=
>2.8. Tagging and Filtering</a></li><li class=3D"toc-list-item"><a href=3D"=
https://junit.org/junit5/docs/current/user-guide/#writing-tests-test-execut=
ion-order" class=3D"toc-link node-name--H3 ">2.9. Test Execution Order</a><=
ul class=3D"toc-list  is-collapsible is-collapsed"><li class=3D"toc-list-it=
em"><a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-te=
sts-test-execution-order-methods" class=3D"toc-link node-name--H4 ">2.9.1. =
Method Order</a><ul class=3D"toc-list  is-collapsible is-collapsed"><li cla=
ss=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-=
guide/#writing-tests-test-execution-order-methods-default" class=3D"toc-lin=
k node-name--H5 ">Setting the Default Method Orderer</a></li></ul></li><li =
class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/us=
er-guide/#writing-tests-test-execution-order-classes" class=3D"toc-link nod=
e-name--H4 ">2.9.2. Class Order</a></li></ul></li><li class=3D"toc-list-ite=
m"><a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tes=
ts-test-instance-lifecycle" class=3D"toc-link node-name--H3 ">2.10. Test In=
stance Lifecycle</a><ul class=3D"toc-list  is-collapsible is-collapsed"><li=
 class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/u=
ser-guide/#writing-tests-test-instance-lifecycle-changing-default" class=3D=
"toc-link node-name--H4 ">2.10.1. Changing the Default Test Instance Lifecy=
cle</a></li></ul></li><li class=3D"toc-list-item"><a href=3D"https://junit.=
org/junit5/docs/current/user-guide/#writing-tests-nested" class=3D"toc-link=
 node-name--H3 ">2.11. Nested Tests</a></li><li class=3D"toc-list-item"><a =
href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-dep=
endency-injection" class=3D"toc-link node-name--H3 ">2.12. Dependency Injec=
tion for Constructors and Methods</a></li><li class=3D"toc-list-item"><a hr=
ef=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-test-=
interfaces-and-default-methods" class=3D"toc-link node-name--H3 ">2.13. Tes=
t Interfaces and Default Methods</a></li><li class=3D"toc-list-item"><a hre=
f=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-repeat=
ed-tests" class=3D"toc-link node-name--H3 ">2.14. Repeated Tests</a><ul cla=
ss=3D"toc-list  is-collapsible is-collapsed"><li class=3D"toc-list-item"><a=
 href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-re=
peated-tests-examples" class=3D"toc-link node-name--H4 ">2.14.1. Repeated T=
est Examples</a></li></ul></li><li class=3D"toc-list-item"><a href=3D"https=
://junit.org/junit5/docs/current/user-guide/#writing-tests-parameterized-te=
sts" class=3D"toc-link node-name--H3 ">2.15. Parameterized Tests</a><ul cla=
ss=3D"toc-list  is-collapsible is-collapsed"><li class=3D"toc-list-item"><a=
 href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-pa=
rameterized-tests-setup" class=3D"toc-link node-name--H4 ">2.15.1. Required=
 Setup</a></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/jun=
it5/docs/current/user-guide/#writing-tests-parameterized-tests-consuming-ar=
guments" class=3D"toc-link node-name--H4 ">2.15.2. Consuming Arguments</a><=
/li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/cu=
rrent/user-guide/#writing-tests-parameterized-tests-sources" class=3D"toc-l=
ink node-name--H4 ">2.15.3. Sources of Arguments</a><ul class=3D"toc-list  =
is-collapsible is-collapsed"><li class=3D"toc-list-item"><a href=3D"https:/=
/junit.org/junit5/docs/current/user-guide/#writing-tests-parameterized-test=
s-sources-ValueSource" class=3D"toc-link node-name--H5 ">@ValueSource</a></=
li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/cur=
rent/user-guide/#writing-tests-parameterized-tests-sources-null-and-empty" =
class=3D"toc-link node-name--H5 ">Null and Empty Sources</a></li><li class=
=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-gu=
ide/#writing-tests-parameterized-tests-sources-EnumSource" class=3D"toc-lin=
k node-name--H5 ">@EnumSource</a></li><li class=3D"toc-list-item"><a href=
=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-paramet=
erized-tests-sources-MethodSource" class=3D"toc-link node-name--H5 ">@Metho=
dSource</a></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/ju=
nit5/docs/current/user-guide/#writing-tests-parameterized-tests-sources-Csv=
Source" class=3D"toc-link node-name--H5 ">@CsvSource</a></li><li class=3D"t=
oc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-guide/#=
writing-tests-parameterized-tests-sources-CsvFileSource" class=3D"toc-link =
node-name--H5 ">@CsvFileSource</a></li><li class=3D"toc-list-item"><a href=
=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-paramet=
erized-tests-sources-ArgumentsSource" class=3D"toc-link node-name--H5 ">@Ar=
gumentsSource</a></li></ul></li><li class=3D"toc-list-item"><a href=3D"http=
s://junit.org/junit5/docs/current/user-guide/#writing-tests-parameterized-t=
ests-argument-conversion" class=3D"toc-link node-name--H4 ">2.15.4. Argumen=
t Conversion</a><ul class=3D"toc-list  is-collapsible is-collapsed"><li cla=
ss=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-=
guide/#writing-tests-parameterized-tests-argument-conversion-widening" clas=
s=3D"toc-link node-name--H5 ">Widening Conversion</a></li><li class=3D"toc-=
list-item"><a href=3D"https://junit.org/junit5/docs/current/user-guide/#wri=
ting-tests-parameterized-tests-argument-conversion-implicit" class=3D"toc-l=
ink node-name--H5 ">Implicit Conversion</a></li><li class=3D"toc-list-item"=
><a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests=
-parameterized-tests-argument-conversion-explicit" class=3D"toc-link node-n=
ame--H5 ">Explicit Conversion</a></li></ul></li><li class=3D"toc-list-item"=
><a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests=
-parameterized-tests-argument-aggregation" class=3D"toc-link node-name--H4 =
">2.15.5. Argument Aggregation</a><ul class=3D"toc-list  is-collapsible is-=
collapsed"><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/=
docs/current/user-guide/#writing-tests-parameterized-tests-argument-aggrega=
tion-custom" class=3D"toc-link node-name--H5 ">Custom Aggregators</a></li><=
/ul></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/do=
cs/current/user-guide/#writing-tests-parameterized-tests-display-names" cla=
ss=3D"toc-link node-name--H4 ">2.15.6. Customizing Display Names</a></li><l=
i class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/=
user-guide/#writing-tests-parameterized-tests-lifecycle-interop" class=3D"t=
oc-link node-name--H4 ">2.15.7. Lifecycle and Interoperability</a></li></ul=
></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/=
current/user-guide/#writing-tests-test-templates" class=3D"toc-link node-na=
me--H3 ">2.16. Test Templates</a></li><li class=3D"toc-list-item"><a href=
=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-dynamic=
-tests" class=3D"toc-link node-name--H3 ">2.17. Dynamic Tests</a><ul class=
=3D"toc-list  is-collapsible is-collapsed"><li class=3D"toc-list-item"><a h=
ref=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-dyna=
mic-tests-examples" class=3D"toc-link node-name--H4 ">2.17.1. Dynamic Test =
Examples</a></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/j=
unit5/docs/current/user-guide/#writing-tests-dynamic-tests-uri-test-source"=
 class=3D"toc-link node-name--H4 ">2.17.2. URI Test Sources for Dynamic Tes=
ts</a></li></ul></li><li class=3D"toc-list-item"><a href=3D"https://junit.o=
rg/junit5/docs/current/user-guide/#writing-tests-declarative-timeouts" clas=
s=3D"toc-link node-name--H3 ">2.18. Timeouts</a><ul class=3D"toc-list  is-c=
ollapsible is-collapsed"><li class=3D"toc-list-item"><a href=3D"https://jun=
it.org/junit5/docs/current/user-guide/#writing-tests-declarative-timeouts-p=
olling" class=3D"toc-link node-name--H4 ">2.18.1. Using @Timeout for Pollin=
g Tests</a></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/ju=
nit5/docs/current/user-guide/#writing-tests-declarative-timeouts-mode" clas=
s=3D"toc-link node-name--H4 ">2.18.2. Disable @Timeout Globally</a></li></u=
l></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs=
/current/user-guide/#writing-tests-parallel-execution" class=3D"toc-link no=
de-name--H3 ">2.19. Parallel Execution</a><ul class=3D"toc-list  is-collaps=
ible is-collapsed"><li class=3D"toc-list-item"><a href=3D"https://junit.org=
/junit5/docs/current/user-guide/#writing-tests-parallel-execution-config" c=
lass=3D"toc-link node-name--H4 ">2.19.1. Configuration</a></li><li class=3D=
"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-guide=
/#writing-tests-parallel-execution-synchronization" class=3D"toc-link node-=
name--H4 ">2.19.2. Synchronization</a></li></ul></li><li class=3D"toc-list-=
item"><a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-=
tests-built-in-extensions" class=3D"toc-link node-name--H3 ">2.20. Built-in=
 Extensions</a><ul class=3D"toc-list  is-collapsible is-collapsed"><li clas=
s=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-g=
uide/#writing-tests-built-in-extensions-TempDirectory" class=3D"toc-link no=
de-name--H4 ">2.20.1. The TempDirectory Extension</a></li></ul></li></ul></=
li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/cur=
rent/user-guide/#migrating-from-junit4" class=3D"toc-link node-name--H2 ">3=
. Migrating from JUnit 4</a><ul class=3D"toc-list  is-collapsible is-collap=
sed"><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/c=
urrent/user-guide/#migrating-from-junit4-running" class=3D"toc-link node-na=
me--H3 ">3.1. Running JUnit 4 Tests on the JUnit Platform</a><ul class=3D"t=
oc-list  is-collapsible is-collapsed"><li class=3D"toc-list-item"><a href=
=3D"https://junit.org/junit5/docs/current/user-guide/#migrating-from-junit4=
-categories-support" class=3D"toc-link node-name--H4 ">3.1.1. Categories Su=
pport</a></li></ul></li><li class=3D"toc-list-item"><a href=3D"https://juni=
t.org/junit5/docs/current/user-guide/#migrating-from-junit4-tips" class=3D"=
toc-link node-name--H3 ">3.2. Migration Tips</a></li><li class=3D"toc-list-=
item"><a href=3D"https://junit.org/junit5/docs/current/user-guide/#migratin=
g-from-junit4-rule-support" class=3D"toc-link node-name--H3 ">3.3. Limited =
JUnit 4 Rule Support</a></li><li class=3D"toc-list-item"><a href=3D"https:/=
/junit.org/junit5/docs/current/user-guide/#migrating-from-junit4-ignore-ann=
otation-support" class=3D"toc-link node-name--H3 ">3.4. JUnit 4 @Ignore Sup=
port</a></li></ul></li><li class=3D"toc-list-item"><a href=3D"https://junit=
.org/junit5/docs/current/user-guide/#running-tests" class=3D"toc-link node-=
name--H2 ">4. Running Tests</a><ul class=3D"toc-list  is-collapsible is-col=
lapsed"><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/doc=
s/current/user-guide/#running-tests-ide" class=3D"toc-link node-name--H3 ">=
4.1. IDE Support</a><ul class=3D"toc-list  is-collapsible is-collapsed"><li=
 class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/u=
ser-guide/#running-tests-ide-intellij-idea" class=3D"toc-link node-name--H4=
 ">4.1.1. IntelliJ IDEA</a></li><li class=3D"toc-list-item"><a href=3D"http=
s://junit.org/junit5/docs/current/user-guide/#running-tests-ide-eclipse" cl=
ass=3D"toc-link node-name--H4 ">4.1.2. Eclipse</a></li><li class=3D"toc-lis=
t-item"><a href=3D"https://junit.org/junit5/docs/current/user-guide/#runnin=
g-tests-ide-netbeans" class=3D"toc-link node-name--H4 ">4.1.3. NetBeans</a>=
</li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/c=
urrent/user-guide/#running-tests-ide-vscode" class=3D"toc-link node-name--H=
4 ">4.1.4. Visual Studio Code</a></li><li class=3D"toc-list-item"><a href=
=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-ide-oth=
er" class=3D"toc-link node-name--H4 ">4.1.5. Other IDEs</a></li></ul></li><=
li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current=
/user-guide/#running-tests-build" class=3D"toc-link node-name--H3 ">4.2. Bu=
ild Support</a><ul class=3D"toc-list  is-collapsible is-collapsed"><li clas=
s=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-g=
uide/#running-tests-build-gradle" class=3D"toc-link node-name--H4 ">4.2.1. =
Gradle</a><ul class=3D"toc-list  is-collapsible is-collapsed"><li class=3D"=
toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-guide/=
#running-tests-build-gradle-config-params" class=3D"toc-link node-name--H5 =
">Configuration Parameters</a></li><li class=3D"toc-list-item"><a href=3D"h=
ttps://junit.org/junit5/docs/current/user-guide/#running-tests-build-gradle=
-engines-configure" class=3D"toc-link node-name--H5 ">Configuring Test Engi=
nes</a></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5=
/docs/current/user-guide/#running-tests-build-gradle-logging" class=3D"toc-=
link node-name--H5 ">Configuring Logging (optional)</a></li></ul></li><li c=
lass=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/use=
r-guide/#running-tests-build-maven" class=3D"toc-link node-name--H4 ">4.2.2=
. Maven</a><ul class=3D"toc-list  is-collapsible is-collapsed"><li class=3D=
"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-guide=
/#running-tests-build-maven-engines-configure" class=3D"toc-link node-name-=
-H5 ">Configuring Test Engines</a></li><li class=3D"toc-list-item"><a href=
=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-build-m=
aven-filter-test-class-names" class=3D"toc-link node-name--H5 ">Filtering b=
y Test Class Names</a></li><li class=3D"toc-list-item"><a href=3D"https://j=
unit.org/junit5/docs/current/user-guide/#running-tests-build-maven-filter-t=
ags" class=3D"toc-link node-name--H5 ">Filtering by Tags</a></li><li class=
=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-gu=
ide/#running-tests-build-maven-config-params" class=3D"toc-link node-name--=
H5 ">Configuration Parameters</a></li></ul></li><li class=3D"toc-list-item"=
><a href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests=
-build-ant" class=3D"toc-link node-name--H4 ">4.2.3. Ant</a><ul class=3D"to=
c-list  is-collapsible is-collapsed"><li class=3D"toc-list-item"><a href=3D=
"https://junit.org/junit5/docs/current/user-guide/#basic-usage" class=3D"to=
c-link node-name--H5 ">Basic Usage</a></li></ul></li></ul></li><li class=3D=
"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-guide=
/#running-tests-console-launcher" class=3D"toc-link node-name--H3 ">4.3. Co=
nsole Launcher</a><ul class=3D"toc-list  is-collapsible is-collapsed"><li c=
lass=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/use=
r-guide/#running-tests-console-launcher-options" class=3D"toc-link node-nam=
e--H4 ">4.3.1. Options</a></li><li class=3D"toc-list-item"><a href=3D"https=
://junit.org/junit5/docs/current/user-guide/#running-tests-console-launcher=
-argument-files" class=3D"toc-link node-name--H4 ">4.3.2. Argument Files (@=
-files)</a></li></ul></li><li class=3D"toc-list-item"><a href=3D"https://ju=
nit.org/junit5/docs/current/user-guide/#running-tests-junit-platform-runner=
" class=3D"toc-link node-name--H3 ">4.4. Using JUnit 4 to run the JUnit Pla=
tform</a><ul class=3D"toc-list  is-collapsible is-collapsed"><li class=3D"t=
oc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-guide/#=
running-tests-junit-platform-runner-setup" class=3D"toc-link node-name--H4 =
">4.4.1. Setup</a><ul class=3D"toc-list  is-collapsible is-collapsed"><li c=
lass=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/use=
r-guide/#running-tests-junit-platform-runner-setup-explicit-dependencies" c=
lass=3D"toc-link node-name--H5 ">Explicit Dependencies</a></li><li class=3D=
"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-guide=
/#running-tests-junit-platform-runner-setup-transitive-dependencies" class=
=3D"toc-link node-name--H5 ">Transitive Dependencies</a></li></ul></li><li =
class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/us=
er-guide/#running-tests-junit-platform-runner-technical-names" class=3D"toc=
-link node-name--H4 ">4.4.2. Display Names vs. Technical Names</a></li><li =
class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/us=
er-guide/#running-tests-junit-platform-runner-single-test" class=3D"toc-lin=
k node-name--H4 ">4.4.3. Single Test Class</a></li><li class=3D"toc-list-it=
em"><a href=3D"https://junit.org/junit5/docs/current/user-guide/#running-te=
sts-junit-platform-runner-test-suite" class=3D"toc-link node-name--H4 ">4.4=
.4. Test Suite</a></li></ul></li><li class=3D"toc-list-item"><a href=3D"htt=
ps://junit.org/junit5/docs/current/user-guide/#running-tests-config-params"=
 class=3D"toc-link node-name--H3 ">4.5. Configuration Parameters</a><ul cla=
ss=3D"toc-list  is-collapsible is-collapsed"><li class=3D"toc-list-item"><a=
 href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-co=
nfig-params-deactivation-pattern" class=3D"toc-link node-name--H4 ">4.5.1. =
Pattern Matching Syntax</a></li></ul></li><li class=3D"toc-list-item"><a hr=
ef=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-tags"=
 class=3D"toc-link node-name--H3 ">4.6. Tags</a><ul class=3D"toc-list  is-c=
ollapsible is-collapsed"><li class=3D"toc-list-item"><a href=3D"https://jun=
it.org/junit5/docs/current/user-guide/#running-tests-tag-syntax-rules" clas=
s=3D"toc-link node-name--H4 ">4.6.1. Syntax Rules for Tags</a></li><li clas=
s=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-g=
uide/#running-tests-tag-expressions" class=3D"toc-link node-name--H4 ">4.6.=
2. Tag Expressions</a></li></ul></li><li class=3D"toc-list-item"><a href=3D=
"https://junit.org/junit5/docs/current/user-guide/#running-tests-capturing-=
output" class=3D"toc-link node-name--H3 ">4.7. Capturing Standard Output/Er=
ror</a></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5=
/docs/current/user-guide/#running-tests-listeners" class=3D"toc-link node-n=
ame--H3 ">4.8. Using Listeners</a><ul class=3D"toc-list  is-collapsible is-=
collapsed"><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/=
docs/current/user-guide/#running-tests-listeners-flight-recorder" class=3D"=
toc-link node-name--H4 ">4.8.1. Flight Recorder Support</a></li></ul></li><=
/ul></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/do=
cs/current/user-guide/#extensions" class=3D"toc-link node-name--H2 ">5. Ext=
ension Model</a><ul class=3D"toc-list  is-collapsible is-collapsed"><li cla=
ss=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-=
guide/#extensions-overview" class=3D"toc-link node-name--H3 ">5.1. Overview=
</a></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/do=
cs/current/user-guide/#extensions-registration" class=3D"toc-link node-name=
--H3 ">5.2. Registering Extensions</a><ul class=3D"toc-list  is-collapsible=
 is-collapsed"><li class=3D"toc-list-item"><a href=3D"https://junit.org/jun=
it5/docs/current/user-guide/#extensions-registration-declarative" class=3D"=
toc-link node-name--H4 ">5.2.1. Declarative Extension Registration</a></li>=
<li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/curren=
t/user-guide/#extensions-registration-programmatic" class=3D"toc-link node-=
name--H4 ">5.2.2. Programmatic Extension Registration</a><ul class=3D"toc-l=
ist  is-collapsible is-collapsed"><li class=3D"toc-list-item"><a href=3D"ht=
tps://junit.org/junit5/docs/current/user-guide/#extensions-registration-pro=
grammatic-static-fields" class=3D"toc-link node-name--H5 ">Static Fields</a=
></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/=
current/user-guide/#extensions-registration-programmatic-instance-fields" c=
lass=3D"toc-link node-name--H5 ">Instance Fields</a></li></ul></li><li clas=
s=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-g=
uide/#extensions-registration-automatic" class=3D"toc-link node-name--H4 ">=
5.2.3. Automatic Extension Registration</a><ul class=3D"toc-list  is-collap=
sible is-collapsed"><li class=3D"toc-list-item"><a href=3D"https://junit.or=
g/junit5/docs/current/user-guide/#extensions-registration-automatic-enablin=
g" class=3D"toc-link node-name--H5 ">Enabling Automatic Extension Detection=
</a></li></ul></li><li class=3D"toc-list-item"><a href=3D"https://junit.org=
/junit5/docs/current/user-guide/#extensions-registration-inheritance" class=
=3D"toc-link node-name--H4 ">5.2.4. Extension Inheritance</a></li></ul></li=
><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/curre=
nt/user-guide/#extensions-conditions" class=3D"toc-link node-name--H3 ">5.3=
. Conditional Test Execution</a><ul class=3D"toc-list  is-collapsible is-co=
llapsed"><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/do=
cs/current/user-guide/#extensions-conditions-deactivation" class=3D"toc-lin=
k node-name--H4 ">5.3.1. Deactivating Conditions</a><ul class=3D"toc-list  =
is-collapsible is-collapsed"><li class=3D"toc-list-item"><a href=3D"https:/=
/junit.org/junit5/docs/current/user-guide/#extensions-conditions-deactivati=
on-patterns" class=3D"toc-link node-name--H5 ">Pattern Matching Syntax</a><=
/li></ul></li></ul></li><li class=3D"toc-list-item"><a href=3D"https://juni=
t.org/junit5/docs/current/user-guide/#extensions-test-instance-factories" c=
lass=3D"toc-link node-name--H3 ">5.4. Test Instance Factories</a></li><li c=
lass=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/use=
r-guide/#extensions-test-instance-post-processing" class=3D"toc-link node-n=
ame--H3 ">5.5. Test Instance Post-processing</a></li><li class=3D"toc-list-=
item"><a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensio=
ns-test-instance-pre-destroy-callback" class=3D"toc-link node-name--H3 ">5.=
6. Test Instance Pre-destroy Callback</a></li><li class=3D"toc-list-item"><=
a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-para=
meter-resolution" class=3D"toc-link node-name--H3 ">5.7. Parameter Resoluti=
on</a></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/=
docs/current/user-guide/#extensions-test-result-processing" class=3D"toc-li=
nk node-name--H3 ">5.8. Test Result Processing</a></li><li class=3D"toc-lis=
t-item"><a href=3D"https://junit.org/junit5/docs/current/user-guide/#extens=
ions-lifecycle-callbacks" class=3D"toc-link node-name--H3 ">5.9. Test Lifec=
ycle Callbacks</a><ul class=3D"toc-list  is-collapsible is-collapsed"><li c=
lass=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/use=
r-guide/#extensions-lifecycle-callbacks-before-after-execution" class=3D"to=
c-link node-name--H4 ">5.9.1. Before and After Test Execution Callbacks</a>=
</li></ul></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/jun=
it5/docs/current/user-guide/#extensions-exception-handling" class=3D"toc-li=
nk node-name--H3 ">5.10. Exception Handling</a></li><li class=3D"toc-list-i=
tem"><a href=3D"https://junit.org/junit5/docs/current/user-guide/#extension=
s-intercepting-invocations" class=3D"toc-link node-name--H3 ">5.11. Interce=
pting Invocations</a></li><li class=3D"toc-list-item"><a href=3D"https://ju=
nit.org/junit5/docs/current/user-guide/#extensions-test-templates" class=3D=
"toc-link node-name--H3 ">5.12. Providing Invocation Contexts for Test Temp=
lates</a></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/juni=
t5/docs/current/user-guide/#extensions-keeping-state" class=3D"toc-link nod=
e-name--H3 ">5.13. Keeping State in Extensions</a></li><li class=3D"toc-lis=
t-item"><a href=3D"https://junit.org/junit5/docs/current/user-guide/#extens=
ions-supported-utilities" class=3D"toc-link node-name--H3 ">5.14. Supported=
 Utilities in Extensions</a><ul class=3D"toc-list  is-collapsible is-collap=
sed"><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/c=
urrent/user-guide/#extensions-supported-utilities-annotations" class=3D"toc=
-link node-name--H4 ">5.14.1. Annotation Support</a></li><li class=3D"toc-l=
ist-item"><a href=3D"https://junit.org/junit5/docs/current/user-guide/#exte=
nsions-supported-utilities-classes" class=3D"toc-link node-name--H4 ">5.14.=
2. Class Support</a></li><li class=3D"toc-list-item"><a href=3D"https://jun=
it.org/junit5/docs/current/user-guide/#extensions-supported-utilities-refle=
ction" class=3D"toc-link node-name--H4 ">5.14.3. Reflection Support</a></li=
><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/curre=
nt/user-guide/#extensions-supported-utilities-modifier" class=3D"toc-link n=
ode-name--H4 ">5.14.4. Modifier Support</a></li></ul></li><li class=3D"toc-=
list-item"><a href=3D"https://junit.org/junit5/docs/current/user-guide/#ext=
ensions-execution-order" class=3D"toc-link node-name--H3 ">5.15. Relative E=
xecution Order of User Code and Extensions</a><ul class=3D"toc-list  is-col=
lapsible is-collapsed"><li class=3D"toc-list-item"><a href=3D"https://junit=
.org/junit5/docs/current/user-guide/#extensions-execution-order-overview" c=
lass=3D"toc-link node-name--H4 ">5.15.1. User and Extension Code</a></li><l=
i class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/=
user-guide/#extensions-execution-order-wrapping-behavior" class=3D"toc-link=
 node-name--H4 ">5.15.2. Wrapping Behavior of Callbacks</a></li></ul></li><=
/ul></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/do=
cs/current/user-guide/#advanced-topics" class=3D"toc-link node-name--H2 ">6=
. Advanced Topics</a><ul class=3D"toc-list  is-collapsible is-collapsed"><l=
i class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/=
user-guide/#launcher-api" class=3D"toc-link node-name--H3 ">6.1. JUnit Plat=
form Launcher API</a><ul class=3D"toc-list  is-collapsible is-collapsed"><l=
i class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/=
user-guide/#launcher-api-discovery" class=3D"toc-link node-name--H4 ">6.1.1=
. Discovering Tests</a></li><li class=3D"toc-list-item"><a href=3D"https://=
junit.org/junit5/docs/current/user-guide/#launcher-api-execution" class=3D"=
toc-link node-name--H4 ">6.1.2. Executing Tests</a></li><li class=3D"toc-li=
st-item"><a href=3D"https://junit.org/junit5/docs/current/user-guide/#launc=
her-api-engines-custom" class=3D"toc-link node-name--H4 ">6.1.3. Registerin=
g a TestEngine</a></li><li class=3D"toc-list-item"><a href=3D"https://junit=
.org/junit5/docs/current/user-guide/#launcher-api-post-discovery-filters-cu=
stom" class=3D"toc-link node-name--H4 ">6.1.4. Registering a PostDiscoveryF=
ilter</a></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/juni=
t5/docs/current/user-guide/#launcher-api-launcher-session-listeners-custom"=
 class=3D"toc-link node-name--H4 ">6.1.5. Registering a LauncherSessionList=
ener</a></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit=
5/docs/current/user-guide/#launcher-api-launcher-discovery-listeners-custom=
" class=3D"toc-link node-name--H4 ">6.1.6. Registering a LauncherDiscoveryL=
istener</a></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/ju=
nit5/docs/current/user-guide/#launcher-api-listeners-custom" class=3D"toc-l=
ink node-name--H4 ">6.1.7. Registering a TestExecutionListener</a></li><li =
class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/us=
er-guide/#launcher-api-listeners-config" class=3D"toc-link node-name--H4 ">=
6.1.8. Configuring a TestExecutionListener</a></li><li class=3D"toc-list-it=
em"><a href=3D"https://junit.org/junit5/docs/current/user-guide/#launcher-a=
pi-listeners-custom-deactivation" class=3D"toc-link node-name--H4 ">6.1.9. =
Deactivating a TestExecutionListener</a><ul class=3D"toc-list  is-collapsib=
le is-collapsed"><li class=3D"toc-list-item"><a href=3D"https://junit.org/j=
unit5/docs/current/user-guide/#launcher-api-listeners-custom-deactivation-p=
attern" class=3D"toc-link node-name--H5 ">Pattern Matching Syntax</a></li><=
/ul></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/do=
cs/current/user-guide/#launcher-api-launcher-config" class=3D"toc-link node=
-name--H4 ">6.1.10. Configuring the Launcher</a></li></ul></li><li class=3D=
"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user-guide=
/#junit-platform-reporting" class=3D"toc-link node-name--H3 ">6.2. JUnit Pl=
atform Reporting</a></li><li class=3D"toc-list-item"><a href=3D"https://jun=
it.org/junit5/docs/current/user-guide/#junit-platform-suite-engine" class=
=3D"toc-link node-name--H3 ">6.3. JUnit Platform Suite Engine</a><ul class=
=3D"toc-list  is-collapsible is-collapsed"><li class=3D"toc-list-item"><a h=
ref=3D"https://junit.org/junit5/docs/current/user-guide/#junit-platform-sui=
te-engine-setup" class=3D"toc-link node-name--H4 ">6.3.1. Setup</a><ul clas=
s=3D"toc-list  is-collapsible is-collapsed"><li class=3D"toc-list-item"><a =
href=3D"https://junit.org/junit5/docs/current/user-guide/#junit-platform-su=
ite-engine-setup-required-dependencies" class=3D"toc-link node-name--H5 ">R=
equired Dependencies</a></li><li class=3D"toc-list-item"><a href=3D"https:/=
/junit.org/junit5/docs/current/user-guide/#junit-platform-suite-engine-setu=
p-transitive-dependencies" class=3D"toc-link node-name--H5 ">Transitive Dep=
endencies</a></li></ul></li><li class=3D"toc-list-item"><a href=3D"https://=
junit.org/junit5/docs/current/user-guide/#junit-platform-suite-engine-examp=
le" class=3D"toc-link node-name--H4 ">6.3.2. @Suite Example</a></li></ul></=
li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/cur=
rent/user-guide/#testkit" class=3D"toc-link node-name--H3 ">6.4. JUnit Plat=
form Test Kit</a><ul class=3D"toc-list  is-collapsible is-collapsed"><li cl=
ass=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/current/user=
-guide/#testkit-engine" class=3D"toc-link node-name--H4 ">6.4.1. Engine Tes=
t Kit</a></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/juni=
t5/docs/current/user-guide/#testkit-engine-statistics" class=3D"toc-link no=
de-name--H4 ">6.4.2. Asserting Statistics</a></li><li class=3D"toc-list-ite=
m"><a href=3D"https://junit.org/junit5/docs/current/user-guide/#testkit-eng=
ine-events" class=3D"toc-link node-name--H4 ">6.4.3. Asserting Events</a></=
li></ul></li></ul></li><li class=3D"toc-list-item"><a href=3D"https://junit=
.org/junit5/docs/current/user-guide/#api-evolution" class=3D"toc-link node-=
name--H2 ">7. API Evolution</a><ul class=3D"toc-list  is-collapsible is-col=
lapsed"><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/doc=
s/current/user-guide/#api-evolution-version-and-status" class=3D"toc-link n=
ode-name--H3 ">7.1. API Version and Status</a></li><li class=3D"toc-list-it=
em"><a href=3D"https://junit.org/junit5/docs/current/user-guide/#api-evolut=
ion-experimental-apis" class=3D"toc-link node-name--H3 ">7.2. Experimental =
APIs</a></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit=
5/docs/current/user-guide/#api-evolution-deprecated-apis" class=3D"toc-link=
 node-name--H3 ">7.3. Deprecated APIs</a></li><li class=3D"toc-list-item"><=
a href=3D"https://junit.org/junit5/docs/current/user-guide/#api-evolution-t=
ooling" class=3D"toc-link node-name--H3 ">7.4. @API Tooling Support</a></li=
></ul></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/=
docs/current/user-guide/#contributors" class=3D"toc-link node-name--H2 ">8.=
 Contributors</a></li><li class=3D"toc-list-item"><a href=3D"https://junit.=
org/junit5/docs/current/user-guide/#release-notes" class=3D"toc-link node-n=
ame--H2 ">9. Release Notes</a></li><li class=3D"toc-list-item"><a href=3D"h=
ttps://junit.org/junit5/docs/current/user-guide/#appendix" class=3D"toc-lin=
k node-name--H2 ">10. Appendix</a><ul class=3D"toc-list  is-collapsible is-=
collapsed"><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/=
docs/current/user-guide/#reproducible-builds" class=3D"toc-link node-name--=
H3 ">10.1. Reproducible Builds</a></li><li class=3D"toc-list-item"><a href=
=3D"https://junit.org/junit5/docs/current/user-guide/#dependency-metadata" =
class=3D"toc-link node-name--H3 ">10.2. Dependency Metadata</a><ul class=3D=
"toc-list  is-collapsible is-collapsed"><li class=3D"toc-list-item"><a href=
=3D"https://junit.org/junit5/docs/current/user-guide/#dependency-metadata-j=
unit-platform" class=3D"toc-link node-name--H4 ">10.2.1. JUnit Platform</a>=
</li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/c=
urrent/user-guide/#dependency-metadata-junit-jupiter" class=3D"toc-link nod=
e-name--H4 ">10.2.2. JUnit Jupiter</a></li><li class=3D"toc-list-item"><a h=
ref=3D"https://junit.org/junit5/docs/current/user-guide/#dependency-metadat=
a-junit-vintage" class=3D"toc-link node-name--H4 ">10.2.3. JUnit Vintage</a=
></li><li class=3D"toc-list-item"><a href=3D"https://junit.org/junit5/docs/=
current/user-guide/#dependency-metadata-junit-bom" class=3D"toc-link node-n=
ame--H4 ">10.2.4. Bill of Materials (BOM)</a></li><li class=3D"toc-list-ite=
m"><a href=3D"https://junit.org/junit5/docs/current/user-guide/#dependency-=
metadata-dependencies" class=3D"toc-link node-name--H4 ">10.2.5. Dependenci=
es</a></li></ul></li><li class=3D"toc-list-item"><a href=3D"https://junit.o=
rg/junit5/docs/current/user-guide/#dependency-diagram" class=3D"toc-link no=
de-name--H3 ">10.3. Dependency Diagram</a></li></ul></li></ul></div>
</div>
</div>
<div id=3D"content">
<div class=3D"sect1">
<h2 id=3D"overview"><a class=3D"anchor" href=3D"https://junit.org/junit5/do=
cs/current/user-guide/#overview"></a>1. Overview</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>The goal of this document is to provide comprehensive reference document=
ation for
programmers writing tests, extension authors, and engine authors as well as=
 build tool
and IDE vendors.</p>
</div>
<div class=3D"paragraph">
<p>This document is also available as a <a href=3D"https://junit.org/junit5=
/docs/current/user-guide/junit-user-guide-5.8.2.pdf">PDF download</a>.</p>
</div>
<div class=3D"sect2">
<h3 id=3D"overview-what-is-junit-5"><a class=3D"anchor" href=3D"https://jun=
it.org/junit5/docs/current/user-guide/#overview-what-is-junit-5"></a>1.1. W=
hat is JUnit 5?</h3>
<div class=3D"paragraph">
<p>Unlike previous versions of JUnit, JUnit 5 is composed of several differ=
ent modules from
three different sub-projects.</p>
</div>
<div class=3D"paragraph">
<p><strong>JUnit 5 =3D <em>JUnit Platform</em> + <em>JUnit Jupiter</em> + <=
em>JUnit Vintage</em></strong></p>
</div>
<div class=3D"paragraph">
<p>The <strong>JUnit Platform</strong> serves as a foundation for <a href=
=3D"https://junit.org/junit5/docs/current/user-guide/#launcher-api">launchi=
ng testing
frameworks</a> on the JVM. It also defines the <code><a href=3D"https://jun=
it.org/junit5/docs/current/api/org.junit.platform.engine/org/junit/platform=
/engine/TestEngine.html">TestEngine</a></code> API for developing a testing
framework that runs on the platform. Furthermore, the platform provides a
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-=
console-launcher">Console Launcher</a> to launch the platform from the
command line and the <a href=3D"https://junit.org/junit5/docs/current/user-=
guide/#junit-platform-suite-engine">JUnit Platform Suite Engine</a> for run=
ning a custom test suite using
one or more test engines on the platform. First-class support for the JUnit=
 Platform also
exists in popular IDEs (see <a href=3D"https://junit.org/junit5/docs/curren=
t/user-guide/#running-tests-ide-intellij-idea">IntelliJ IDEA</a>,
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-=
ide-eclipse">Eclipse</a>, <a href=3D"https://junit.org/junit5/docs/current/=
user-guide/#running-tests-ide-netbeans">NetBeans</a>, and
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-=
ide-vscode">Visual Studio Code</a>) and build tools (see <a href=3D"https:/=
/junit.org/junit5/docs/current/user-guide/#running-tests-build-gradle">Grad=
le</a>,
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-=
build-maven">Maven</a>, and <a href=3D"https://junit.org/junit5/docs/curren=
t/user-guide/#running-tests-build-ant">Ant</a>).</p>
</div>
<div class=3D"paragraph">
<p><strong>JUnit Jupiter</strong> is the combination of the new <a href=3D"=
https://junit.org/junit5/docs/current/user-guide/#writing-tests">programmin=
g model</a> and
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions">ex=
tension model</a> for writing tests and extensions in JUnit 5. The Jupiter
sub-project provides a <code>TestEngine</code> for running Jupiter based te=
sts on the platform.</p>
</div>
<div class=3D"paragraph">
<p><strong>JUnit Vintage</strong> provides a <code>TestEngine</code> for ru=
nning JUnit 3 and JUnit 4 based tests on
the platform. It requires JUnit 4.12 or later to be present on the class pa=
th or module
path.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"overview-java-versions"><a class=3D"anchor" href=3D"https://junit=
.org/junit5/docs/current/user-guide/#overview-java-versions"></a>1.2. Suppo=
rted Java Versions</h3>
<div class=3D"paragraph">
<p>JUnit 5 requires Java 8 (or higher) at runtime. However, you can still t=
est code that
has been compiled with previous versions of the JDK.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"overview-getting-help"><a class=3D"anchor" href=3D"https://junit.=
org/junit5/docs/current/user-guide/#overview-getting-help"></a>1.3. Getting=
 Help</h3>
<div class=3D"paragraph">
<p>Ask JUnit 5 related questions on <a href=3D"https://stackoverflow.com/qu=
estions/tagged/junit5">Stack Overflow</a> or chat with the community on <a =
href=3D"https://gitter.im/junit-team/junit5">Gitter</a>.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"overview-getting-started"><a class=3D"anchor" href=3D"https://jun=
it.org/junit5/docs/current/user-guide/#overview-getting-started"></a>1.4. G=
etting Started</h3>
<div class=3D"sect3">
<h4 id=3D"overview-getting-started-junit-artifacts"><a class=3D"anchor" hre=
f=3D"https://junit.org/junit5/docs/current/user-guide/#overview-getting-sta=
rted-junit-artifacts"></a>1.4.1. Downloading JUnit Artifacts</h4>
<div class=3D"paragraph">
<p>To find out what artifacts are available for download and inclusion in y=
our project, refer
to <a href=3D"https://junit.org/junit5/docs/current/user-guide/#dependency-=
metadata">Dependency Metadata</a>. To set up dependency management for your=
 build, refer to
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-=
build">Build Support</a> and the <a href=3D"https://junit.org/junit5/docs/c=
urrent/user-guide/#overview-getting-started-example-projects">Example Proje=
cts</a>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"overview-getting-started-features"><a class=3D"anchor" href=3D"ht=
tps://junit.org/junit5/docs/current/user-guide/#overview-getting-started-fe=
atures"></a>1.4.2. JUnit 5 Features</h4>
<div class=3D"paragraph">
<p>To find out what features are available in JUnit 5 and how to use them, =
read the
corresponding sections of this User Guide, organized by topic.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tes=
ts">Writing Tests in JUnit Jupiter</a></p>
</li>
<li>
<p><a href=3D"https://junit.org/junit5/docs/current/user-guide/#migrating-f=
rom-junit4">Migrating from JUnit 4 to JUnit Jupiter</a></p>
</li>
<li>
<p><a href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tes=
ts">Running Tests</a></p>
</li>
<li>
<p><a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions"=
>Extension Model for JUnit Jupiter</a></p>
</li>
<li>
<p>Advanced Topics</p>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"https://junit.org/junit5/docs/current/user-guide/#launcher-ap=
i">JUnit Platform Launcher API</a></p>
</li>
<li>
<p><a href=3D"https://junit.org/junit5/docs/current/user-guide/#testkit">JU=
nit Platform Test Kit</a></p>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"overview-getting-started-example-projects"><a class=3D"anchor" hr=
ef=3D"https://junit.org/junit5/docs/current/user-guide/#overview-getting-st=
arted-example-projects"></a>1.4.3. Example Projects</h4>
<div class=3D"paragraph">
<p>To see complete, working examples of projects that you can copy and expe=
riment with, the
<a href=3D"https://github.com/junit-team/junit5-samples"><code>junit5-sampl=
es</code></a> repository is a good place to start. The
<code>junit5-samples</code> repository hosts a collection of sample project=
s based on JUnit Jupiter,
JUnit Vintage, and other testing frameworks. You=E2=80=99ll find appropriat=
e build scripts (e.g.,
<code>build.gradle</code>, <code>pom.xml</code>, etc.) in the example proje=
cts. The links below highlight some
of the combinations you can choose from.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>For Gradle and Java, check out the <code><a href=3D"https://github.com/j=
unit-team/junit5-samples/tree/r5.8.2/junit5-jupiter-starter-gradle">junit5-=
jupiter-starter-gradle</a></code> project.</p>
</li>
<li>
<p>For Gradle and Kotlin, check out the <code><a href=3D"https://github.com=
/junit-team/junit5-samples/tree/r5.8.2/junit5-jupiter-starter-gradle-kotlin=
">junit5-jupiter-starter-gradle-kotlin</a></code> project.</p>
</li>
<li>
<p>For Gradle and Groovy, check out the <code><a href=3D"https://github.com=
/junit-team/junit5-samples/tree/r5.8.2/junit5-jupiter-starter-gradle-groovy=
">junit5-jupiter-starter-gradle-groovy</a></code> project.</p>
</li>
<li>
<p>For Maven, check out the <code><a href=3D"https://github.com/junit-team/=
junit5-samples/tree/r5.8.2/junit5-jupiter-starter-maven">junit5-jupiter-sta=
rter-maven</a></code> project.</p>
</li>
<li>
<p>For Ant, check out the <code><a href=3D"https://github.com/junit-team/ju=
nit5-samples/tree/r5.8.2/junit5-jupiter-starter-ant">junit5-jupiter-starter=
-ant</a></code> project.</p>
</li>
</ul>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"writing-tests"><a class=3D"anchor" href=3D"https://junit.org/juni=
t5/docs/current/user-guide/#writing-tests"></a>2. Writing Tests</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>The following example provides a glimpse at the minimum requirements for=
 writing a test in
JUnit Jupiter. Subsequent sections of this chapter will provide further det=
ails on all
available features.</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">A first test case</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">static</span> <span class=3D"n">org</span>=
<span class=3D"o">.</span><span class=3D"na">junit</span><span class=3D"o">=
.</span><span class=3D"na">jupiter</span><span class=3D"o">.</span><span cl=
ass=3D"na">api</span><span class=3D"o">.</span><span class=3D"na">Assertion=
s</span><span class=3D"o">.</span><span class=3D"na">assertEquals</span><sp=
an class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">example.util.Calculator=
</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>

<span class=3D"kd">class</span> <span class=3D"nc">MyFirstJUnitJupiterTests=
</span> <span class=3D"o">{</span>

    <span class=3D"kd">private</span> <span class=3D"kd">final</span> <span=
 class=3D"nc">Calculator</span> <span class=3D"n">calculator</span> <span c=
lass=3D"o">=3D</span> <span class=3D"k">new</span> <span class=3D"nc">Calcu=
lator</span><span class=3D"o">();</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">addition</span><span =
class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"mi">2</span><span class=3D"o">,</span> <span class=3D"n">calcula=
tor</span><span class=3D"o">.</span><span class=3D"na">add</span><span clas=
s=3D"o">(</span><span class=3D"mi">1</span><span class=3D"o">,</span> <span=
 class=3D"mi">1</span><span class=3D"o">));</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"writing-tests-annotations"><a class=3D"anchor" href=3D"https://ju=
nit.org/junit5/docs/current/user-guide/#writing-tests-annotations"></a>2.1.=
 Annotations</h3>
<div class=3D"paragraph">
<p>JUnit Jupiter supports the following annotations for configuring tests a=
nd extending the
framework.</p>
</div>
<div class=3D"paragraph">
<p>Unless otherwise stated, all core annotations are located in the <code><=
a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupiter.api/o=
rg/junit/jupiter/api/package-summary.html">org.junit.jupiter.api</a></code>=
 package
in the <code>junit-jupiter-api</code> module.</p>
</div>
<table class=3D"tableblock frame-all grid-all stretch">
<colgroup>
<col style=3D"width: 20%;">
<col style=3D"width: 80%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Annotation</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@Test</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Den=
otes that a method is a test method. Unlike JUnit 4=E2=80=99s <code>@Test</=
code> annotation, this annotation does not declare any attributes, since te=
st extensions in JUnit Jupiter operate based on their own dedicated annotat=
ions. Such methods are <em>inherited</em> unless they are <em>overridden</e=
m>.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@ParameterizedTest</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Den=
otes that a method is a <a href=3D"https://junit.org/junit5/docs/current/us=
er-guide/#writing-tests-parameterized-tests">parameterized test</a>. Such m=
ethods are <em>inherited</em> unless they are <em>overridden</em>.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@RepeatedTest</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Den=
otes that a method is a test template for a <a href=3D"https://junit.org/ju=
nit5/docs/current/user-guide/#writing-tests-repeated-tests">repeated test</=
a>. Such methods are <em>inherited</em> unless they are <em>overridden</em>=
.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@TestFactory</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Den=
otes that a method is a test factory for <a href=3D"https://junit.org/junit=
5/docs/current/user-guide/#writing-tests-dynamic-tests">dynamic tests</a>. =
Such methods are <em>inherited</em> unless they are <em>overridden</em>.</p=
></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@TestTemplate</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Den=
otes that a method is a <a href=3D"https://junit.org/junit5/docs/current/us=
er-guide/#writing-tests-test-templates">template for test cases</a> designe=
d to be invoked multiple times depending on the number of invocation contex=
ts returned by the registered <a href=3D"https://junit.org/junit5/docs/curr=
ent/user-guide/#extensions-test-templates">providers</a>. Such methods are =
<em>inherited</em> unless they are <em>overridden</em>.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@TestClassOrder</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Use=
d to configure the <a href=3D"https://junit.org/junit5/docs/current/user-gu=
ide/#writing-tests-test-execution-order-classes">test class execution order=
</a> for <code>@Nested</code> test classes in the annotated test class. Suc=
h annotations are <em>inherited</em>.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@TestMethodOrder</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Use=
d to configure the <a href=3D"https://junit.org/junit5/docs/current/user-gu=
ide/#writing-tests-test-execution-order-methods">test method execution orde=
r</a> for the annotated test class; similar to JUnit 4=E2=80=99s <code>@Fix=
MethodOrder</code>. Such annotations are <em>inherited</em>.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@TestInstance</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Use=
d to configure the <a href=3D"https://junit.org/junit5/docs/current/user-gu=
ide/#writing-tests-test-instance-lifecycle">test instance lifecycle</a> for=
 the annotated test class. Such annotations are <em>inherited</em>.</p></td=
>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@DisplayName</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dec=
lares a custom <a href=3D"https://junit.org/junit5/docs/current/user-guide/=
#writing-tests-display-names">display name</a> for the test class or test m=
ethod. Such annotations are not <em>inherited</em>.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@DisplayNameGeneration</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dec=
lares a custom <a href=3D"https://junit.org/junit5/docs/current/user-guide/=
#writing-tests-display-name-generator">display name generator</a> for the t=
est class. Such annotations are <em>inherited</em>.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@BeforeEach</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Den=
otes that the annotated method should be executed <em>before</em> <strong>e=
ach</strong> <code>@Test</code>, <code>@RepeatedTest</code>, <code>@Paramet=
erizedTest</code>, or <code>@TestFactory</code> method in the current class=
; analogous to JUnit 4=E2=80=99s <code>@Before</code>. Such methods are <em=
>inherited</em> unless they are <em>overridden</em>.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@AfterEach</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Den=
otes that the annotated method should be executed <em>after</em> <strong>ea=
ch</strong> <code>@Test</code>, <code>@RepeatedTest</code>, <code>@Paramete=
rizedTest</code>, or <code>@TestFactory</code> method in the current class;=
 analogous to JUnit 4=E2=80=99s <code>@After</code>. Such methods are <em>i=
nherited</em> unless they are <em>overridden</em>.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@BeforeAll</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Den=
otes that the annotated method should be executed <em>before</em> <strong>a=
ll</strong> <code>@Test</code>, <code>@RepeatedTest</code>, <code>@Paramete=
rizedTest</code>, and <code>@TestFactory</code> methods in the current clas=
s; analogous to JUnit 4=E2=80=99s <code>@BeforeClass</code>. Such methods a=
re <em>inherited</em> (unless they are <em>hidden</em> or <em>overridden</e=
m>) and must be <code>static</code> (unless the "per-class" <a href=3D"http=
s://junit.org/junit5/docs/current/user-guide/#writing-tests-test-instance-l=
ifecycle">test instance lifecycle</a> is used).</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@AfterAll</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Den=
otes that the annotated method should be executed <em>after</em> <strong>al=
l</strong> <code>@Test</code>, <code>@RepeatedTest</code>, <code>@Parameter=
izedTest</code>, and <code>@TestFactory</code> methods in the current class=
; analogous to JUnit 4=E2=80=99s <code>@AfterClass</code>. Such methods are=
 <em>inherited</em> (unless they are <em>hidden</em> or <em>overridden</em>=
) and must be <code>static</code> (unless the "per-class" <a href=3D"https:=
//junit.org/junit5/docs/current/user-guide/#writing-tests-test-instance-lif=
ecycle">test instance lifecycle</a> is used).</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@Nested</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Den=
otes that the annotated class is a non-static <a href=3D"https://junit.org/=
junit5/docs/current/user-guide/#writing-tests-nested">nested test class</a>=
. <code>@BeforeAll</code> and <code>@AfterAll</code> methods cannot be used=
 directly in a <code>@Nested</code> test class unless the "per-class" <a hr=
ef=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-test-=
instance-lifecycle">test instance lifecycle</a> is used. Such annotations a=
re not <em>inherited</em>.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@Tag</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Use=
d to declare <a href=3D"https://junit.org/junit5/docs/current/user-guide/#w=
riting-tests-tagging-and-filtering">tags for filtering tests</a>, either at=
 the class or method level; analogous to test groups in TestNG or Categorie=
s in JUnit 4. Such annotations are <em>inherited</em> at the class level bu=
t not at the method level.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@Disabled</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Use=
d to <a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-t=
ests-disabling">disable</a> a test class or test method; analogous to JUnit=
 4=E2=80=99s <code>@Ignore</code>. Such annotations are not <em>inherited</=
em>.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@Timeout</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Use=
d to fail a test, test factory, test template, or lifecycle method if its e=
xecution exceeds a given duration. Such annotations are <em>inherited</em>.=
</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@ExtendWith</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Use=
d to <a href=3D"https://junit.org/junit5/docs/current/user-guide/#extension=
s-registration-declarative">register extensions declaratively</a>. Such ann=
otations are <em>inherited</em>.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@RegisterExtension</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Use=
d to <a href=3D"https://junit.org/junit5/docs/current/user-guide/#extension=
s-registration-programmatic">register extensions programmatically</a> via f=
ields. Such fields are <em>inherited</em> unless they are <em>shadowed</em>=
.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@TempDir</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Use=
d to supply a <a href=3D"https://junit.org/junit5/docs/current/user-guide/#=
writing-tests-built-in-extensions-TempDirectory">temporary directory</a> vi=
a field injection or parameter injection in a lifecycle method or test meth=
od; located in the <code>org.junit.jupiter.api.io</code> package.</p></td>
</tr>
</tbody>
</table>
<div class=3D"admonitionblock warning">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-warning" title=3D"Warning"></i>
</td>
<td class=3D"content">
Some annotations may currently be <em>experimental</em>. Consult the table =
in
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#api-evolution-=
experimental-apis">Experimental APIs</a> for details.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-meta-annotations"><a class=3D"anchor" href=3D"https=
://junit.org/junit5/docs/current/user-guide/#writing-tests-meta-annotations=
"></a>2.1.1. Meta-Annotations and Composed Annotations</h4>
<div class=3D"paragraph">
<p>JUnit Jupiter annotations can be used as <em>meta-annotations</em>. That=
 means that you can
define your own <em>composed annotation</em> that will automatically <em>in=
herit</em> the semantics of
its meta-annotations.</p>
</div>
<div class=3D"paragraph">
<p>For example, instead of copying and pasting <code>@Tag("fast")</code> th=
roughout your code base (see
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-=
tagging-and-filtering">Tagging and Filtering</a>), you can create a custom =
<em>composed annotation</em>
named <code>@Fast</code> as follows. <code>@Fast</code> can then be used as=
 a drop-in replacement for
<code>@Tag("fast")</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">java.lang.annotation.ElementType</span><sp=
an class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.lang.annotation.Re=
tention</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.lang.annotation.Re=
tentionPolicy</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.lang.annotation.Ta=
rget</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
ag</span><span class=3D"o">;</span>

<span class=3D"nd">@Target</span><span class=3D"o">({</span> <span class=3D=
"nc">ElementType</span><span class=3D"o">.</span><span class=3D"na">TYPE</s=
pan><span class=3D"o">,</span> <span class=3D"nc">ElementType</span><span c=
lass=3D"o">.</span><span class=3D"na">METHOD</span> <span class=3D"o">})</s=
pan>
<span class=3D"nd">@Retention</span><span class=3D"o">(</span><span class=
=3D"nc">RetentionPolicy</span><span class=3D"o">.</span><span class=3D"na">=
RUNTIME</span><span class=3D"o">)</span>
<span class=3D"nd">@Tag</span><span class=3D"o">(</span><span class=3D"s">"=
fast"</span><span class=3D"o">)</span>
<span class=3D"kd">public</span> <span class=3D"nd">@interface</span> <span=
 class=3D"nc">Fast</span> <span class=3D"o">{</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The following <code>@Test</code> method demonstrates usage of the <code>=
@Fast</code> annotation.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@Fast</span>
<span class=3D"nd">@Test</span>
<span class=3D"kt">void</span> <span class=3D"nf">myFastTest</span><span cl=
ass=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You can even take that one step further by introducing a custom <code>@F=
astTest</code> annotation
that can be used as a drop-in replacement for <code>@Tag("fast")</code> <em=
>and</em> <code>@Test</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">java.lang.annotation.ElementType</span><sp=
an class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.lang.annotation.Re=
tention</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.lang.annotation.Re=
tentionPolicy</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.lang.annotation.Ta=
rget</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
ag</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>

<span class=3D"nd">@Target</span><span class=3D"o">(</span><span class=3D"n=
c">ElementType</span><span class=3D"o">.</span><span class=3D"na">METHOD</s=
pan><span class=3D"o">)</span>
<span class=3D"nd">@Retention</span><span class=3D"o">(</span><span class=
=3D"nc">RetentionPolicy</span><span class=3D"o">.</span><span class=3D"na">=
RUNTIME</span><span class=3D"o">)</span>
<span class=3D"nd">@Tag</span><span class=3D"o">(</span><span class=3D"s">"=
fast"</span><span class=3D"o">)</span>
<span class=3D"nd">@Test</span>
<span class=3D"kd">public</span> <span class=3D"nd">@interface</span> <span=
 class=3D"nc">FastTest</span> <span class=3D"o">{</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>JUnit automatically recognizes the following as a <code>@Test</code> met=
hod that is tagged with
"fast".</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@FastTest</span>
<span class=3D"kt">void</span> <span class=3D"nf">myFastTest</span><span cl=
ass=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"writing-tests-classes-and-methods"><a class=3D"anchor" href=3D"ht=
tps://junit.org/junit5/docs/current/user-guide/#writing-tests-classes-and-m=
ethods"></a>2.2. Test Classes and Methods</h3>
<div class=3D"paragraph">
<p><strong>Test Class</strong>: any top-level class, <code>static</code> me=
mber class, or <a href=3D"https://junit.org/junit5/docs/current/user-guide/=
#writing-tests-nested"><code>@Nested</code> class</a> that contains at leas=
t one <em>test method</em>.</p>
</div>
<div class=3D"paragraph">
<p>Test classes must not be <code>abstract</code> and must have a single co=
nstructor.</p>
</div>
<div class=3D"paragraph">
<p><strong>Test Method</strong>: any instance method that is directly annot=
ated or meta-annotated with
<code>@Test</code>, <code>@RepeatedTest</code>, <code>@ParameterizedTest</c=
ode>, <code>@TestFactory</code>, or <code>@TestTemplate</code>.</p>
</div>
<div class=3D"paragraph">
<p><strong>Lifecycle Method</strong>: any method that is directly annotated=
 or meta-annotated with
<code>@BeforeAll</code>, <code>@AfterAll</code>, <code>@BeforeEach</code>, =
or <code>@AfterEach</code>.</p>
</div>
<div class=3D"paragraph">
<p>Test methods and lifecycle methods may be declared locally within the cu=
rrent test class,
inherited from superclasses, or inherited from interfaces (see
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-=
test-interfaces-and-default-methods">Test Interfaces and Default Methods</a=
>). In addition, test methods and
lifecycle methods must not be <code>abstract</code> and must not return a v=
alue (except <code>@TestFactory</code>
methods which are required to return a value).</p>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
<div class=3D"title">Class and method visibility</div>
<div class=3D"paragraph">
<p>Test classes, test methods, and lifecycle methods are not required to be=
 <code>public</code>, but
they must <em>not</em> be <code>private</code>.</p>
</div>
<div class=3D"paragraph">
<p>It is generally recommended to omit the <code>public</code> modifier for=
 test classes, test methods,
and lifecycle methods unless there is a technical reason for doing so =E2=
=80=93 for example, when
a test class is extended by a test class in another package. Another techni=
cal reason for
making classes and methods <code>public</code> is to simplify testing on th=
e module path when using
the Java Module System.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>The following test class demonstrates the use of <code>@Test</code> meth=
ods and all supported
lifecycle methods. For further information on runtime semantics, see
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-=
test-execution-order">Test Execution Order</a> and
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-exe=
cution-order-wrapping-behavior">Wrapping Behavior of Callbacks</a>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">A standard test class</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">static</span> <span class=3D"n">org</span>=
<span class=3D"o">.</span><span class=3D"na">junit</span><span class=3D"o">=
.</span><span class=3D"na">jupiter</span><span class=3D"o">.</span><span cl=
ass=3D"na">api</span><span class=3D"o">.</span><span class=3D"na">Assertion=
s</span><span class=3D"o">.</span><span class=3D"na">fail</span><span class=
=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">Assumptions</span><span class=3D"o">.</span><span class=3D"na">as=
sumeTrue</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.A=
fterAll</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.A=
fterEach</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.B=
eforeAll</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.B=
eforeEach</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.D=
isabled</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>

<span class=3D"kd">class</span> <span class=3D"nc">StandardTests</span> <sp=
an class=3D"o">{</span>

    <span class=3D"nd">@BeforeAll</span>
    <span class=3D"kd">static</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">initAll</span><span class=3D"o">()</span> <span class=3D"o">{</=
span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@BeforeEach</span>
    <span class=3D"kt">void</span> <span class=3D"nf">init</span><span clas=
s=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">succeedingTest</span>=
<span class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">failingTest</span><sp=
an class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">fail</span><span class=3D"o">(</span><span class=
=3D"s">"a failing test"</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"nd">@Disabled</span><span class=3D"o">(</span><span clas=
s=3D"s">"for demonstration purposes"</span><span class=3D"o">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">skippedTest</span><sp=
an class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"c1">// not executed</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">abortedTest</span><sp=
an class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">assumeTrue</span><span class=3D"o">(</span><span =
class=3D"s">"abc"</span><span class=3D"o">.</span><span class=3D"na">contai=
ns</span><span class=3D"o">(</span><span class=3D"s">"Z"</span><span class=
=3D"o">));</span>
        <span class=3D"n">fail</span><span class=3D"o">(</span><span class=
=3D"s">"test should have been aborted"</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@AfterEach</span>
    <span class=3D"kt">void</span> <span class=3D"nf">tearDown</span><span =
class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@AfterAll</span>
    <span class=3D"kd">static</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">tearDownAll</span><span class=3D"o">()</span> <span class=3D"o"=
>{</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"writing-tests-display-names"><a class=3D"anchor" href=3D"https://=
junit.org/junit5/docs/current/user-guide/#writing-tests-display-names"></a>=
2.3. Display Names</h3>
<div class=3D"paragraph">
<p>Test classes and test methods can declare custom display names via <code=
>@DisplayName</code>=E2=80=89=E2=80=94=E2=80=89with
spaces, special characters, and even emojis=E2=80=89=E2=80=94=E2=80=89that =
will be displayed in test reports and
by test runners and IDEs.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">org.junit.jupiter.api.DisplayName</span><s=
pan class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>

<span class=3D"nd">@DisplayName</span><span class=3D"o">(</span><span class=
=3D"s">"A special test case"</span><span class=3D"o">)</span>
<span class=3D"kd">class</span> <span class=3D"nc">DisplayNameDemo</span> <=
span class=3D"o">{</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"nd">@DisplayName</span><span class=3D"o">(</span><span c=
lass=3D"s">"Custom test name containing spaces"</span><span class=3D"o">)</=
span>
    <span class=3D"kt">void</span> <span class=3D"nf">testWithDisplayNameCo=
ntainingSpaces</span><span class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"nd">@DisplayName</span><span class=3D"o">(</span><span c=
lass=3D"s">"=E2=95=AF=C2=B0=E2=96=A1=C2=B0=EF=BC=89=E2=95=AF"</span><span c=
lass=3D"o">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">testWithDisplayNameCo=
ntainingSpecialCharacters</span><span class=3D"o">()</span> <span class=3D"=
o">{</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"nd">@DisplayName</span><span class=3D"o">(</span><span c=
lass=3D"s">"=F0=9F=98=B1"</span><span class=3D"o">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">testWithDisplayNameCo=
ntainingEmoji</span><span class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-display-name-generator"><a class=3D"anchor" href=3D=
"https://junit.org/junit5/docs/current/user-guide/#writing-tests-display-na=
me-generator"></a>2.3.1. Display Name Generators</h4>
<div class=3D"paragraph">
<p>JUnit Jupiter supports custom display name generators that can be config=
ured via the
<code>@DisplayNameGeneration</code> annotation. Values provided via <code>@=
DisplayName</code> annotations
always take precedence over display names generated by a <code>DisplayNameG=
enerator</code>.</p>
</div>
<div class=3D"paragraph">
<p>Generators can be created by implementing <code>DisplayNameGenerator</co=
de>. Here are some default
ones available in Jupiter:</p>
</div>
<table class=3D"tableblock frame-all grid-all stretch">
<colgroup>
<col style=3D"width: 20%;">
<col style=3D"width: 80%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">DisplayNameGenerator</th>
<th class=3D"tableblock halign-left valign-top">Behavior</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>Standard</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Mat=
ches the standard display name generation behavior in place since JUnit Jup=
iter 5.0 was released.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>Simple</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Rem=
oves trailing parentheses for methods with no parameters.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>ReplaceUnderscores</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Rep=
laces underscores with spaces.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>IndicativeSentences</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Gen=
erates complete sentences by concatenating the names of the test and the en=
closing classes.</p></td>
</tr>
</tbody>
</table>
<div class=3D"paragraph">
<p>Note that for <code>IndicativeSentences</code>, you can customize the se=
parator and the
underlying generator by using <code>@IndicativeSentencesGeneration</code> a=
s shown in the
following example.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">org.junit.jupiter.api.DisplayName</span><s=
pan class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.D=
isplayNameGeneration</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.D=
isplayNameGenerator</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.I=
ndicativeSentencesGeneration</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.N=
ested</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.param=
s.ParameterizedTest</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.param=
s.provider.ValueSource</span><span class=3D"o">;</span>

<span class=3D"kd">class</span> <span class=3D"nc">DisplayNameGeneratorDemo=
</span> <span class=3D"o">{</span>

    <span class=3D"nd">@Nested</span>
    <span class=3D"nd">@DisplayNameGeneration</span><span class=3D"o">(</sp=
an><span class=3D"nc">DisplayNameGenerator</span><span class=3D"o">.</span>=
<span class=3D"na">ReplaceUnderscores</span><span class=3D"o">.</span><span=
 class=3D"na">class</span><span class=3D"o">)</span>
    <span class=3D"kd">class</span> <span class=3D"nc">A_year_is_not_suppor=
ted</span> <span class=3D"o">{</span>

        <span class=3D"nd">@Test</span>
        <span class=3D"kt">void</span> <span class=3D"nf">if_it_is_zero</sp=
an><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"o">}</span>

        <span class=3D"nd">@DisplayName</span><span class=3D"o">(</span><sp=
an class=3D"s">"A negative value for year is not supported by the leap year=
 computation."</span><span class=3D"o">)</span>
        <span class=3D"nd">@ParameterizedTest</span><span class=3D"o">(</sp=
an><span class=3D"n">name</span> <span class=3D"o">=3D</span> <span class=
=3D"s">"For example, year {0} is not supported."</span><span class=3D"o">)<=
/span>
        <span class=3D"nd">@ValueSource</span><span class=3D"o">(</span><sp=
an class=3D"n">ints</span> <span class=3D"o">=3D</span> <span class=3D"o">{=
</span> <span class=3D"o">-</span><span class=3D"mi">1</span><span class=3D=
"o">,</span> <span class=3D"o">-</span><span class=3D"mi">4</span> <span cl=
ass=3D"o">})</span>
        <span class=3D"kt">void</span> <span class=3D"nf">if_it_is_negative=
</span><span class=3D"o">(</span><span class=3D"kt">int</span> <span class=
=3D"n">year</span><span class=3D"o">)</span> <span class=3D"o">{</span>
        <span class=3D"o">}</span>

    <span class=3D"o">}</span>

    <span class=3D"nd">@Nested</span>
    <span class=3D"nd">@IndicativeSentencesGeneration</span><span class=3D"=
o">(</span><span class=3D"n">separator</span> <span class=3D"o">=3D</span> =
<span class=3D"s">" -&gt; "</span><span class=3D"o">,</span> <span class=3D=
"n">generator</span> <span class=3D"o">=3D</span> <span class=3D"nc">Displa=
yNameGenerator</span><span class=3D"o">.</span><span class=3D"na">ReplaceUn=
derscores</span><span class=3D"o">.</span><span class=3D"na">class</span><s=
pan class=3D"o">)</span>
    <span class=3D"kd">class</span> <span class=3D"nc">A_year_is_a_leap_yea=
r</span> <span class=3D"o">{</span>

        <span class=3D"nd">@Test</span>
        <span class=3D"kt">void</span> <span class=3D"nf">if_it_is_divisibl=
e_by_4_but_not_by_100</span><span class=3D"o">()</span> <span class=3D"o">{=
</span>
        <span class=3D"o">}</span>

        <span class=3D"nd">@ParameterizedTest</span><span class=3D"o">(</sp=
an><span class=3D"n">name</span> <span class=3D"o">=3D</span> <span class=
=3D"s">"Year {0} is a leap year."</span><span class=3D"o">)</span>
        <span class=3D"nd">@ValueSource</span><span class=3D"o">(</span><sp=
an class=3D"n">ints</span> <span class=3D"o">=3D</span> <span class=3D"o">{=
</span> <span class=3D"mi">2016</span><span class=3D"o">,</span> <span clas=
s=3D"mi">2020</span><span class=3D"o">,</span> <span class=3D"mi">2048</spa=
n> <span class=3D"o">})</span>
        <span class=3D"kt">void</span> <span class=3D"nf">if_it_is_one_of_t=
he_following_years</span><span class=3D"o">(</span><span class=3D"kt">int</=
span> <span class=3D"n">year</span><span class=3D"o">)</span> <span class=
=3D"o">{</span>
        <span class=3D"o">}</span>

    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code>+-- DisplayNameGeneratorDemo [OK]
  +-- A year is not supported [OK]
  | +-- A negative value for year is not supported by the leap year computa=
tion. [OK]
  | | +-- For example, year -1 is not supported. [OK]
  | | '-- For example, year -4 is not supported. [OK]
  | '-- if it is zero() [OK]
  '-- A year is a leap year [OK]
    +-- A year is a leap year -&gt; if it is divisible by 4 but not by 100.=
 [OK]
    '-- A year is a leap year -&gt; if it is one of the following years. [O=
K]
      +-- Year 2016 is a leap year. [OK]
      +-- Year 2020 is a leap year. [OK]
      '-- Year 2048 is a leap year. [OK]</code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-display-name-generator-default"><a class=3D"anchor"=
 href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-di=
splay-name-generator-default"></a>2.3.2. Setting the Default Display Name G=
enerator</h4>
<div class=3D"paragraph">
<p>You can use the <code>junit.jupiter.displayname.generator.default</code>
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-=
config-params">configuration parameter</a> to specify the fully qualified
class name of the <code>DisplayNameGenerator</code> you would like to use b=
y default. Just like for
display name generators configured via the <code>@DisplayNameGeneration</co=
de> annotation, the
supplied class has to implement the <code>DisplayNameGenerator</code> inter=
face. The default display
name generator will be used for all tests unless the <code>@DisplayNameGene=
ration</code> annotation
is present on an enclosing test class or test interface. Values provided vi=
a
<code>@DisplayName</code> annotations always take precedence over display n=
ames generated by a
<code>DisplayNameGenerator</code>.</p>
</div>
<div class=3D"paragraph">
<p>For example, to use the <code>ReplaceUnderscores</code> display name gen=
erator by default, you should
set the configuration parameter to the corresponding fully qualified class =
name (e.g., in
<code>src/test/resources/junit-platform.properties</code>):</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"properties"><span class=
=3D"py">junit.jupiter.displayname.generator.default</span> <span class=3D"p=
">=3D</span> <span class=3D"se">\
</span>    <span class=3D"s">org.junit.jupiter.api.DisplayNameGenerator$Rep=
laceUnderscores</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Similarly, you can specify the fully qualified name of any custom class =
that implements
<code>DisplayNameGenerator</code>.</p>
</div>
<div id=3D"writing-tests-display-name-generator-precedence-rules" class=3D"=
paragraph">
<p>In summary, the display name for a test class or method is determined ac=
cording to the
following precedence rules:</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>value of the <code>@DisplayName</code> annotation, if present</p>
</li>
<li>
<p>by calling the <code>DisplayNameGenerator</code> specified in the <code>=
@DisplayNameGeneration</code>
annotation, if present</p>
</li>
<li>
<p>by calling the default <code>DisplayNameGenerator</code> configured via =
the configuration
parameter, if present</p>
</li>
<li>
<p>by calling <code>org.junit.jupiter.api.DisplayNameGenerator.Standard</co=
de></p>
</li>
</ol>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"writing-tests-assertions"><a class=3D"anchor" href=3D"https://jun=
it.org/junit5/docs/current/user-guide/#writing-tests-assertions"></a>2.4. A=
ssertions</h3>
<div class=3D"paragraph">
<p>JUnit Jupiter comes with many of the assertion methods that JUnit 4 has =
and adds a few
that lend themselves well to being used with Java 8 lambdas. All JUnit Jupi=
ter assertions
are <code>static</code> methods in the <code><a href=3D"https://junit.org/j=
unit5/docs/current/api/org.junit.jupiter.api/org/junit/jupiter/api/Assertio=
ns.html">org.junit.jupiter.api.Assertions</a></code> class.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">static</span> <span class=3D"n">java</span=
><span class=3D"o">.</span><span class=3D"na">time</span><span class=3D"o">=
.</span><span class=3D"na">Duration</span><span class=3D"o">.</span><span c=
lass=3D"na">ofMillis</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">java</span><span class=3D"o">.</span><span class=3D"na">time</span=
><span class=3D"o">.</span><span class=3D"na">Duration</span><span class=3D=
"o">.</span><span class=3D"na">ofMinutes</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">Assertions</span><span class=3D"o">.</span><span class=3D"na">ass=
ertAll</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">Assertions</span><span class=3D"o">.</span><span class=3D"na">ass=
ertEquals</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">Assertions</span><span class=3D"o">.</span><span class=3D"na">ass=
ertNotNull</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">Assertions</span><span class=3D"o">.</span><span class=3D"na">ass=
ertThrows</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">Assertions</span><span class=3D"o">.</span><span class=3D"na">ass=
ertTimeout</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">Assertions</span><span class=3D"o">.</span><span class=3D"na">ass=
ertTimeoutPreemptively</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">Assertions</span><span class=3D"o">.</span><span class=3D"na">ass=
ertTrue</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">java.util.concurrent.Co=
untDownLatch</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">example.domain.Person</=
span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">example.util.Calculator=
</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>

<span class=3D"kd">class</span> <span class=3D"nc">AssertionsDemo</span> <s=
pan class=3D"o">{</span>

    <span class=3D"kd">private</span> <span class=3D"kd">final</span> <span=
 class=3D"nc">Calculator</span> <span class=3D"n">calculator</span> <span c=
lass=3D"o">=3D</span> <span class=3D"k">new</span> <span class=3D"nc">Calcu=
lator</span><span class=3D"o">();</span>

    <span class=3D"kd">private</span> <span class=3D"kd">final</span> <span=
 class=3D"nc">Person</span> <span class=3D"n">person</span> <span class=3D"=
o">=3D</span> <span class=3D"k">new</span> <span class=3D"nc">Person</span>=
<span class=3D"o">(</span><span class=3D"s">"Jane"</span><span class=3D"o">=
,</span> <span class=3D"s">"Doe"</span><span class=3D"o">);</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">standardAssertions</s=
pan><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"mi">2</span><span class=3D"o">,</span> <span class=3D"n">calcula=
tor</span><span class=3D"o">.</span><span class=3D"na">add</span><span clas=
s=3D"o">(</span><span class=3D"mi">1</span><span class=3D"o">,</span> <span=
 class=3D"mi">1</span><span class=3D"o">));</span>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"mi">4</span><span class=3D"o">,</span> <span class=3D"n">calcula=
tor</span><span class=3D"o">.</span><span class=3D"na">multiply</span><span=
 class=3D"o">(</span><span class=3D"mi">2</span><span class=3D"o">,</span> =
<span class=3D"mi">2</span><span class=3D"o">),</span>
                <span class=3D"s">"The optional failure message is now the =
last parameter"</span><span class=3D"o">);</span>
        <span class=3D"n">assertTrue</span><span class=3D"o">(</span><span =
class=3D"sc">'a'</span> <span class=3D"o">&lt;</span> <span class=3D"sc">'b=
'</span><span class=3D"o">,</span> <span class=3D"o">()</span> <span class=
=3D"o">-&gt;</span> <span class=3D"s">"Assertion messages can be lazily eva=
luated -- "</span>
                <span class=3D"o">+</span> <span class=3D"s">"to avoid cons=
tructing complex messages unnecessarily."</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">groupedAssertions</sp=
an><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"c1">// In a grouped assertion all assertions are exe=
cuted, and all</span>
        <span class=3D"c1">// failures will be reported together.</span>
        <span class=3D"n">assertAll</span><span class=3D"o">(</span><span c=
lass=3D"s">"person"</span><span class=3D"o">,</span>
            <span class=3D"o">()</span> <span class=3D"o">-&gt;</span> <spa=
n class=3D"n">assertEquals</span><span class=3D"o">(</span><span class=3D"s=
">"Jane"</span><span class=3D"o">,</span> <span class=3D"n">person</span><s=
pan class=3D"o">.</span><span class=3D"na">getFirstName</span><span class=
=3D"o">()),</span>
            <span class=3D"o">()</span> <span class=3D"o">-&gt;</span> <spa=
n class=3D"n">assertEquals</span><span class=3D"o">(</span><span class=3D"s=
">"Doe"</span><span class=3D"o">,</span> <span class=3D"n">person</span><sp=
an class=3D"o">.</span><span class=3D"na">getLastName</span><span class=3D"=
o">())</span>
        <span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">dependentAssertions</=
span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"c1">// Within a code block, if an assertion fails th=
e</span>
        <span class=3D"c1">// subsequent code in the same block will be ski=
pped.</span>
        <span class=3D"n">assertAll</span><span class=3D"o">(</span><span c=
lass=3D"s">"properties"</span><span class=3D"o">,</span>
            <span class=3D"o">()</span> <span class=3D"o">-&gt;</span> <spa=
n class=3D"o">{</span>
                <span class=3D"nc">String</span> <span class=3D"n">firstNam=
e</span> <span class=3D"o">=3D</span> <span class=3D"n">person</span><span =
class=3D"o">.</span><span class=3D"na">getFirstName</span><span class=3D"o"=
>();</span>
                <span class=3D"n">assertNotNull</span><span class=3D"o">(</=
span><span class=3D"n">firstName</span><span class=3D"o">);</span>

                <span class=3D"c1">// Executed only if the previous asserti=
on is valid.</span>
                <span class=3D"n">assertAll</span><span class=3D"o">(</span=
><span class=3D"s">"first name"</span><span class=3D"o">,</span>
                    <span class=3D"o">()</span> <span class=3D"o">-&gt;</sp=
an> <span class=3D"n">assertTrue</span><span class=3D"o">(</span><span clas=
s=3D"n">firstName</span><span class=3D"o">.</span><span class=3D"na">starts=
With</span><span class=3D"o">(</span><span class=3D"s">"J"</span><span clas=
s=3D"o">)),</span>
                    <span class=3D"o">()</span> <span class=3D"o">-&gt;</sp=
an> <span class=3D"n">assertTrue</span><span class=3D"o">(</span><span clas=
s=3D"n">firstName</span><span class=3D"o">.</span><span class=3D"na">endsWi=
th</span><span class=3D"o">(</span><span class=3D"s">"e"</span><span class=
=3D"o">))</span>
                <span class=3D"o">);</span>
            <span class=3D"o">},</span>
            <span class=3D"o">()</span> <span class=3D"o">-&gt;</span> <spa=
n class=3D"o">{</span>
                <span class=3D"c1">// Grouped assertion, so processed indep=
endently</span>
                <span class=3D"c1">// of results of first name assertions.<=
/span>
                <span class=3D"nc">String</span> <span class=3D"n">lastName=
</span> <span class=3D"o">=3D</span> <span class=3D"n">person</span><span c=
lass=3D"o">.</span><span class=3D"na">getLastName</span><span class=3D"o">(=
);</span>
                <span class=3D"n">assertNotNull</span><span class=3D"o">(</=
span><span class=3D"n">lastName</span><span class=3D"o">);</span>

                <span class=3D"c1">// Executed only if the previous asserti=
on is valid.</span>
                <span class=3D"n">assertAll</span><span class=3D"o">(</span=
><span class=3D"s">"last name"</span><span class=3D"o">,</span>
                    <span class=3D"o">()</span> <span class=3D"o">-&gt;</sp=
an> <span class=3D"n">assertTrue</span><span class=3D"o">(</span><span clas=
s=3D"n">lastName</span><span class=3D"o">.</span><span class=3D"na">startsW=
ith</span><span class=3D"o">(</span><span class=3D"s">"D"</span><span class=
=3D"o">)),</span>
                    <span class=3D"o">()</span> <span class=3D"o">-&gt;</sp=
an> <span class=3D"n">assertTrue</span><span class=3D"o">(</span><span clas=
s=3D"n">lastName</span><span class=3D"o">.</span><span class=3D"na">endsWit=
h</span><span class=3D"o">(</span><span class=3D"s">"e"</span><span class=
=3D"o">))</span>
                <span class=3D"o">);</span>
            <span class=3D"o">}</span>
        <span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">exceptionTesting</spa=
n><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"nc">Exception</span> <span class=3D"n">exception</sp=
an> <span class=3D"o">=3D</span> <span class=3D"n">assertThrows</span><span=
 class=3D"o">(</span><span class=3D"nc">ArithmeticException</span><span cla=
ss=3D"o">.</span><span class=3D"na">class</span><span class=3D"o">,</span> =
<span class=3D"o">()</span> <span class=3D"o">-&gt;</span>
            <span class=3D"n">calculator</span><span class=3D"o">.</span><s=
pan class=3D"na">divide</span><span class=3D"o">(</span><span class=3D"mi">=
1</span><span class=3D"o">,</span> <span class=3D"mi">0</span><span class=
=3D"o">));</span>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"s">"/ by zero"</span><span class=3D"o">,</span> <span class=3D"n=
">exception</span><span class=3D"o">.</span><span class=3D"na">getMessage</=
span><span class=3D"o">());</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">timeoutNotExceeded</s=
pan><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"c1">// The following assertion succeeds.</span>
        <span class=3D"n">assertTimeout</span><span class=3D"o">(</span><sp=
an class=3D"n">ofMinutes</span><span class=3D"o">(</span><span class=3D"mi"=
>2</span><span class=3D"o">),</span> <span class=3D"o">()</span> <span clas=
s=3D"o">-&gt;</span> <span class=3D"o">{</span>
            <span class=3D"c1">// Perform task that takes less than 2 minut=
es.</span>
        <span class=3D"o">});</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">timeoutNotExceededWit=
hResult</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"c1">// The following assertion succeeds, and returns=
 the supplied object.</span>
        <span class=3D"nc">String</span> <span class=3D"n">actualResult</sp=
an> <span class=3D"o">=3D</span> <span class=3D"n">assertTimeout</span><spa=
n class=3D"o">(</span><span class=3D"n">ofMinutes</span><span class=3D"o">(=
</span><span class=3D"mi">2</span><span class=3D"o">),</span> <span class=
=3D"o">()</span> <span class=3D"o">-&gt;</span> <span class=3D"o">{</span>
            <span class=3D"k">return</span> <span class=3D"s">"a result"</s=
pan><span class=3D"o">;</span>
        <span class=3D"o">});</span>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"s">"a result"</span><span class=3D"o">,</span> <span class=3D"n"=
>actualResult</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">timeoutNotExceededWit=
hMethod</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"c1">// The following assertion invokes a method refe=
rence and returns an object.</span>
        <span class=3D"nc">String</span> <span class=3D"n">actualGreeting</=
span> <span class=3D"o">=3D</span> <span class=3D"n">assertTimeout</span><s=
pan class=3D"o">(</span><span class=3D"n">ofMinutes</span><span class=3D"o"=
>(</span><span class=3D"mi">2</span><span class=3D"o">),</span> <span class=
=3D"nl">AssertionsDemo:</span><span class=3D"o">:</span><span class=3D"n">g=
reeting</span><span class=3D"o">);</span>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"s">"Hello, World!"</span><span class=3D"o">,</span> <span class=
=3D"n">actualGreeting</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">timeoutExceeded</span=
><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"c1">// The following assertion fails with an error m=
essage similar to:</span>
        <span class=3D"c1">// execution exceeded timeout of 10 ms by 91 ms<=
/span>
        <span class=3D"n">assertTimeout</span><span class=3D"o">(</span><sp=
an class=3D"n">ofMillis</span><span class=3D"o">(</span><span class=3D"mi">=
10</span><span class=3D"o">),</span> <span class=3D"o">()</span> <span clas=
s=3D"o">-&gt;</span> <span class=3D"o">{</span>
            <span class=3D"c1">// Simulate task that takes more than 10 ms.=
</span>
            <span class=3D"nc">Thread</span><span class=3D"o">.</span><span=
 class=3D"na">sleep</span><span class=3D"o">(</span><span class=3D"mi">100<=
/span><span class=3D"o">);</span>
        <span class=3D"o">});</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">timeoutExceededWithPr=
eemptiveTermination</span><span class=3D"o">()</span> <span class=3D"o">{</=
span>
        <span class=3D"c1">// The following assertion fails with an error m=
essage similar to:</span>
        <span class=3D"c1">// execution timed out after 10 ms</span>
        <span class=3D"n">assertTimeoutPreemptively</span><span class=3D"o"=
>(</span><span class=3D"n">ofMillis</span><span class=3D"o">(</span><span c=
lass=3D"mi">10</span><span class=3D"o">),</span> <span class=3D"o">()</span=
> <span class=3D"o">-&gt;</span> <span class=3D"o">{</span>
            <span class=3D"c1">// Simulate task that takes more than 10 ms.=
</span>
            <span class=3D"k">new</span> <span class=3D"nf">CountDownLatch<=
/span><span class=3D"o">(</span><span class=3D"mi">1</span><span class=3D"o=
">).</span><span class=3D"na">await</span><span class=3D"o">();</span>
        <span class=3D"o">});</span>
    <span class=3D"o">}</span>

    <span class=3D"kd">private</span> <span class=3D"kd">static</span> <spa=
n class=3D"nc">String</span> <span class=3D"nf">greeting</span><span class=
=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"k">return</span> <span class=3D"s">"Hello, World!"</=
span><span class=3D"o">;</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div id=3D"writing-tests-assertions-preemptive-timeouts" class=3D"admonitio=
nblock warning">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-warning" title=3D"Warning"></i>
</td>
<td class=3D"content">
<div class=3D"title">Preemptive Timeouts with <code>assertTimeoutPreemptive=
ly()</code></div>
<div class=3D"paragraph">
<p>Contrary to <a href=3D"https://junit.org/junit5/docs/current/user-guide/=
#writing-tests-declarative-timeouts">declarative timeouts</a>, the various
<code>assertTimeoutPreemptively()</code> methods in the <code>Assertions</c=
ode> class execute the provided
<code>executable</code> or <code>supplier</code> in a different thread than=
 that of the calling code. This
behavior can lead to undesirable side effects if the code that is executed =
within the
<code>executable</code> or <code>supplier</code> relies on <code>java.lang.=
ThreadLocal</code> storage.</p>
</div>
<div class=3D"paragraph">
<p>One common example of this is the transactional testing support in the S=
pring Framework.
Specifically, Spring=E2=80=99s testing support binds transaction state to t=
he current thread (via
a <code>ThreadLocal</code>) before a test method is invoked. Consequently, =
if an <code>executable</code> or
<code>supplier</code> provided to <code>assertTimeoutPreemptively()</code> =
invokes Spring-managed components
that participate in transactions, any actions taken by those components wil=
l not be rolled
back with the test-managed transaction. On the contrary, such actions will =
be committed to
the persistent store (e.g., relational database) even though the test-manag=
ed transaction
is rolled back.</p>
</div>
<div class=3D"paragraph">
<p>Similar side effects may be encountered with other frameworks that rely =
on
<code>ThreadLocal</code> storage.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-assertions-kotlin"><a class=3D"anchor" href=3D"http=
s://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions-kotl=
in"></a>2.4.1. Kotlin Assertion Support</h4>
<div class=3D"paragraph">
<p>JUnit Jupiter also comes with a few assertion methods that lend themselv=
es well to being
used in <a href=3D"https://kotlinlang.org/">Kotlin</a>. All JUnit Jupiter K=
otlin assertions are top-level
functions in the <code>org.junit.jupiter.api</code> package.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"kotlin"><span class=3D"k"=
>import</span> <span class=3D"nn">example.domain.Person</span>
<span class=3D"k">import</span> <span class=3D"nn">example.util.Calculator<=
/span>
<span class=3D"k">import</span> <span class=3D"nn">java.time.Duration</span=
>
<span class=3D"k">import</span> <span class=3D"nn">org.junit.jupiter.api.As=
sertions.assertEquals</span>
<span class=3D"k">import</span> <span class=3D"nn">org.junit.jupiter.api.As=
sertions.assertTrue</span>
<span class=3D"k">import</span> <span class=3D"nn">org.junit.jupiter.api.Te=
st</span>
<span class=3D"k">import</span> <span class=3D"nn">org.junit.jupiter.api.as=
sertAll</span>
<span class=3D"k">import</span> <span class=3D"nn">org.junit.jupiter.api.as=
sertDoesNotThrow</span>
<span class=3D"k">import</span> <span class=3D"nn">org.junit.jupiter.api.as=
sertThrows</span>
<span class=3D"k">import</span> <span class=3D"nn">org.junit.jupiter.api.as=
sertTimeout</span>
<span class=3D"k">import</span> <span class=3D"nn">org.junit.jupiter.api.as=
sertTimeoutPreemptively</span>

<span class=3D"kd">class</span> <span class=3D"nc">KotlinAssertionsDemo</sp=
an> <span class=3D"p">{</span>

    <span class=3D"k">private</span> <span class=3D"kd">val</span> <span cl=
ass=3D"py">person</span> <span class=3D"p">=3D</span> <span class=3D"nc">Pe=
rson</span><span class=3D"p">(</span><span class=3D"s">"Jane"</span><span c=
lass=3D"p">,</span> <span class=3D"s">"Doe"</span><span class=3D"p">)</span=
>
    <span class=3D"k">private</span> <span class=3D"kd">val</span> <span cl=
ass=3D"py">people</span> <span class=3D"p">=3D</span> <span class=3D"nf">se=
tOf</span><span class=3D"p">(</span><span class=3D"n">person</span><span cl=
ass=3D"p">,</span> <span class=3D"nc">Person</span><span class=3D"p">(</spa=
n><span class=3D"s">"John"</span><span class=3D"p">,</span> <span class=3D"=
s">"Doe"</span><span class=3D"p">))</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"k">fun</span> <span class=3D"nf">`exception</span> <span=
 class=3D"n">absence</span> <span class=3D"nf">testing`</span><span class=
=3D"p">()</span> <span class=3D"p">{</span>
        <span class=3D"kd">val</span> <span class=3D"py">calculator</span> =
<span class=3D"p">=3D</span> <span class=3D"nc">Calculator</span><span clas=
s=3D"p">()</span>
        <span class=3D"kd">val</span> <span class=3D"py">result</span> <spa=
n class=3D"p">=3D</span> <span class=3D"nf">assertDoesNotThrow</span><span =
class=3D"p">(</span><span class=3D"s">"Should not throw an exception"</span=
><span class=3D"p">)</span> <span class=3D"p">{</span>
            <span class=3D"n">calculator</span><span class=3D"p">.</span><s=
pan class=3D"nf">divide</span><span class=3D"p">(</span><span class=3D"mi">=
0</span><span class=3D"p">,</span> <span class=3D"mi">1</span><span class=
=3D"p">)</span>
        <span class=3D"p">}</span>
        <span class=3D"nf">assertEquals</span><span class=3D"p">(</span><sp=
an class=3D"mi">0</span><span class=3D"p">,</span> <span class=3D"n">result=
</span><span class=3D"p">)</span>
    <span class=3D"p">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"k">fun</span> <span class=3D"nf">`expected</span> <span =
class=3D"n">exception</span> <span class=3D"nf">testing`</span><span class=
=3D"p">()</span> <span class=3D"p">{</span>
        <span class=3D"kd">val</span> <span class=3D"py">calculator</span> =
<span class=3D"p">=3D</span> <span class=3D"nc">Calculator</span><span clas=
s=3D"p">()</span>
        <span class=3D"kd">val</span> <span class=3D"py">exception</span> <=
span class=3D"p">=3D</span> <span class=3D"n">assertThrows</span><span clas=
s=3D"p">&lt;</span><span class=3D"nc">ArithmeticException</span><span class=
=3D"p">&gt;</span> <span class=3D"p">(</span><span class=3D"s">"Should thro=
w an exception"</span><span class=3D"p">)</span> <span class=3D"p">{</span>
            <span class=3D"n">calculator</span><span class=3D"p">.</span><s=
pan class=3D"nf">divide</span><span class=3D"p">(</span><span class=3D"mi">=
1</span><span class=3D"p">,</span> <span class=3D"mi">0</span><span class=
=3D"p">)</span>
        <span class=3D"p">}</span>
        <span class=3D"nf">assertEquals</span><span class=3D"p">(</span><sp=
an class=3D"s">"/ by zero"</span><span class=3D"p">,</span> <span class=3D"=
n">exception</span><span class=3D"p">.</span><span class=3D"n">message</spa=
n><span class=3D"p">)</span>
    <span class=3D"p">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"k">fun</span> <span class=3D"nf">`grouped</span> <span c=
lass=3D"nf">assertions`</span><span class=3D"p">()</span> <span class=3D"p"=
>{</span>
        <span class=3D"nf">assertAll</span><span class=3D"p">(</span><span =
class=3D"s">"Person properties"</span><span class=3D"p">,</span>
            <span class=3D"p">{</span> <span class=3D"nf">assertEquals</spa=
n><span class=3D"p">(</span><span class=3D"s">"Jane"</span><span class=3D"p=
">,</span> <span class=3D"n">person</span><span class=3D"p">.</span><span c=
lass=3D"n">firstName</span><span class=3D"p">)</span> <span class=3D"p">},<=
/span>
            <span class=3D"p">{</span> <span class=3D"nf">assertEquals</spa=
n><span class=3D"p">(</span><span class=3D"s">"Doe"</span><span class=3D"p"=
>,</span> <span class=3D"n">person</span><span class=3D"p">.</span><span cl=
ass=3D"n">lastName</span><span class=3D"p">)</span> <span class=3D"p">}</sp=
an>
        <span class=3D"p">)</span>
    <span class=3D"p">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"k">fun</span> <span class=3D"nf">`grouped</span> <span c=
lass=3D"n">assertions</span> <span class=3D"n">from</span> <span class=3D"n=
">a</span> <span class=3D"nf">stream`</span><span class=3D"p">()</span> <sp=
an class=3D"p">{</span>
        <span class=3D"nf">assertAll</span><span class=3D"p">(</span><span =
class=3D"s">"People with first name starting with J"</span><span class=3D"p=
">,</span>
            <span class=3D"n">people</span>
                <span class=3D"p">.</span><span class=3D"nf">stream</span><=
span class=3D"p">()</span>
                <span class=3D"p">.</span><span class=3D"nf">map</span> <sp=
an class=3D"p">{</span>
                    <span class=3D"c1">// This mapping returns Stream&lt;()=
 -&gt; Unit&gt;</span>
                    <span class=3D"p">{</span> <span class=3D"nf">assertTru=
e</span><span class=3D"p">(</span><span class=3D"n">it</span><span class=3D=
"p">.</span><span class=3D"n">firstName</span><span class=3D"p">.</span><sp=
an class=3D"nf">startsWith</span><span class=3D"p">(</span><span class=3D"s=
">"J"</span><span class=3D"p">))</span> <span class=3D"p">}</span>
                <span class=3D"p">}</span>
        <span class=3D"p">)</span>
    <span class=3D"p">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"k">fun</span> <span class=3D"nf">`grouped</span> <span c=
lass=3D"n">assertions</span> <span class=3D"n">from</span> <span class=3D"n=
">a</span> <span class=3D"nf">collection`</span><span class=3D"p">()</span>=
 <span class=3D"p">{</span>
        <span class=3D"nf">assertAll</span><span class=3D"p">(</span><span =
class=3D"s">"People with last name of Doe"</span><span class=3D"p">,</span>
            <span class=3D"n">people</span><span class=3D"p">.</span><span =
class=3D"nf">map</span> <span class=3D"p">{</span> <span class=3D"p">{</spa=
n> <span class=3D"nf">assertEquals</span><span class=3D"p">(</span><span cl=
ass=3D"s">"Doe"</span><span class=3D"p">,</span> <span class=3D"n">it</span=
><span class=3D"p">.</span><span class=3D"n">lastName</span><span class=3D"=
p">)</span> <span class=3D"p">}</span> <span class=3D"p">}</span>
        <span class=3D"p">)</span>
    <span class=3D"p">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"k">fun</span> <span class=3D"nf">`timeout</span> <span c=
lass=3D"n">not</span> <span class=3D"n">exceeded</span> <span class=3D"nf">=
testing`</span><span class=3D"p">()</span> <span class=3D"p">{</span>
        <span class=3D"kd">val</span> <span class=3D"py">fibonacciCalculato=
r</span> <span class=3D"p">=3D</span> <span class=3D"nc">FibonacciCalculato=
r</span><span class=3D"p">()</span>
        <span class=3D"kd">val</span> <span class=3D"py">result</span> <spa=
n class=3D"p">=3D</span> <span class=3D"nf">assertTimeout</span><span class=
=3D"p">(</span><span class=3D"nc">Duration</span><span class=3D"p">.</span>=
<span class=3D"nf">ofMillis</span><span class=3D"p">(</span><span class=3D"=
mi">1000</span><span class=3D"p">))</span> <span class=3D"p">{</span>
            <span class=3D"n">fibonacciCalculator</span><span class=3D"p">.=
</span><span class=3D"nf">fib</span><span class=3D"p">(</span><span class=
=3D"mi">14</span><span class=3D"p">)</span>
        <span class=3D"p">}</span>
        <span class=3D"nf">assertEquals</span><span class=3D"p">(</span><sp=
an class=3D"mi">377</span><span class=3D"p">,</span> <span class=3D"n">resu=
lt</span><span class=3D"p">)</span>
    <span class=3D"p">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"k">fun</span> <span class=3D"nf">`timeout</span> <span c=
lass=3D"n">exceeded</span> <span class=3D"n">with</span> <span class=3D"n">=
preemptive</span> <span class=3D"nf">termination`</span><span class=3D"p">(=
)</span> <span class=3D"p">{</span>
        <span class=3D"c1">// The following assertion fails with an error m=
essage similar to:</span>
        <span class=3D"c1">// execution timed out after 10 ms</span>
        <span class=3D"nf">assertTimeoutPreemptively</span><span class=3D"p=
">(</span><span class=3D"nc">Duration</span><span class=3D"p">.</span><span=
 class=3D"nf">ofMillis</span><span class=3D"p">(</span><span class=3D"mi">1=
0</span><span class=3D"p">))</span> <span class=3D"p">{</span>
            <span class=3D"c1">// Simulate task that takes more than 10 ms.=
</span>
            <span class=3D"nc">Thread</span><span class=3D"p">.</span><span=
 class=3D"nf">sleep</span><span class=3D"p">(</span><span class=3D"mi">100<=
/span><span class=3D"p">)</span>
        <span class=3D"p">}</span>
    <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-assertions-third-party"><a class=3D"anchor" href=3D=
"https://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions=
-third-party"></a>2.4.2. Third-party Assertion Libraries</h4>
<div class=3D"paragraph">
<p>Even though the assertion facilities provided by JUnit Jupiter are suffi=
cient for many
testing scenarios, there are times when more power and additional functiona=
lity such as
<em>matchers</em> are desired or required. In such cases, the JUnit team re=
commends the use of
third-party assertion libraries such as <a href=3D"https://joel-costigliola=
.github.io/assertj/">AssertJ</a>, <a href=3D"https://hamcrest.org/JavaHamcr=
est/">Hamcrest</a>, <a href=3D"https://truth.dev/">Truth</a>, etc. Develope=
rs
are therefore free to use the assertion library of their choice.</p>
</div>
<div class=3D"paragraph">
<p>For example, the combination of <em>matchers</em> and a fluent API can b=
e used to make
assertions more descriptive and readable. However, JUnit Jupiter=E2=80=99s =
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupite=
r.api/org/junit/jupiter/api/Assertions.html">org.junit.jupiter.api.Assertio=
ns</a></code> class
does not provide an
<a href=3D"https://junit.org/junit4/javadoc/latest/org/junit/Assert.html#as=
sertThat"><code>assertThat()</code></a>
method like the one found in JUnit 4=E2=80=99s <code>org.junit.Assert</code=
> class which accepts a Hamcrest
<a href=3D"https://junit.org/junit4/javadoc/latest/org/hamcrest/Matcher.htm=
l"><code>Matcher</code></a>. Instead,
developers are encouraged to use the built-in support for matchers provided=
 by third-party
assertion libraries.</p>
</div>
<div class=3D"paragraph">
<p>The following example demonstrates how to use the <code>assertThat()</co=
de> support from Hamcrest in
a JUnit Jupiter test. As long as the Hamcrest library has been added to the=
 classpath,
you can statically import methods such as <code>assertThat()</code>, <code>=
is()</code>, and <code>equalTo()</code> and
then use them in tests like in the <code>assertWithHamcrestMatcher()</code>=
 method below.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">static</span> <span class=3D"n">org</span>=
<span class=3D"o">.</span><span class=3D"na">hamcrest</span><span class=3D"=
o">.</span><span class=3D"na">CoreMatchers</span><span class=3D"o">.</span>=
<span class=3D"na">equalTo</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">hamcrest</s=
pan><span class=3D"o">.</span><span class=3D"na">CoreMatchers</span><span c=
lass=3D"o">.</span><span class=3D"na">is</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">hamcrest</s=
pan><span class=3D"o">.</span><span class=3D"na">MatcherAssert</span><span =
class=3D"o">.</span><span class=3D"na">assertThat</span><span class=3D"o">;=
</span>

<span class=3D"kn">import</span> <span class=3D"nn">example.util.Calculator=
</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>

<span class=3D"kd">class</span> <span class=3D"nc">HamcrestAssertionsDemo</=
span> <span class=3D"o">{</span>

    <span class=3D"kd">private</span> <span class=3D"kd">final</span> <span=
 class=3D"nc">Calculator</span> <span class=3D"n">calculator</span> <span c=
lass=3D"o">=3D</span> <span class=3D"k">new</span> <span class=3D"nc">Calcu=
lator</span><span class=3D"o">();</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">assertWithHamcrestMat=
cher</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">assertThat</span><span class=3D"o">(</span><span =
class=3D"n">calculator</span><span class=3D"o">.</span><span class=3D"na">s=
ubtract</span><span class=3D"o">(</span><span class=3D"mi">4</span><span cl=
ass=3D"o">,</span> <span class=3D"mi">1</span><span class=3D"o">),</span> <=
span class=3D"n">is</span><span class=3D"o">(</span><span class=3D"n">equal=
To</span><span class=3D"o">(</span><span class=3D"mi">3</span><span class=
=3D"o">)));</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Naturally, legacy tests based on the JUnit 4 programming model can conti=
nue using
<code>org.junit.Assert#assertThat</code>.</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"writing-tests-assumptions"><a class=3D"anchor" href=3D"https://ju=
nit.org/junit5/docs/current/user-guide/#writing-tests-assumptions"></a>2.5.=
 Assumptions</h3>
<div class=3D"paragraph">
<p>JUnit Jupiter comes with a subset of the assumption methods that JUnit 4=
 provides and
adds a few that lend themselves well to being used with Java 8 lambda expre=
ssions and
method references. All JUnit Jupiter assumptions are static methods in the
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupite=
r.api/org/junit/jupiter/api/Assumptions.html">org.junit.jupiter.api.Assumpt=
ions</a></code> class.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">static</span> <span class=3D"n">org</span>=
<span class=3D"o">.</span><span class=3D"na">junit</span><span class=3D"o">=
.</span><span class=3D"na">jupiter</span><span class=3D"o">.</span><span cl=
ass=3D"na">api</span><span class=3D"o">.</span><span class=3D"na">Assertion=
s</span><span class=3D"o">.</span><span class=3D"na">assertEquals</span><sp=
an class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">Assumptions</span><span class=3D"o">.</span><span class=3D"na">as=
sumeTrue</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">Assumptions</span><span class=3D"o">.</span><span class=3D"na">as=
sumingThat</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">example.util.Calculator=
</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>

<span class=3D"kd">class</span> <span class=3D"nc">AssumptionsDemo</span> <=
span class=3D"o">{</span>

    <span class=3D"kd">private</span> <span class=3D"kd">final</span> <span=
 class=3D"nc">Calculator</span> <span class=3D"n">calculator</span> <span c=
lass=3D"o">=3D</span> <span class=3D"k">new</span> <span class=3D"nc">Calcu=
lator</span><span class=3D"o">();</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">testOnlyOnCiServer</s=
pan><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">assumeTrue</span><span class=3D"o">(</span><span =
class=3D"s">"CI"</span><span class=3D"o">.</span><span class=3D"na">equals<=
/span><span class=3D"o">(</span><span class=3D"nc">System</span><span class=
=3D"o">.</span><span class=3D"na">getenv</span><span class=3D"o">(</span><s=
pan class=3D"s">"ENV"</span><span class=3D"o">)));</span>
        <span class=3D"c1">// remainder of test</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">testOnlyOnDeveloperWo=
rkstation</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">assumeTrue</span><span class=3D"o">(</span><span =
class=3D"s">"DEV"</span><span class=3D"o">.</span><span class=3D"na">equals=
</span><span class=3D"o">(</span><span class=3D"nc">System</span><span clas=
s=3D"o">.</span><span class=3D"na">getenv</span><span class=3D"o">(</span><=
span class=3D"s">"ENV"</span><span class=3D"o">)),</span>
            <span class=3D"o">()</span> <span class=3D"o">-&gt;</span> <spa=
n class=3D"s">"Aborting test: not on developer workstation"</span><span cla=
ss=3D"o">);</span>
        <span class=3D"c1">// remainder of test</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">testInAllEnvironments=
</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">assumingThat</span><span class=3D"o">(</span><spa=
n class=3D"s">"CI"</span><span class=3D"o">.</span><span class=3D"na">equal=
s</span><span class=3D"o">(</span><span class=3D"nc">System</span><span cla=
ss=3D"o">.</span><span class=3D"na">getenv</span><span class=3D"o">(</span>=
<span class=3D"s">"ENV"</span><span class=3D"o">)),</span>
            <span class=3D"o">()</span> <span class=3D"o">-&gt;</span> <spa=
n class=3D"o">{</span>
                <span class=3D"c1">// perform these assertions only on the =
CI server</span>
                <span class=3D"n">assertEquals</span><span class=3D"o">(</s=
pan><span class=3D"mi">2</span><span class=3D"o">,</span> <span class=3D"n"=
>calculator</span><span class=3D"o">.</span><span class=3D"na">divide</span=
><span class=3D"o">(</span><span class=3D"mi">4</span><span class=3D"o">,</=
span> <span class=3D"mi">2</span><span class=3D"o">));</span>
            <span class=3D"o">});</span>

        <span class=3D"c1">// perform these assertions in all environments<=
/span>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"mi">42</span><span class=3D"o">,</span> <span class=3D"n">calcul=
ator</span><span class=3D"o">.</span><span class=3D"na">multiply</span><spa=
n class=3D"o">(</span><span class=3D"mi">6</span><span class=3D"o">,</span>=
 <span class=3D"mi">7</span><span class=3D"o">));</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
As of JUnit Jupiter 5.4, it is also possible to use methods from JUnit 4=E2=
=80=99s
<code>org.junit.Assume</code> class for assumptions. Specifically, JUnit Ju=
piter supports JUnit 4=E2=80=99s
<code>AssumptionViolatedException</code> to signal that a test should be ab=
orted instead of marked
as a failure.
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"writing-tests-disabling"><a class=3D"anchor" href=3D"https://juni=
t.org/junit5/docs/current/user-guide/#writing-tests-disabling"></a>2.6. Dis=
abling Tests</h3>
<div class=3D"paragraph">
<p>Entire test classes or individual test methods may be <em>disabled</em> =
via the <code><a href=3D"https://junit.org/junit5/docs/current/api/org.juni=
t.jupiter.api/org/junit/jupiter/api/Disabled.html">@Disabled</a></code>
annotation, via one of the annotations discussed in
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-=
conditional-execution">Conditional Test Execution</a>, or via a custom <a h=
ref=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-conditi=
ons"><code>ExecutionCondition</code></a>.</p>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s a <code>@Disabled</code> test class.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">org.junit.jupiter.api.Disabled</span><span=
 class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>

<span class=3D"nd">@Disabled</span><span class=3D"o">(</span><span class=3D=
"s">"Disabled until bug #99 has been fixed"</span><span class=3D"o">)</span=
>
<span class=3D"kd">class</span> <span class=3D"nc">DisabledClassDemo</span>=
 <span class=3D"o">{</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">testWillBeSkipped</sp=
an><span class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>And here=E2=80=99s a test class that contains a <code>@Disabled</code> t=
est method.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">org.junit.jupiter.api.Disabled</span><span=
 class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>

<span class=3D"kd">class</span> <span class=3D"nc">DisabledTestsDemo</span>=
 <span class=3D"o">{</span>

    <span class=3D"nd">@Disabled</span><span class=3D"o">(</span><span clas=
s=3D"s">"Disabled until bug #42 has been resolved"</span><span class=3D"o">=
)</span>
    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">testWillBeSkipped</sp=
an><span class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">testWillBeExecuted</s=
pan><span class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
<code>@Disabled</code> may be declared without providing a <em>reason</em>;=
 however, the JUnit team
recommends that developers provide a short explanation for why a test class=
 or test
method has been disabled. Consequently, the above examples both show the us=
e of a reason=E2=80=89=E2=80=94=E2=80=89for example, <code>@Disabled("Disab=
led until bug #42 has been resolved")</code>. Some development
teams even require the presence of issue tracking numbers in the <em>reason=
</em> for automated
traceability, etc.
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"writing-tests-conditional-execution"><a class=3D"anchor" href=3D"=
https://junit.org/junit5/docs/current/user-guide/#writing-tests-conditional=
-execution"></a>2.7. Conditional Test Execution</h3>
<div class=3D"paragraph">
<p>The <a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensi=
ons-conditions"><code>ExecutionCondition</code></a> extension API in JUnit =
Jupiter allows
developers to either <em>enable</em> or <em>disable</em> a container or tes=
t based on certain
conditions <em>programmatically</em>. The simplest example of such a condit=
ion is the built-in
<code><a href=3D"https://github.com/junit-team/junit5/tree/r5.8.2/junit-jup=
iter-engine/src/main/java/org/junit/jupiter/engine/extension/DisabledCondit=
ion.java">DisabledCondition</a></code> which supports the <code><a href=3D"=
https://junit.org/junit5/docs/current/api/org.junit.jupiter.api/org/junit/j=
upiter/api/Disabled.html">@Disabled</a></code> annotation (see
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-=
disabling">Disabling Tests</a>). In addition to <code>@Disabled</code>, JUn=
it Jupiter also supports
several other annotation-based conditions in the <code>org.junit.jupiter.ap=
i.condition</code>
package that allow developers to enable or disable containers and tests <em=
>declaratively</em>.
When multiple <code>ExecutionCondition</code> extensions are registered, a =
container or test is
disabled as soon as one of the conditions returns <em>disabled</em>. If you=
 wish to provide
details about why they might be disabled, every annotation associated with =
these built-in
conditions has a <code>disabledReason</code> attribute available for that p=
urpose.</p>
</div>
<div class=3D"paragraph">
<p>See <a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensi=
ons-conditions"><code>ExecutionCondition</code></a> and the following secti=
ons for
details.</p>
</div>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-tip" title=3D"Tip"></i>
</td>
<td class=3D"content">
<div class=3D"title">Composed Annotations</div>
<div class=3D"paragraph">
<p>Note that any of the <em>conditional</em> annotations listed in the foll=
owing sections may also
be used as a meta-annotation in order to create a custom <em>composed annot=
ation</em>. For
example, the <code>@TestOnMac</code> annotation in the
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-=
conditional-execution-os-demo">@EnabledOnOs demo</a> shows how you can
combine <code>@Test</code> and <code>@EnabledOnOs</code> in a single, reusa=
ble annotation.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class=3D"admonitionblock warning">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-warning" title=3D"Warning"></i>
</td>
<td class=3D"content">
<div class=3D"paragraph">
<p>Unless otherwise stated, each of the <em>conditional</em> annotations li=
sted in the following
sections can only be declared once on a given test interface, test class, o=
r test method.
If a conditional annotation is directly present, indirectly present, or met=
a-present
multiple times on a given element, only the first such annotation discovere=
d by JUnit will
be used; any additional declarations will be silently ignored. Note, howeve=
r, that each
conditional annotation may be used in conjunction with other conditional an=
notations in
the <code>org.junit.jupiter.api.condition</code> package.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-conditional-execution-os"><a class=3D"anchor" href=
=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-conditi=
onal-execution-os"></a>2.7.1. Operating System Conditions</h4>
<div class=3D"paragraph">
<p>A container or test may be enabled or disabled on a particular operating=
 system via the
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupite=
r.api/org/junit/jupiter/api/condition/EnabledOnOs.html">@EnabledOnOs</a></c=
ode> and <code><a href=3D"https://junit.org/junit5/docs/current/api/org.jun=
it.jupiter.api/org/junit/jupiter/api/condition/DisabledOnOs.html">@Disabled=
OnOs</a></code> annotations.</p>
</div>
<div id=3D"writing-tests-conditional-execution-os-demo" class=3D"listingblo=
ck">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@Test</span>
<span class=3D"nd">@EnabledOnOs</span><span class=3D"o">(</span><span class=
=3D"no">MAC</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">onlyOnMacOs</span><span c=
lass=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span>

<span class=3D"nd">@TestOnMac</span>
<span class=3D"kt">void</span> <span class=3D"nf">testOnMac</span><span cla=
ss=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span>

<span class=3D"nd">@Test</span>
<span class=3D"nd">@EnabledOnOs</span><span class=3D"o">({</span> <span cla=
ss=3D"no">LINUX</span><span class=3D"o">,</span> <span class=3D"no">MAC</sp=
an> <span class=3D"o">})</span>
<span class=3D"kt">void</span> <span class=3D"nf">onLinuxOrMac</span><span =
class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span>

<span class=3D"nd">@Test</span>
<span class=3D"nd">@DisabledOnOs</span><span class=3D"o">(</span><span clas=
s=3D"no">WINDOWS</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">notOnWindows</span><span =
class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span>

<span class=3D"nd">@Target</span><span class=3D"o">(</span><span class=3D"n=
c">ElementType</span><span class=3D"o">.</span><span class=3D"na">METHOD</s=
pan><span class=3D"o">)</span>
<span class=3D"nd">@Retention</span><span class=3D"o">(</span><span class=
=3D"nc">RetentionPolicy</span><span class=3D"o">.</span><span class=3D"na">=
RUNTIME</span><span class=3D"o">)</span>
<span class=3D"nd">@Test</span>
<span class=3D"nd">@EnabledOnOs</span><span class=3D"o">(</span><span class=
=3D"no">MAC</span><span class=3D"o">)</span>
<span class=3D"nd">@interface</span> <span class=3D"nc">TestOnMac</span> <s=
pan class=3D"o">{</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-conditional-execution-jre"><a class=3D"anchor" href=
=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-conditi=
onal-execution-jre"></a>2.7.2. Java Runtime Environment Conditions</h4>
<div class=3D"paragraph">
<p>A container or test may be enabled or disabled on particular versions of=
 the Java
Runtime Environment (JRE) via the <code><a href=3D"https://junit.org/junit5=
/docs/current/api/org.junit.jupiter.api/org/junit/jupiter/api/condition/Ena=
bledOnJre.html">@EnabledOnJre</a></code> and <code><a href=3D"https://junit=
.org/junit5/docs/current/api/org.junit.jupiter.api/org/junit/jupiter/api/co=
ndition/DisabledOnJre.html">@DisabledOnJre</a></code> annotations
or on a particular range of versions of the JRE via the <code><a href=3D"ht=
tps://junit.org/junit5/docs/current/api/org.junit.jupiter.api/org/junit/jup=
iter/api/condition/EnabledForJreRange.html">@EnabledForJreRange</a></code> =
and
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupite=
r.api/org/junit/jupiter/api/condition/DisabledForJreRange.html">@DisabledFo=
rJreRange</a></code> annotations. The range defaults to <code><a href=3D"ht=
tps://junit.org/junit5/docs/current/api/org.junit.jupiter.api/org/junit/jup=
iter/api/condition/JRE.html">JRE</a>.JAVA_8</code> as the lower
border (<code>min</code>) and <code><a href=3D"https://junit.org/junit5/doc=
s/current/api/org.junit.jupiter.api/org/junit/jupiter/api/condition/JRE.htm=
l">JRE</a>.OTHER</code> as the higher border (<code>max</code>), which allo=
ws usage of
half open ranges.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@Test</span>
<span class=3D"nd">@EnabledOnJre</span><span class=3D"o">(</span><span clas=
s=3D"no">JAVA_8</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">onlyOnJava8</span><span c=
lass=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span>

<span class=3D"nd">@Test</span>
<span class=3D"nd">@EnabledOnJre</span><span class=3D"o">({</span> <span cl=
ass=3D"no">JAVA_9</span><span class=3D"o">,</span> <span class=3D"no">JAVA_=
10</span> <span class=3D"o">})</span>
<span class=3D"kt">void</span> <span class=3D"nf">onJava9Or10</span><span c=
lass=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span>

<span class=3D"nd">@Test</span>
<span class=3D"nd">@EnabledForJreRange</span><span class=3D"o">(</span><spa=
n class=3D"n">min</span> <span class=3D"o">=3D</span> <span class=3D"no">JA=
VA_9</span><span class=3D"o">,</span> <span class=3D"n">max</span> <span cl=
ass=3D"o">=3D</span> <span class=3D"no">JAVA_11</span><span class=3D"o">)</=
span>
<span class=3D"kt">void</span> <span class=3D"nf">fromJava9to11</span><span=
 class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span>

<span class=3D"nd">@Test</span>
<span class=3D"nd">@EnabledForJreRange</span><span class=3D"o">(</span><spa=
n class=3D"n">min</span> <span class=3D"o">=3D</span> <span class=3D"no">JA=
VA_9</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">fromJava9toCurrentJavaFea=
tureNumber</span><span class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span>

<span class=3D"nd">@Test</span>
<span class=3D"nd">@EnabledForJreRange</span><span class=3D"o">(</span><spa=
n class=3D"n">max</span> <span class=3D"o">=3D</span> <span class=3D"no">JA=
VA_11</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">fromJava8To11</span><span=
 class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span>

<span class=3D"nd">@Test</span>
<span class=3D"nd">@DisabledOnJre</span><span class=3D"o">(</span><span cla=
ss=3D"no">JAVA_9</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">notOnJava9</span><span cl=
ass=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span>

<span class=3D"nd">@Test</span>
<span class=3D"nd">@DisabledForJreRange</span><span class=3D"o">(</span><sp=
an class=3D"n">min</span> <span class=3D"o">=3D</span> <span class=3D"no">J=
AVA_9</span><span class=3D"o">,</span> <span class=3D"n">max</span> <span c=
lass=3D"o">=3D</span> <span class=3D"no">JAVA_11</span><span class=3D"o">)<=
/span>
<span class=3D"kt">void</span> <span class=3D"nf">notFromJava9to11</span><s=
pan class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span>

<span class=3D"nd">@Test</span>
<span class=3D"nd">@DisabledForJreRange</span><span class=3D"o">(</span><sp=
an class=3D"n">min</span> <span class=3D"o">=3D</span> <span class=3D"no">J=
AVA_9</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">notFromJava9toCurrentJava=
FeatureNumber</span><span class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span>

<span class=3D"nd">@Test</span>
<span class=3D"nd">@DisabledForJreRange</span><span class=3D"o">(</span><sp=
an class=3D"n">max</span> <span class=3D"o">=3D</span> <span class=3D"no">J=
AVA_11</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">notFromJava8to11</span><s=
pan class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-conditional-execution-system-properties"><a class=
=3D"anchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#writi=
ng-tests-conditional-execution-system-properties"></a>2.7.3. System Propert=
y Conditions</h4>
<div class=3D"paragraph">
<p>A container or test may be enabled or disabled based on the value of the=
 <code>named</code> JVM
system property via the <code><a href=3D"https://junit.org/junit5/docs/curr=
ent/api/org.junit.jupiter.api/org/junit/jupiter/api/condition/EnabledIfSyst=
emProperty.html">@EnabledIfSystemProperty</a></code> and <code><a href=3D"h=
ttps://junit.org/junit5/docs/current/api/org.junit.jupiter.api/org/junit/ju=
piter/api/condition/DisabledIfSystemProperty.html">@DisabledIfSystemPropert=
y</a></code>
annotations. The value supplied via the <code>matches</code> attribute will=
 be interpreted as a
regular expression.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@Test</span>
<span class=3D"nd">@EnabledIfSystemProperty</span><span class=3D"o">(</span=
><span class=3D"n">named</span> <span class=3D"o">=3D</span> <span class=3D=
"s">"os.arch"</span><span class=3D"o">,</span> <span class=3D"n">matches</s=
pan> <span class=3D"o">=3D</span> <span class=3D"s">".*64.*"</span><span cl=
ass=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">onlyOn64BitArchitectures<=
/span><span class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span>

<span class=3D"nd">@Test</span>
<span class=3D"nd">@DisabledIfSystemProperty</span><span class=3D"o">(</spa=
n><span class=3D"n">named</span> <span class=3D"o">=3D</span> <span class=
=3D"s">"ci-server"</span><span class=3D"o">,</span> <span class=3D"n">match=
es</span> <span class=3D"o">=3D</span> <span class=3D"s">"true"</span><span=
 class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">notOnCiServer</span><span=
 class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-tip" title=3D"Tip"></i>
</td>
<td class=3D"content">
<div class=3D"paragraph">
<p>As of JUnit Jupiter 5.6, <code><a href=3D"https://junit.org/junit5/docs/=
current/api/org.junit.jupiter.api/org/junit/jupiter/api/condition/EnabledIf=
SystemProperty.html">@EnabledIfSystemProperty</a></code> and <code><a href=
=3D"https://junit.org/junit5/docs/current/api/org.junit.jupiter.api/org/jun=
it/jupiter/api/condition/DisabledIfSystemProperty.html">@DisabledIfSystemPr=
operty</a></code> are
<em>repeatable annotations</em>. Consequently, these annotations may be dec=
lared multiple times
on a test interface, test class, or test method. Specifically, these annota=
tions will be
found if they are directly present, indirectly present, or meta-present on =
a given element.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-conditional-execution-environment-variables"><a cla=
ss=3D"anchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#wri=
ting-tests-conditional-execution-environment-variables"></a>2.7.4. Environm=
ent Variable Conditions</h4>
<div class=3D"paragraph">
<p>A container or test may be enabled or disabled based on the value of the=
 <code>named</code>
environment variable from the underlying operating system via the
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupite=
r.api/org/junit/jupiter/api/condition/EnabledIfEnvironmentVariable.html">@E=
nabledIfEnvironmentVariable</a></code> and <code><a href=3D"https://junit.o=
rg/junit5/docs/current/api/org.junit.jupiter.api/org/junit/jupiter/api/cond=
ition/DisabledIfEnvironmentVariable.html">@DisabledIfEnvironmentVariable</a=
></code> annotations. The
value supplied via the <code>matches</code> attribute will be interpreted a=
s a regular expression.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@Test</span>
<span class=3D"nd">@EnabledIfEnvironmentVariable</span><span class=3D"o">(<=
/span><span class=3D"n">named</span> <span class=3D"o">=3D</span> <span cla=
ss=3D"s">"ENV"</span><span class=3D"o">,</span> <span class=3D"n">matches</=
span> <span class=3D"o">=3D</span> <span class=3D"s">"staging-server"</span=
><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">onlyOnStagingServer</span=
><span class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span>

<span class=3D"nd">@Test</span>
<span class=3D"nd">@DisabledIfEnvironmentVariable</span><span class=3D"o">(=
</span><span class=3D"n">named</span> <span class=3D"o">=3D</span> <span cl=
ass=3D"s">"ENV"</span><span class=3D"o">,</span> <span class=3D"n">matches<=
/span> <span class=3D"o">=3D</span> <span class=3D"s">".*development.*"</sp=
an><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">notOnDeveloperWorkstation=
</span><span class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-tip" title=3D"Tip"></i>
</td>
<td class=3D"content">
<div class=3D"paragraph">
<p>As of JUnit Jupiter 5.6, <code><a href=3D"https://junit.org/junit5/docs/=
current/api/org.junit.jupiter.api/org/junit/jupiter/api/condition/EnabledIf=
EnvironmentVariable.html">@EnabledIfEnvironmentVariable</a></code> and
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupite=
r.api/org/junit/jupiter/api/condition/DisabledIfEnvironmentVariable.html">@=
DisabledIfEnvironmentVariable</a></code> are <em>repeatable annotations</em=
>. Consequently, these
annotations may be declared multiple times on a test interface, test class,=
 or test
method. Specifically, these annotations will be found if they are directly =
present,
indirectly present, or meta-present on a given element.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-conditional-execution-custom"><a class=3D"anchor" h=
ref=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-cond=
itional-execution-custom"></a>2.7.5. Custom Conditions</h4>
<div class=3D"paragraph">
<p>A container or test may be enabled or disabled based on the boolean retu=
rn of a
method via the <code><a href=3D"https://junit.org/junit5/docs/current/api/o=
rg.junit.jupiter.api/org/junit/jupiter/api/condition/EnabledIf.html">@Enabl=
edIf</a></code> and <code><a href=3D"https://junit.org/junit5/docs/current/=
api/org.junit.jupiter.api/org/junit/jupiter/api/condition/DisabledIf.html">=
@DisabledIf</a></code> annotations. The method is provided to
the annotation via its name.
If needed, the condition method can take a single parameter of type <code>E=
xtensionContext</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@Test</span>
<span class=3D"nd">@EnabledIf</span><span class=3D"o">(</span><span class=
=3D"s">"customCondition"</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">enabled</span><span class=
=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span>

<span class=3D"nd">@Test</span>
<span class=3D"nd">@DisabledIf</span><span class=3D"o">(</span><span class=
=3D"s">"customCondition"</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">disabled</span><span clas=
s=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span>

<span class=3D"kt">boolean</span> <span class=3D"nf">customCondition</span>=
<span class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"k">return</span> <span class=3D"kc">true</span><span cla=
ss=3D"o">;</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Alternatively, the condition method can be located outside the test clas=
s. In this case,
it has to be referenced by its <em>fully qualified name</em> as demonstrate=
d in the following
example.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
package</span> <span class=3D"nn">example</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.c=
ondition.EnabledIf</span><span class=3D"o">;</span>

<span class=3D"kd">class</span> <span class=3D"nc">ExternalCustomConditionD=
emo</span> <span class=3D"o">{</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"nd">@EnabledIf</span><span class=3D"o">(</span><span cla=
ss=3D"s">"example.ExternalCondition#customCondition"</span><span class=3D"o=
">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">enabled</span><span c=
lass=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"c1">// ...</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span>

<span class=3D"kd">class</span> <span class=3D"nc">ExternalCondition</span>=
 <span class=3D"o">{</span>

    <span class=3D"kd">static</span> <span class=3D"kt">boolean</span> <spa=
n class=3D"nf">customCondition</span><span class=3D"o">()</span> <span clas=
s=3D"o">{</span>
        <span class=3D"k">return</span> <span class=3D"kc">true</span><span=
 class=3D"o">;</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
When <code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.j=
upiter.api/org/junit/jupiter/api/condition/EnabledIf.html">@EnabledIf</a></=
code> or <code><a href=3D"https://junit.org/junit5/docs/current/api/org.jun=
it.jupiter.api/org/junit/jupiter/api/condition/DisabledIf.html">@DisabledIf=
</a></code> is used at class level, the condition method
must always be <code>static</code>. Condition methods located in external c=
lasses must also be
<code>static</code>. In any other case, you can use both static or instance=
 methods.
</td>
</tr>
</tbody></table>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"writing-tests-tagging-and-filtering"><a class=3D"anchor" href=3D"=
https://junit.org/junit5/docs/current/user-guide/#writing-tests-tagging-and=
-filtering"></a>2.8. Tagging and Filtering</h3>
<div class=3D"paragraph">
<p>Test classes and methods can be tagged via the <code>@Tag</code> annotat=
ion. Those tags can later be
used to filter <a href=3D"https://junit.org/junit5/docs/current/user-guide/=
#running-tests">test discovery and execution</a>. Please refer to the
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-=
tags">Tags</a> section for more information about tag support in the JUnit
Platform.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">org.junit.jupiter.api.Tag</span><span clas=
s=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>

<span class=3D"nd">@Tag</span><span class=3D"o">(</span><span class=3D"s">"=
fast"</span><span class=3D"o">)</span>
<span class=3D"nd">@Tag</span><span class=3D"o">(</span><span class=3D"s">"=
model"</span><span class=3D"o">)</span>
<span class=3D"kd">class</span> <span class=3D"nc">TaggingDemo</span> <span=
 class=3D"o">{</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"nd">@Tag</span><span class=3D"o">(</span><span class=3D"=
s">"taxes"</span><span class=3D"o">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">testingTaxCalculation=
</span><span class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-tip" title=3D"Tip"></i>
</td>
<td class=3D"content">
See <a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-te=
sts-meta-annotations">Meta-Annotations and Composed Annotations</a> for exa=
mples demonstrating how to create
custom annotations for tags.
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"writing-tests-test-execution-order"><a class=3D"anchor" href=3D"h=
ttps://junit.org/junit5/docs/current/user-guide/#writing-tests-test-executi=
on-order"></a>2.9. Test Execution Order</h3>
<div class=3D"paragraph">
<p>By default, test classes and methods will be ordered using an algorithm =
that is
deterministic but intentionally nonobvious. This ensures that subsequent ru=
ns of a test
suite execute test classes and test methods in the same order, thereby allo=
wing for
repeatable builds.</p>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
See <a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-te=
sts-classes-and-methods">Test Classes and Methods</a> for a definition of <=
em>test method</em> and
<em>test class</em>.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-test-execution-order-methods"><a class=3D"anchor" h=
ref=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-test=
-execution-order-methods"></a>2.9.1. Method Order</h4>
<div class=3D"paragraph">
<p>Although true <em>unit tests</em> typically should not rely on the order=
 in which they are
executed, there are times when it is necessary to enforce a specific test m=
ethod execution
order=E2=80=89=E2=80=94=E2=80=89for example, when writing <em>integration t=
ests</em> or <em>functional tests</em> where the
sequence of the tests is important, especially in conjunction with
<code>@TestInstance(Lifecycle.PER_CLASS)</code>.</p>
</div>
<div class=3D"paragraph">
<p>To control the order in which test methods are executed, annotate your t=
est class or test
interface with <code><a href=3D"https://junit.org/junit5/docs/current/api/o=
rg.junit.jupiter.api/org/junit/jupiter/api/TestMethodOrder.html">@TestMetho=
dOrder</a></code> and specify the desired <code><a href=3D"https://junit.or=
g/junit5/docs/current/api/org.junit.jupiter.api/org/junit/jupiter/api/Metho=
dOrderer.html">MethodOrderer</a></code>
implementation. You can implement your own custom <code>MethodOrderer</code=
> or use one of the
following built-in <code>MethodOrderer</code> implementations.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/MethodOrderer.DisplayName.html">MethodOrdere=
r.DisplayName</a></code>: sorts test methods <em>alphanumerically</em> base=
d on their
display names (see <a href=3D"https://junit.org/junit5/docs/current/user-gu=
ide/#writing-tests-display-name-generator-precedence-rules">display name
generation precedence rules</a>)</p>
</li>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/MethodOrderer.MethodName.html">MethodOrderer=
.MethodName</a></code>: sorts test methods <em>alphanumerically</em> based =
on their names
and formal parameter lists</p>
</li>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/MethodOrderer.OrderAnnotation.html">MethodOr=
derer.OrderAnnotation</a></code>: sorts test methods <em>numerically</em> b=
ased on values
specified via the <code><a href=3D"https://junit.org/junit5/docs/current/ap=
i/org.junit.jupiter.api/org/junit/jupiter/api/Order.html">@Order</a></code>=
 annotation</p>
</li>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/MethodOrderer.Random.html">MethodOrderer.Ran=
dom</a></code>: orders test methods <em>pseudo-randomly</em> and supports
configuration of a custom <em>seed</em></p>
</li>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/MethodOrderer.Alphanumeric.html">MethodOrder=
er.Alphanumeric</a></code>: sorts test methods <em>alphanumerically</em> ba=
sed on their
names and formal parameter lists; <strong>deprecated in favor of <code><a h=
ref=3D"https://junit.org/junit5/docs/current/api/org.junit.jupiter.api/org/=
junit/jupiter/api/MethodOrderer.MethodName.html">MethodOrderer.MethodName</=
a></code>,
to be removed in 6.0</strong></p>
</li>
</ul>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
See also: <a href=3D"https://junit.org/junit5/docs/current/user-guide/#exte=
nsions-execution-order-wrapping-behavior">Wrapping Behavior of Callbacks</a=
>
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>The following example demonstrates how to guarantee that test methods ar=
e executed in the
order specified via the <code>@Order</code> annotation.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">org.junit.jupiter.api.MethodOrderer.OrderA=
nnotation</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.O=
rder</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
estMethodOrder</span><span class=3D"o">;</span>

<span class=3D"nd">@TestMethodOrder</span><span class=3D"o">(</span><span c=
lass=3D"nc">OrderAnnotation</span><span class=3D"o">.</span><span class=3D"=
na">class</span><span class=3D"o">)</span>
<span class=3D"kd">class</span> <span class=3D"nc">OrderedTestsDemo</span> =
<span class=3D"o">{</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"nd">@Order</span><span class=3D"o">(</span><span class=
=3D"mi">1</span><span class=3D"o">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">nullValues</span><spa=
n class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"c1">// perform assertions against null values</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"nd">@Order</span><span class=3D"o">(</span><span class=
=3D"mi">2</span><span class=3D"o">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">emptyValues</span><sp=
an class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"c1">// perform assertions against empty values</span=
>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"nd">@Order</span><span class=3D"o">(</span><span class=
=3D"mi">3</span><span class=3D"o">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">validValues</span><sp=
an class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"c1">// perform assertions against valid values</span=
>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"writing-tests-test-execution-order-methods-default"><a class=3D"a=
nchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-te=
sts-test-execution-order-methods-default"></a>Setting the Default Method Or=
derer</h5>
<div class=3D"paragraph">
<p>You can use the <code>junit.jupiter.testmethod.order.default</code> <a h=
ref=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-conf=
ig-params">configuration parameter</a> to specify the fully qualified class=
 name of the
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupite=
r.api/org/junit/jupiter/api/MethodOrderer.html">MethodOrderer</a></code> yo=
u would like to use by default. Just like for the orderer configured
via the <code><a href=3D"https://junit.org/junit5/docs/current/api/org.juni=
t.jupiter.api/org/junit/jupiter/api/TestMethodOrder.html">@TestMethodOrder<=
/a></code> annotation, the supplied class has to implement the
<code>MethodOrderer</code> interface. The default orderer will be used for =
all tests unless the
<code>@TestMethodOrder</code> annotation is present on an enclosing test cl=
ass or test interface.</p>
</div>
<div class=3D"paragraph">
<p>For example, to use the <code><a href=3D"https://junit.org/junit5/docs/c=
urrent/api/org.junit.jupiter.api/org/junit/jupiter/api/MethodOrderer.OrderA=
nnotation.html">MethodOrderer.OrderAnnotation</a></code> method orderer by =
default, you
should set the configuration parameter to the corresponding fully qualified=
 class name
(e.g., in <code>src/test/resources/junit-platform.properties</code>):</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"properties"><span class=
=3D"py">junit.jupiter.testmethod.order.default</span> <span class=3D"p">=3D=
</span> <span class=3D"se">\
</span>    <span class=3D"s">org.junit.jupiter.api.MethodOrderer$OrderAnnot=
ation</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Similarly, you can specify the fully qualified name of any custom class =
that implements
<code>MethodOrderer</code>.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-test-execution-order-classes"><a class=3D"anchor" h=
ref=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-test=
-execution-order-classes"></a>2.9.2. Class Order</h4>
<div class=3D"paragraph">
<p>Although test classes typically should not rely on the order in which th=
ey are executed,
there are times when it is desirable to enforce a specific test class execu=
tion order. You
may wish to execute test classes in a random order to ensure there are no a=
ccidental
dependencies between test classes, or you may wish to order test classes to=
 optimize build
time as outlined in the following scenarios.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Run previously failing tests and faster tests first: "fail fast" mode</p=
>
</li>
<li>
<p>With parallel execution enabled, run longer tests first: "shortest test =
plan execution
duration" mode</p>
</li>
<li>
<p>Various other use cases</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>To configure test class execution order <em>globally</em> for the entire=
 test suite, use the
<code>junit.jupiter.testclass.order.default</code> <a href=3D"https://junit=
.org/junit5/docs/current/user-guide/#running-tests-config-params">configura=
tion
parameter</a> to specify the fully qualified class name of the <code><a hre=
f=3D"https://junit.org/junit5/docs/current/api/org.junit.jupiter.api/org/ju=
nit/jupiter/api/ClassOrderer.html">ClassOrderer</a></code> you would
like to use. The supplied class must implement the <code>ClassOrderer</code=
> interface.</p>
</div>
<div class=3D"paragraph">
<p>You can implement your own custom <code>ClassOrderer</code> or use one o=
f the following built-in
<code>ClassOrderer</code> implementations.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/ClassOrderer.ClassName.html">ClassOrderer.Cl=
assName</a></code>: sorts test classes <em>alphanumerically</em> based on t=
heir fully
qualified class names</p>
</li>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/ClassOrderer.DisplayName.html">ClassOrderer.=
DisplayName</a></code>: sorts test classes <em>alphanumerically</em> based =
on their
display names (see <a href=3D"https://junit.org/junit5/docs/current/user-gu=
ide/#writing-tests-display-name-generator-precedence-rules">display name
generation precedence rules</a>)</p>
</li>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/ClassOrderer.OrderAnnotation.html">ClassOrde=
rer.OrderAnnotation</a></code>: sorts test classes <em>numerically</em> bas=
ed on values
specified via the <code><a href=3D"https://junit.org/junit5/docs/current/ap=
i/org.junit.jupiter.api/org/junit/jupiter/api/Order.html">@Order</a></code>=
 annotation</p>
</li>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/ClassOrderer.Random.html">ClassOrderer.Rando=
m</a></code>: orders test classes <em>pseudo-randomly</em> and supports
configuration of a custom <em>seed</em></p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>For example, for the <code>@Order</code> annotation to be honored on <em=
>test classes</em>, you should
configure the <code><a href=3D"https://junit.org/junit5/docs/current/api/or=
g.junit.jupiter.api/org/junit/jupiter/api/ClassOrderer.OrderAnnotation.html=
">ClassOrderer.OrderAnnotation</a></code> class orderer using the configura=
tion
parameter with the corresponding fully qualified class name (e.g., in
<code>src/test/resources/junit-platform.properties</code>):</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"properties"><span class=
=3D"py">junit.jupiter.testclass.order.default</span> <span class=3D"p">=3D<=
/span> <span class=3D"se">\
</span>    <span class=3D"s">org.junit.jupiter.api.ClassOrderer$OrderAnnota=
tion</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The configured <code>ClassOrderer</code> will be applied to all top-leve=
l test classes (including
<code>static</code> nested test classes) and <code>@Nested</code> test clas=
ses.</p>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
Top-level test classes will be ordered relative to each other; whereas, <co=
de>@Nested</code>
test classes will be ordered relative to other <code>@Nested</code> test cl=
asses sharing the same
<em>enclosing class</em>.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>To configure test class execution order <em>locally</em> for <code>@Nest=
ed</code> test classes, declare the
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupite=
r.api/org/junit/jupiter/api/TestClassOrder.html">@TestClassOrder</a></code>=
 annotation on the enclosing class for the <code>@Nested</code> test classe=
s you
want to order, and supply a class reference to the <code>ClassOrderer</code=
> implementation you would
like to use directly in the <code>@TestClassOrder</code> annotation. The co=
nfigured <code>ClassOrderer</code>
will be applied recursively to <code>@Nested</code> test classes and their =
<code>@Nested</code> test classes.
Note that a local <code>@TestClassOrder</code> declaration always overrides=
 an inherited
<code>@TestClassOrder</code> declaration or a <code>ClassOrderer</code> con=
figured globally via the
<code>junit.jupiter.testclass.order.default</code> configuration parameter.=
</p>
</div>
<div class=3D"paragraph">
<p>The following example demonstrates how to guarantee that <code>@Nested</=
code> test classes are
executed in the order specified via the <code>@Order</code> annotation.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">org.junit.jupiter.api.ClassOrderer</span><=
span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.N=
ested</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.O=
rder</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
estClassOrder</span><span class=3D"o">;</span>

<span class=3D"nd">@TestClassOrder</span><span class=3D"o">(</span><span cl=
ass=3D"nc">ClassOrderer</span><span class=3D"o">.</span><span class=3D"na">=
OrderAnnotation</span><span class=3D"o">.</span><span class=3D"na">class</s=
pan><span class=3D"o">)</span>
<span class=3D"kd">class</span> <span class=3D"nc">OrderedNestedTestClasses=
Demo</span> <span class=3D"o">{</span>

    <span class=3D"nd">@Nested</span>
    <span class=3D"nd">@Order</span><span class=3D"o">(</span><span class=
=3D"mi">1</span><span class=3D"o">)</span>
    <span class=3D"kd">class</span> <span class=3D"nc">PrimaryTests</span> =
<span class=3D"o">{</span>

        <span class=3D"nd">@Test</span>
        <span class=3D"kt">void</span> <span class=3D"nf">test1</span><span=
 class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"o">}</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Nested</span>
    <span class=3D"nd">@Order</span><span class=3D"o">(</span><span class=
=3D"mi">2</span><span class=3D"o">)</span>
    <span class=3D"kd">class</span> <span class=3D"nc">SecondaryTests</span=
> <span class=3D"o">{</span>

        <span class=3D"nd">@Test</span>
        <span class=3D"kt">void</span> <span class=3D"nf">test2</span><span=
 class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"o">}</span>
    <span class=3D"o">}</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"writing-tests-test-instance-lifecycle"><a class=3D"anchor" href=
=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-test-in=
stance-lifecycle"></a>2.10. Test Instance Lifecycle</h3>
<div class=3D"paragraph">
<p>In order to allow individual test methods to be executed in isolation an=
d to avoid
unexpected side effects due to mutable test instance state, JUnit creates a=
 new instance
of each test class before executing each <em>test method</em> (see
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-=
classes-and-methods">Test Classes and Methods</a>). This "per-method" test =
instance lifecycle is the
default behavior in JUnit Jupiter and is analogous to all previous versions=
 of JUnit.</p>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
Please note that the test class will still be instantiated if a given <em>t=
est method</em>
is <em>disabled</em> via a <a href=3D"https://junit.org/junit5/docs/current=
/user-guide/#writing-tests-conditional-execution">condition</a> (e.g., <cod=
e>@Disabled</code>,
<code>@DisabledOnOs</code>, etc.) even when the "per-method" test instance =
lifecycle mode is active.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>If you would prefer that JUnit Jupiter execute all test methods on the s=
ame test
instance, annotate your test class with <code>@TestInstance(Lifecycle.PER_C=
LASS)</code>. When using
this mode, a new test instance will be created once per test class. Thus, i=
f your test
methods rely on state stored in instance variables, you may need to reset t=
hat state in
<code>@BeforeEach</code> or <code>@AfterEach</code> methods.</p>
</div>
<div class=3D"paragraph">
<p>The "per-class" mode has some additional benefits over the default "per-=
method" mode.
Specifically, with the "per-class" mode it becomes possible to declare <cod=
e>@BeforeAll</code> and
<code>@AfterAll</code> on non-static methods as well as on interface <code>=
default</code> methods. The
"per-class" mode therefore also makes it possible to use <code>@BeforeAll</=
code> and <code>@AfterAll</code>
methods in <code>@Nested</code> test classes.</p>
</div>
<div class=3D"paragraph">
<p>If you are authoring tests using the Kotlin programming language, you ma=
y also find it
easier to implement <code>@BeforeAll</code> and <code>@AfterAll</code> meth=
ods by switching to the "per-class"
test instance lifecycle mode.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-test-instance-lifecycle-changing-default"><a class=
=3D"anchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#writi=
ng-tests-test-instance-lifecycle-changing-default"></a>2.10.1. Changing the=
 Default Test Instance Lifecycle</h4>
<div class=3D"paragraph">
<p>If a test class or test interface is not annotated with <code>@TestInsta=
nce</code>, JUnit Jupiter
will use a <em>default</em> lifecycle mode. The standard <em>default</em> m=
ode is <code>PER_METHOD</code>;
however, it is possible to change the <em>default</em> for the execution of=
 an entire test plan.
To change the default test instance lifecycle mode, set the
<code>junit.jupiter.testinstance.lifecycle.default</code> <em>configuration=
 parameter</em> to the name of
an enum constant defined in <code>TestInstance.Lifecycle</code>, ignoring c=
ase. This can be supplied
as a JVM system property, as a <em>configuration parameter</em> in the
<code>LauncherDiscoveryRequest</code> that is passed to the <code>Launcher<=
/code>, or via the JUnit Platform
configuration file (see <a href=3D"https://junit.org/junit5/docs/current/us=
er-guide/#running-tests-config-params">Configuration Parameters</a> for det=
ails).</p>
</div>
<div class=3D"paragraph">
<p>For example, to set the default test instance lifecycle mode to <code>Li=
fecycle.PER_CLASS</code>,
you can start your JVM with the following system property.</p>
</div>
<div class=3D"paragraph">
<p><code>-Djunit.jupiter.testinstance.lifecycle.default=3Dper_class</code><=
/p>
</div>
<div class=3D"paragraph">
<p>Note, however, that setting the default test instance lifecycle mode via=
 the JUnit
Platform configuration file is a more robust solution since the configurati=
on file can be
checked into a version control system along with your project and can there=
fore be used
within IDEs and your build software.</p>
</div>
<div class=3D"paragraph">
<p>To set the default test instance lifecycle mode to <code>Lifecycle.PER_C=
LASS</code> via the JUnit
Platform configuration file, create a file named <code>junit-platform.prope=
rties</code> in the root
of the class path (e.g., <code>src/test/resources</code>) with the followin=
g content.</p>
</div>
<div class=3D"paragraph">
<p><code>junit.jupiter.testinstance.lifecycle.default =3D per_class</code><=
/p>
</div>
<div class=3D"admonitionblock warning">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-warning" title=3D"Warning"></i>
</td>
<td class=3D"content">
Changing the <em>default</em> test instance lifecycle mode can lead to unpr=
edictable
results and fragile builds if not applied consistently. For example, if the=
 build
configures "per-class" semantics as the default but tests in the IDE are ex=
ecuted using
"per-method" semantics, that can make it difficult to debug errors that occ=
ur on the
build server. It is therefore recommended to change the default in the JUni=
t Platform
configuration file instead of via a JVM system property.
</td>
</tr>
</tbody></table>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"writing-tests-nested"><a class=3D"anchor" href=3D"https://junit.o=
rg/junit5/docs/current/user-guide/#writing-tests-nested"></a>2.11. Nested T=
ests</h3>
<div class=3D"paragraph">
<p><code>@Nested</code> tests give the test writer more capabilities to exp=
ress the relationship among
several groups of tests. Such nested tests make use of Java=E2=80=99s neste=
d classes and
facilitate hierarchical thinking about the test structure. Here=E2=80=99s a=
n elaborate example,
both as source code and as a screenshot of the execution within an IDE.</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">Nested test suite for testing a stack</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">static</span> <span class=3D"n">org</span>=
<span class=3D"o">.</span><span class=3D"na">junit</span><span class=3D"o">=
.</span><span class=3D"na">jupiter</span><span class=3D"o">.</span><span cl=
ass=3D"na">api</span><span class=3D"o">.</span><span class=3D"na">Assertion=
s</span><span class=3D"o">.</span><span class=3D"na">assertEquals</span><sp=
an class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">Assertions</span><span class=3D"o">.</span><span class=3D"na">ass=
ertFalse</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">Assertions</span><span class=3D"o">.</span><span class=3D"na">ass=
ertThrows</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">Assertions</span><span class=3D"o">.</span><span class=3D"na">ass=
ertTrue</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">java.util.EmptyStackExc=
eption</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.util.Stack</span><=
span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.B=
eforeEach</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.D=
isplayName</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.N=
ested</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>

<span class=3D"nd">@DisplayName</span><span class=3D"o">(</span><span class=
=3D"s">"A stack"</span><span class=3D"o">)</span>
<span class=3D"kd">class</span> <span class=3D"nc">TestingAStackDemo</span>=
 <span class=3D"o">{</span>

    <span class=3D"nc">Stack</span><span class=3D"o">&lt;</span><span class=
=3D"nc">Object</span><span class=3D"o">&gt;</span> <span class=3D"n">stack<=
/span><span class=3D"o">;</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"nd">@DisplayName</span><span class=3D"o">(</span><span c=
lass=3D"s">"is instantiated with new Stack()"</span><span class=3D"o">)</sp=
an>
    <span class=3D"kt">void</span> <span class=3D"nf">isInstantiatedWithNew=
</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"k">new</span> <span class=3D"nc">Stack</span><span c=
lass=3D"o">&lt;&gt;();</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Nested</span>
    <span class=3D"nd">@DisplayName</span><span class=3D"o">(</span><span c=
lass=3D"s">"when new"</span><span class=3D"o">)</span>
    <span class=3D"kd">class</span> <span class=3D"nc">WhenNew</span> <span=
 class=3D"o">{</span>

        <span class=3D"nd">@BeforeEach</span>
        <span class=3D"kt">void</span> <span class=3D"nf">createNewStack</s=
pan><span class=3D"o">()</span> <span class=3D"o">{</span>
            <span class=3D"n">stack</span> <span class=3D"o">=3D</span> <sp=
an class=3D"k">new</span> <span class=3D"nc">Stack</span><span class=3D"o">=
&lt;&gt;();</span>
        <span class=3D"o">}</span>

        <span class=3D"nd">@Test</span>
        <span class=3D"nd">@DisplayName</span><span class=3D"o">(</span><sp=
an class=3D"s">"is empty"</span><span class=3D"o">)</span>
        <span class=3D"kt">void</span> <span class=3D"nf">isEmpty</span><sp=
an class=3D"o">()</span> <span class=3D"o">{</span>
            <span class=3D"n">assertTrue</span><span class=3D"o">(</span><s=
pan class=3D"n">stack</span><span class=3D"o">.</span><span class=3D"na">is=
Empty</span><span class=3D"o">());</span>
        <span class=3D"o">}</span>

        <span class=3D"nd">@Test</span>
        <span class=3D"nd">@DisplayName</span><span class=3D"o">(</span><sp=
an class=3D"s">"throws EmptyStackException when popped"</span><span class=
=3D"o">)</span>
        <span class=3D"kt">void</span> <span class=3D"nf">throwsExceptionWh=
enPopped</span><span class=3D"o">()</span> <span class=3D"o">{</span>
            <span class=3D"n">assertThrows</span><span class=3D"o">(</span>=
<span class=3D"nc">EmptyStackException</span><span class=3D"o">.</span><spa=
n class=3D"na">class</span><span class=3D"o">,</span> <span class=3D"nl">st=
ack:</span><span class=3D"o">:</span><span class=3D"n">pop</span><span clas=
s=3D"o">);</span>
        <span class=3D"o">}</span>

        <span class=3D"nd">@Test</span>
        <span class=3D"nd">@DisplayName</span><span class=3D"o">(</span><sp=
an class=3D"s">"throws EmptyStackException when peeked"</span><span class=
=3D"o">)</span>
        <span class=3D"kt">void</span> <span class=3D"nf">throwsExceptionWh=
enPeeked</span><span class=3D"o">()</span> <span class=3D"o">{</span>
            <span class=3D"n">assertThrows</span><span class=3D"o">(</span>=
<span class=3D"nc">EmptyStackException</span><span class=3D"o">.</span><spa=
n class=3D"na">class</span><span class=3D"o">,</span> <span class=3D"nl">st=
ack:</span><span class=3D"o">:</span><span class=3D"n">peek</span><span cla=
ss=3D"o">);</span>
        <span class=3D"o">}</span>

        <span class=3D"nd">@Nested</span>
        <span class=3D"nd">@DisplayName</span><span class=3D"o">(</span><sp=
an class=3D"s">"after pushing an element"</span><span class=3D"o">)</span>
        <span class=3D"kd">class</span> <span class=3D"nc">AfterPushing</sp=
an> <span class=3D"o">{</span>

            <span class=3D"nc">String</span> <span class=3D"n">anElement</s=
pan> <span class=3D"o">=3D</span> <span class=3D"s">"an element"</span><spa=
n class=3D"o">;</span>

            <span class=3D"nd">@BeforeEach</span>
            <span class=3D"kt">void</span> <span class=3D"nf">pushAnElement=
</span><span class=3D"o">()</span> <span class=3D"o">{</span>
                <span class=3D"n">stack</span><span class=3D"o">.</span><sp=
an class=3D"na">push</span><span class=3D"o">(</span><span class=3D"n">anEl=
ement</span><span class=3D"o">);</span>
            <span class=3D"o">}</span>

            <span class=3D"nd">@Test</span>
            <span class=3D"nd">@DisplayName</span><span class=3D"o">(</span=
><span class=3D"s">"it is no longer empty"</span><span class=3D"o">)</span>
            <span class=3D"kt">void</span> <span class=3D"nf">isNotEmpty</s=
pan><span class=3D"o">()</span> <span class=3D"o">{</span>
                <span class=3D"n">assertFalse</span><span class=3D"o">(</sp=
an><span class=3D"n">stack</span><span class=3D"o">.</span><span class=3D"n=
a">isEmpty</span><span class=3D"o">());</span>
            <span class=3D"o">}</span>

            <span class=3D"nd">@Test</span>
            <span class=3D"nd">@DisplayName</span><span class=3D"o">(</span=
><span class=3D"s">"returns the element when popped and is empty"</span><sp=
an class=3D"o">)</span>
            <span class=3D"kt">void</span> <span class=3D"nf">returnElement=
WhenPopped</span><span class=3D"o">()</span> <span class=3D"o">{</span>
                <span class=3D"n">assertEquals</span><span class=3D"o">(</s=
pan><span class=3D"n">anElement</span><span class=3D"o">,</span> <span clas=
s=3D"n">stack</span><span class=3D"o">.</span><span class=3D"na">pop</span>=
<span class=3D"o">());</span>
                <span class=3D"n">assertTrue</span><span class=3D"o">(</spa=
n><span class=3D"n">stack</span><span class=3D"o">.</span><span class=3D"na=
">isEmpty</span><span class=3D"o">());</span>
            <span class=3D"o">}</span>

            <span class=3D"nd">@Test</span>
            <span class=3D"nd">@DisplayName</span><span class=3D"o">(</span=
><span class=3D"s">"returns the element when peeked but remains not empty"<=
/span><span class=3D"o">)</span>
            <span class=3D"kt">void</span> <span class=3D"nf">returnElement=
WhenPeeked</span><span class=3D"o">()</span> <span class=3D"o">{</span>
                <span class=3D"n">assertEquals</span><span class=3D"o">(</s=
pan><span class=3D"n">anElement</span><span class=3D"o">,</span> <span clas=
s=3D"n">stack</span><span class=3D"o">.</span><span class=3D"na">peek</span=
><span class=3D"o">());</span>
                <span class=3D"n">assertFalse</span><span class=3D"o">(</sp=
an><span class=3D"n">stack</span><span class=3D"o">.</span><span class=3D"n=
a">isEmpty</span><span class=3D"o">());</span>
            <span class=3D"o">}</span>
        <span class=3D"o">}</span>
    <span class=3D"o">}</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>When executing this example in an IDE, the test execution tree in the GU=
I will look
similar to the following image.</p>
</div>
<div class=3D"imageblock">
<div class=3D"content">
<img src=3D"https://junit.org/junit5/docs/current/user-guide/images/writing=
-tests_nested_test_ide.png" alt=3D"writing tests nested test ide">
</div>
<div class=3D"title">Executing a nested test in an IDE</div>
</div>
<div class=3D"paragraph">
<p>In this example, preconditions from outer tests are used in inner tests =
by defining
hierarchical lifecycle methods for the setup code. For example, <code>creat=
eNewStack()</code> is a
<code>@BeforeEach</code> lifecycle method that is used in the test class in=
 which it is defined and
in all levels in the nesting tree below the class in which it is defined.</=
p>
</div>
<div class=3D"paragraph">
<p>The fact that setup code from outer tests is run before inner tests are =
executed gives you
the ability to run all tests independently. You can even run inner tests al=
one without
running the outer tests, because the setup code from the outer tests is alw=
ays executed.</p>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
<em>Only non-static nested classes</em> (i.e. <em>inner classes</em>) can s=
erve as <code>@Nested</code> test
classes. Nesting can be arbitrarily deep, and those inner classes are subje=
ct to full
lifecycle support with one exception: <code>@BeforeAll</code> and <code>@Af=
terAll</code> methods do not work
<em>by default</em>. The reason is that Java does not allow <code>static</c=
ode> members in inner classes.
However, this restriction can be circumvented by annotating a <code>@Nested=
</code> test class with
<code>@TestInstance(Lifecycle.PER_CLASS)</code> (see <a href=3D"https://jun=
it.org/junit5/docs/current/user-guide/#writing-tests-test-instance-lifecycl=
e">Test Instance Lifecycle</a>).
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"writing-tests-dependency-injection"><a class=3D"anchor" href=3D"h=
ttps://junit.org/junit5/docs/current/user-guide/#writing-tests-dependency-i=
njection"></a>2.12. Dependency Injection for Constructors and Methods</h3>
<div class=3D"paragraph">
<p>In all prior JUnit versions, test constructors or methods were not allow=
ed to have
parameters (at least not with the standard <code>Runner</code> implementati=
ons). As one of the major
changes in JUnit Jupiter, both test constructors and methods are now permit=
ted to have
parameters. This allows for greater flexibility and enables <em>Dependency =
Injection</em> for
constructors and methods.</p>
</div>
<div class=3D"paragraph">
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/extension/ParameterResolver.html">ParameterR=
esolver</a></code> defines the API for test extensions that wish to <em>dyn=
amically</em>
resolve parameters at runtime. If a <em>test class</em> constructor, a <em>=
test method</em>, or a
<em>lifecycle method</em> (see <a href=3D"https://junit.org/junit5/docs/cur=
rent/user-guide/#writing-tests-classes-and-methods">Test Classes and Method=
s</a>) accepts a parameter, the
parameter must be resolved at runtime by a registered <code>ParameterResolv=
er</code>.</p>
</div>
<div class=3D"paragraph">
<p>There are currently three built-in resolvers that are registered automat=
ically.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code><a href=3D"https://github.com/junit-team/junit5/tree/r5.8.2/junit-=
jupiter-engine/src/main/java/org/junit/jupiter/engine/extension/TestInfoPar=
ameterResolver.java">TestInfoParameterResolver</a></code>: if a constructor=
 or method parameter is of type
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupite=
r.api/org/junit/jupiter/api/TestInfo.html">TestInfo</a></code>, the <code>T=
estInfoParameterResolver</code> will supply an instance of <code>TestInfo</=
code>
corresponding to the current container or test as the value for the paramet=
er. The
<code>TestInfo</code> can then be used to retrieve information about the cu=
rrent container or test
such as the display name, the test class, the test method, and associated t=
ags. The
display name is either a technical name, such as the name of the test class=
 or test
method, or a custom name configured via <code>@DisplayName</code>.</p>
<div class=3D"paragraph">
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/TestInfo.html">TestInfo</a></code> acts as a=
 drop-in replacement for the <code>TestName</code> rule from JUnit 4. The
following demonstrates how to have <code>TestInfo</code> injected into a te=
st constructor,
<code>@BeforeEach</code> method, and <code>@Test</code> method.</p>
</div>
</li>
</ul>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">static</span> <span class=3D"n">org</span>=
<span class=3D"o">.</span><span class=3D"na">junit</span><span class=3D"o">=
.</span><span class=3D"na">jupiter</span><span class=3D"o">.</span><span cl=
ass=3D"na">api</span><span class=3D"o">.</span><span class=3D"na">Assertion=
s</span><span class=3D"o">.</span><span class=3D"na">assertEquals</span><sp=
an class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">Assertions</span><span class=3D"o">.</span><span class=3D"na">ass=
ertTrue</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.B=
eforeEach</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.D=
isplayName</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
ag</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
estInfo</span><span class=3D"o">;</span>

<span class=3D"nd">@DisplayName</span><span class=3D"o">(</span><span class=
=3D"s">"TestInfo Demo"</span><span class=3D"o">)</span>
<span class=3D"kd">class</span> <span class=3D"nc">TestInfoDemo</span> <spa=
n class=3D"o">{</span>

    <span class=3D"nc">TestInfoDemo</span><span class=3D"o">(</span><span c=
lass=3D"nc">TestInfo</span> <span class=3D"n">testInfo</span><span class=3D=
"o">)</span> <span class=3D"o">{</span>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"s">"TestInfo Demo"</span><span class=3D"o">,</span> <span class=
=3D"n">testInfo</span><span class=3D"o">.</span><span class=3D"na">getDispl=
ayName</span><span class=3D"o">());</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@BeforeEach</span>
    <span class=3D"kt">void</span> <span class=3D"nf">init</span><span clas=
s=3D"o">(</span><span class=3D"nc">TestInfo</span> <span class=3D"n">testIn=
fo</span><span class=3D"o">)</span> <span class=3D"o">{</span>
        <span class=3D"nc">String</span> <span class=3D"n">displayName</spa=
n> <span class=3D"o">=3D</span> <span class=3D"n">testInfo</span><span clas=
s=3D"o">.</span><span class=3D"na">getDisplayName</span><span class=3D"o">(=
);</span>
        <span class=3D"n">assertTrue</span><span class=3D"o">(</span><span =
class=3D"n">displayName</span><span class=3D"o">.</span><span class=3D"na">=
equals</span><span class=3D"o">(</span><span class=3D"s">"TEST 1"</span><sp=
an class=3D"o">)</span> <span class=3D"o">||</span> <span class=3D"n">displ=
ayName</span><span class=3D"o">.</span><span class=3D"na">equals</span><spa=
n class=3D"o">(</span><span class=3D"s">"test2()"</span><span class=3D"o">)=
);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"nd">@DisplayName</span><span class=3D"o">(</span><span c=
lass=3D"s">"TEST 1"</span><span class=3D"o">)</span>
    <span class=3D"nd">@Tag</span><span class=3D"o">(</span><span class=3D"=
s">"my-tag"</span><span class=3D"o">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">test1</span><span cla=
ss=3D"o">(</span><span class=3D"nc">TestInfo</span> <span class=3D"n">testI=
nfo</span><span class=3D"o">)</span> <span class=3D"o">{</span>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"s">"TEST 1"</span><span class=3D"o">,</span> <span class=3D"n">t=
estInfo</span><span class=3D"o">.</span><span class=3D"na">getDisplayName</=
span><span class=3D"o">());</span>
        <span class=3D"n">assertTrue</span><span class=3D"o">(</span><span =
class=3D"n">testInfo</span><span class=3D"o">.</span><span class=3D"na">get=
Tags</span><span class=3D"o">().</span><span class=3D"na">contains</span><s=
pan class=3D"o">(</span><span class=3D"s">"my-tag"</span><span class=3D"o">=
));</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">test2</span><span cla=
ss=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code><a href=3D"https://github.com/junit-team/junit5/tree/r5.8.2/junit-=
jupiter-engine/src/main/java/org/junit/jupiter/engine/extension/RepetitionI=
nfoParameterResolver.java">RepetitionInfoParameterResolver</a></code>: if a=
 method parameter in a <code>@RepeatedTest</code>,
<code>@BeforeEach</code>, or <code>@AfterEach</code> method is of type <cod=
e><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupiter.ap=
i/org/junit/jupiter/api/RepetitionInfo.html">RepetitionInfo</a></code>, the
<code>RepetitionInfoParameterResolver</code> will supply an instance of <co=
de>RepetitionInfo</code>.
<code>RepetitionInfo</code> can then be used to retrieve information about =
the current repetition
and the total number of repetitions for the corresponding <code>@RepeatedTe=
st</code>. Note,
however, that <code>RepetitionInfoParameterResolver</code> is not registere=
d outside the context
of a <code>@RepeatedTest</code>. See <a href=3D"https://junit.org/junit5/do=
cs/current/user-guide/#writing-tests-repeated-tests-examples">Repeated Test=
 Examples</a>.</p>
</li>
<li>
<p><code><a href=3D"https://github.com/junit-team/junit5/tree/r5.8.2/junit-=
jupiter-engine/src/main/java/org/junit/jupiter/engine/extension/TestReporte=
rParameterResolver.java">TestReporterParameterResolver</a></code>: if a con=
structor or method parameter is of type
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupite=
r.api/org/junit/jupiter/api/TestReporter.html">TestReporter</a></code>, the=
 <code>TestReporterParameterResolver</code> will supply an instance of
<code>TestReporter</code>. The <code>TestReporter</code> can be used to pub=
lish additional data about the
current test run. The data can be consumed via the <code>reportingEntryPubl=
ished()</code> method in
a <code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.plat=
form.launcher/org/junit/platform/launcher/TestExecutionListener.html">TestE=
xecutionListener</a></code>, allowing it to be viewed in IDEs or included i=
n reports.</p>
<div class=3D"paragraph">
<p>In JUnit Jupiter you should use <code>TestReporter</code> where you used=
 to print information to
<code>stdout</code> or <code>stderr</code> in JUnit 4. Using <code>@RunWith=
(JUnitPlatform.class)</code> will output all
reported entries to <code>stdout</code>. In addition, some IDEs print repor=
t entries to <code>stdout</code> or
display them in the user interface for test results.</p>
</div>
</li>
</ul>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kd">=
class</span> <span class=3D"nc">TestReporterDemo</span> <span class=3D"o">{=
</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">reportSingleValue</sp=
an><span class=3D"o">(</span><span class=3D"nc">TestReporter</span> <span c=
lass=3D"n">testReporter</span><span class=3D"o">)</span> <span class=3D"o">=
{</span>
        <span class=3D"n">testReporter</span><span class=3D"o">.</span><spa=
n class=3D"na">publishEntry</span><span class=3D"o">(</span><span class=3D"=
s">"a status message"</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">reportKeyValuePair</s=
pan><span class=3D"o">(</span><span class=3D"nc">TestReporter</span> <span =
class=3D"n">testReporter</span><span class=3D"o">)</span> <span class=3D"o"=
>{</span>
        <span class=3D"n">testReporter</span><span class=3D"o">.</span><spa=
n class=3D"na">publishEntry</span><span class=3D"o">(</span><span class=3D"=
s">"a key"</span><span class=3D"o">,</span> <span class=3D"s">"a value"</sp=
an><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">reportMultipleKeyValu=
ePairs</span><span class=3D"o">(</span><span class=3D"nc">TestReporter</spa=
n> <span class=3D"n">testReporter</span><span class=3D"o">)</span> <span cl=
ass=3D"o">{</span>
        <span class=3D"nc">Map</span><span class=3D"o">&lt;</span><span cla=
ss=3D"nc">String</span><span class=3D"o">,</span> <span class=3D"nc">String=
</span><span class=3D"o">&gt;</span> <span class=3D"n">values</span> <span =
class=3D"o">=3D</span> <span class=3D"k">new</span> <span class=3D"nc">Hash=
Map</span><span class=3D"o">&lt;&gt;();</span>
        <span class=3D"n">values</span><span class=3D"o">.</span><span clas=
s=3D"na">put</span><span class=3D"o">(</span><span class=3D"s">"user name"<=
/span><span class=3D"o">,</span> <span class=3D"s">"dk38"</span><span class=
=3D"o">);</span>
        <span class=3D"n">values</span><span class=3D"o">.</span><span clas=
s=3D"na">put</span><span class=3D"o">(</span><span class=3D"s">"award year"=
</span><span class=3D"o">,</span> <span class=3D"s">"1974"</span><span clas=
s=3D"o">);</span>

        <span class=3D"n">testReporter</span><span class=3D"o">.</span><spa=
n class=3D"na">publishEntry</span><span class=3D"o">(</span><span class=3D"=
n">values</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
Other parameter resolvers must be explicitly enabled by registering appropr=
iate
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions">ex=
tensions</a> via <code>@ExtendWith</code>.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>Check out the <code><a href=3D"https://github.com/junit-team/junit5-samp=
les/tree/r5.8.2/junit5-jupiter-extensions/src/main/java/com/example/random/=
RandomParametersExtension.java">RandomParametersExtension</a></code> for an=
 example of a custom
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupite=
r.api/org/junit/jupiter/api/extension/ParameterResolver.html">ParameterReso=
lver</a></code>. While not intended to be production-ready, it demonstrates=
 the
simplicity and expressiveness of both the extension model and the parameter=
 resolution
process. <code>MyRandomParametersTest</code> demonstrates how to inject ran=
dom values into <code>@Test</code>
methods.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ExtendWith</span><span class=3D"o">(</span><span class=3D"nc">RandomParame=
tersExtension</span><span class=3D"o">.</span><span class=3D"na">class</spa=
n><span class=3D"o">)</span>
<span class=3D"kd">class</span> <span class=3D"nc">MyRandomParametersTest</=
span> <span class=3D"o">{</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">injectsInteger</span>=
<span class=3D"o">(</span><span class=3D"nd">@Random</span> <span class=3D"=
kt">int</span> <span class=3D"n">i</span><span class=3D"o">,</span> <span c=
lass=3D"nd">@Random</span> <span class=3D"kt">int</span> <span class=3D"n">=
j</span><span class=3D"o">)</span> <span class=3D"o">{</span>
        <span class=3D"n">assertNotEquals</span><span class=3D"o">(</span><=
span class=3D"n">i</span><span class=3D"o">,</span> <span class=3D"n">j</sp=
an><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">injectsDouble</span><=
span class=3D"o">(</span><span class=3D"nd">@Random</span> <span class=3D"k=
t">double</span> <span class=3D"n">d</span><span class=3D"o">)</span> <span=
 class=3D"o">{</span>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"mf">0.0</span><span class=3D"o">,</span> <span class=3D"n">d</sp=
an><span class=3D"o">,</span> <span class=3D"mf">1.0</span><span class=3D"o=
">);</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>For real-world use cases, check out the source code for the <code><a hre=
f=3D"https://github.com/mockito/mockito/blob/release/2.x/subprojects/junit-=
jupiter/src/main/java/org/mockito/junit/jupiter/MockitoExtension.java">Mock=
itoExtension</a></code> and the
<code><a href=3D"https://github.com/spring-projects/spring-framework/tree/H=
EAD/spring-test/src/main/java/org/springframework/test/context/junit/jupite=
r/SpringExtension.java">SpringExtension</a></code>.</p>
</div>
<div class=3D"paragraph">
<p>When the type of the parameter to inject is the only condition for your
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupite=
r.api/org/junit/jupiter/api/extension/ParameterResolver.html">ParameterReso=
lver</a></code>, you can use the generic <code><a href=3D"https://github.co=
m/junit-team/junit5/tree/r5.8.2/junit-jupiter-api/src/main/java/org/junit/j=
upiter/api/extension/support/TypeBasedParameterResolver.java">TypeBasedPara=
meterResolver</a></code> base class.
The <code>supportsParameters</code> method is implemented behind the scenes=
 and supports
parameterized types.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"writing-tests-test-interfaces-and-default-methods"><a class=3D"an=
chor" href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tes=
ts-test-interfaces-and-default-methods"></a>2.13. Test Interfaces and Defau=
lt Methods</h3>
<div class=3D"paragraph">
<p>JUnit Jupiter allows <code>@Test</code>, <code>@RepeatedTest</code>, <co=
de>@ParameterizedTest</code>, <code>@TestFactory</code>,
<code>@TestTemplate</code>, <code>@BeforeEach</code>, and <code>@AfterEach<=
/code> to be declared on interface <code>default</code>
methods. <code>@BeforeAll</code> and <code>@AfterAll</code> can either be d=
eclared on <code>static</code> methods in a
test interface or on interface <code>default</code> methods <em>if</em> the=
 test interface or test class is
annotated with <code>@TestInstance(Lifecycle.PER_CLASS)</code> (see
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-=
test-instance-lifecycle">Test Instance Lifecycle</a>). Here are some exampl=
es.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@TestInstance</span><span class=3D"o">(</span><span class=3D"nc">Lifecycle<=
/span><span class=3D"o">.</span><span class=3D"na">PER_CLASS</span><span cl=
ass=3D"o">)</span>
<span class=3D"kd">interface</span> <span class=3D"nc">TestLifecycleLogger<=
/span> <span class=3D"o">{</span>

    <span class=3D"kd">static</span> <span class=3D"kd">final</span> <span =
class=3D"nc">Logger</span> <span class=3D"n">logger</span> <span class=3D"o=
">=3D</span> <span class=3D"nc">Logger</span><span class=3D"o">.</span><spa=
n class=3D"na">getLogger</span><span class=3D"o">(</span><span class=3D"nc"=
>TestLifecycleLogger</span><span class=3D"o">.</span><span class=3D"na">cla=
ss</span><span class=3D"o">.</span><span class=3D"na">getName</span><span c=
lass=3D"o">());</span>

    <span class=3D"nd">@BeforeAll</span>
    <span class=3D"k">default</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">beforeAllTests</span><span class=3D"o">()</span> <span class=3D=
"o">{</span>
        <span class=3D"n">logger</span><span class=3D"o">.</span><span clas=
s=3D"na">info</span><span class=3D"o">(</span><span class=3D"s">"Before all=
 tests"</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@AfterAll</span>
    <span class=3D"k">default</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">afterAllTests</span><span class=3D"o">()</span> <span class=3D"=
o">{</span>
        <span class=3D"n">logger</span><span class=3D"o">.</span><span clas=
s=3D"na">info</span><span class=3D"o">(</span><span class=3D"s">"After all =
tests"</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@BeforeEach</span>
    <span class=3D"k">default</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">beforeEachTest</span><span class=3D"o">(</span><span class=3D"n=
c">TestInfo</span> <span class=3D"n">testInfo</span><span class=3D"o">)</sp=
an> <span class=3D"o">{</span>
        <span class=3D"n">logger</span><span class=3D"o">.</span><span clas=
s=3D"na">info</span><span class=3D"o">(()</span> <span class=3D"o">-&gt;</s=
pan> <span class=3D"nc">String</span><span class=3D"o">.</span><span class=
=3D"na">format</span><span class=3D"o">(</span><span class=3D"s">"About to =
execute [%s]"</span><span class=3D"o">,</span>
            <span class=3D"n">testInfo</span><span class=3D"o">.</span><spa=
n class=3D"na">getDisplayName</span><span class=3D"o">()));</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@AfterEach</span>
    <span class=3D"k">default</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">afterEachTest</span><span class=3D"o">(</span><span class=3D"nc=
">TestInfo</span> <span class=3D"n">testInfo</span><span class=3D"o">)</spa=
n> <span class=3D"o">{</span>
        <span class=3D"n">logger</span><span class=3D"o">.</span><span clas=
s=3D"na">info</span><span class=3D"o">(()</span> <span class=3D"o">-&gt;</s=
pan> <span class=3D"nc">String</span><span class=3D"o">.</span><span class=
=3D"na">format</span><span class=3D"o">(</span><span class=3D"s">"Finished =
executing [%s]"</span><span class=3D"o">,</span>
            <span class=3D"n">testInfo</span><span class=3D"o">.</span><spa=
n class=3D"na">getDisplayName</span><span class=3D"o">()));</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kd">=
interface</span> <span class=3D"nc">TestInterfaceDynamicTestsDemo</span> <s=
pan class=3D"o">{</span>

    <span class=3D"nd">@TestFactory</span>
    <span class=3D"k">default</span> <span class=3D"nc">Stream</span><span =
class=3D"o">&lt;</span><span class=3D"nc">DynamicTest</span><span class=3D"=
o">&gt;</span> <span class=3D"nf">dynamicTestsForPalindromes</span><span cl=
ass=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"k">return</span> <span class=3D"nc">Stream</span><sp=
an class=3D"o">.</span><span class=3D"na">of</span><span class=3D"o">(</spa=
n><span class=3D"s">"racecar"</span><span class=3D"o">,</span> <span class=
=3D"s">"radar"</span><span class=3D"o">,</span> <span class=3D"s">"mom"</sp=
an><span class=3D"o">,</span> <span class=3D"s">"dad"</span><span class=3D"=
o">)</span>
            <span class=3D"o">.</span><span class=3D"na">map</span><span cl=
ass=3D"o">(</span><span class=3D"n">text</span> <span class=3D"o">-&gt;</sp=
an> <span class=3D"n">dynamicTest</span><span class=3D"o">(</span><span cla=
ss=3D"n">text</span><span class=3D"o">,</span> <span class=3D"o">()</span> =
<span class=3D"o">-&gt;</span> <span class=3D"n">assertTrue</span><span cla=
ss=3D"o">(</span><span class=3D"n">isPalindrome</span><span class=3D"o">(</=
span><span class=3D"n">text</span><span class=3D"o">))));</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p><code>@ExtendWith</code> and <code>@Tag</code> can be declared on a test=
 interface so that classes that
implement the interface automatically inherit its tags and extensions. See
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-lif=
ecycle-callbacks-before-after-execution">Before and After Test Execution Ca=
llbacks</a> for the source code of the
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-lif=
ecycle-callbacks-timing-extension">TimingExtension</a>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@Tag</span><span class=3D"o">(</span><span class=3D"s">"timed"</span><span =
class=3D"o">)</span>
<span class=3D"nd">@ExtendWith</span><span class=3D"o">(</span><span class=
=3D"nc">TimingExtension</span><span class=3D"o">.</span><span class=3D"na">=
class</span><span class=3D"o">)</span>
<span class=3D"kd">interface</span> <span class=3D"nc">TimeExecutionLogger<=
/span> <span class=3D"o">{</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>In your test class you can then implement these test interfaces to have =
them applied.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kd">=
class</span> <span class=3D"nc">TestInterfaceDemo</span> <span class=3D"kd"=
>implements</span> <span class=3D"nc">TestLifecycleLogger</span><span class=
=3D"o">,</span>
        <span class=3D"nc">TimeExecutionLogger</span><span class=3D"o">,</s=
pan> <span class=3D"nc">TestInterfaceDynamicTestsDemo</span> <span class=3D=
"o">{</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">isEqualValue</span><s=
pan class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"mi">1</span><span class=3D"o">,</span> <span class=3D"s">"a"</sp=
an><span class=3D"o">.</span><span class=3D"na">length</span><span class=3D=
"o">(),</span> <span class=3D"s">"is always equal"</span><span class=3D"o">=
);</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Running the <code>TestInterfaceDemo</code> results in output similar to =
the following:</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>INFO  example.TestLifecycleLogger - Before all tests
INFO  example.TestLifecycleLogger - About to execute [dynamicTestsForPalind=
romes()]
INFO  example.TimingExtension - Method [dynamicTestsForPalindromes] took 19=
 ms.
INFO  example.TestLifecycleLogger - Finished executing [dynamicTestsForPali=
ndromes()]
INFO  example.TestLifecycleLogger - About to execute [isEqualValue()]
INFO  example.TimingExtension - Method [isEqualValue] took 1 ms.
INFO  example.TestLifecycleLogger - Finished executing [isEqualValue()]
INFO  example.TestLifecycleLogger - After all tests</pre>
</div>
</div>
<div class=3D"paragraph">
<p>Another possible application of this feature is to write tests for inter=
face contracts.
For example, you can write tests for how implementations of <code>Object.eq=
uals</code> or
<code>Comparable.compareTo</code> should behave as follows.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kd">=
public</span> <span class=3D"kd">interface</span> <span class=3D"nc">Testab=
le</span><span class=3D"o">&lt;</span><span class=3D"no">T</span><span clas=
s=3D"o">&gt;</span> <span class=3D"o">{</span>

    <span class=3D"no">T</span> <span class=3D"nf">createValue</span><span =
class=3D"o">();</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kd">=
public</span> <span class=3D"kd">interface</span> <span class=3D"nc">Equals=
Contract</span><span class=3D"o">&lt;</span><span class=3D"no">T</span><spa=
n class=3D"o">&gt;</span> <span class=3D"kd">extends</span> <span class=3D"=
nc">Testable</span><span class=3D"o">&lt;</span><span class=3D"no">T</span>=
<span class=3D"o">&gt;</span> <span class=3D"o">{</span>

    <span class=3D"no">T</span> <span class=3D"nf">createNotEqualValue</spa=
n><span class=3D"o">();</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"k">default</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">valueEqualsItself</span><span class=3D"o">()</span> <span class=
=3D"o">{</span>
        <span class=3D"no">T</span> <span class=3D"n">value</span> <span cl=
ass=3D"o">=3D</span> <span class=3D"n">createValue</span><span class=3D"o">=
();</span>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"n">value</span><span class=3D"o">,</span> <span class=3D"n">valu=
e</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"k">default</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">valueDoesNotEqualNull</span><span class=3D"o">()</span> <span c=
lass=3D"o">{</span>
        <span class=3D"no">T</span> <span class=3D"n">value</span> <span cl=
ass=3D"o">=3D</span> <span class=3D"n">createValue</span><span class=3D"o">=
();</span>
        <span class=3D"n">assertFalse</span><span class=3D"o">(</span><span=
 class=3D"n">value</span><span class=3D"o">.</span><span class=3D"na">equal=
s</span><span class=3D"o">(</span><span class=3D"kc">null</span><span class=
=3D"o">));</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"k">default</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">valueDoesNotEqualDifferentValue</span><span class=3D"o">()</spa=
n> <span class=3D"o">{</span>
        <span class=3D"no">T</span> <span class=3D"n">value</span> <span cl=
ass=3D"o">=3D</span> <span class=3D"n">createValue</span><span class=3D"o">=
();</span>
        <span class=3D"no">T</span> <span class=3D"n">differentValue</span>=
 <span class=3D"o">=3D</span> <span class=3D"n">createNotEqualValue</span><=
span class=3D"o">();</span>
        <span class=3D"n">assertNotEquals</span><span class=3D"o">(</span><=
span class=3D"n">value</span><span class=3D"o">,</span> <span class=3D"n">d=
ifferentValue</span><span class=3D"o">);</span>
        <span class=3D"n">assertNotEquals</span><span class=3D"o">(</span><=
span class=3D"n">differentValue</span><span class=3D"o">,</span> <span clas=
s=3D"n">value</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kd">=
public</span> <span class=3D"kd">interface</span> <span class=3D"nc">Compar=
ableContract</span><span class=3D"o">&lt;</span><span class=3D"no">T</span>=
 <span class=3D"kd">extends</span> <span class=3D"nc">Comparable</span><spa=
n class=3D"o">&lt;</span><span class=3D"no">T</span><span class=3D"o">&gt;&=
gt;</span> <span class=3D"kd">extends</span> <span class=3D"nc">Testable</s=
pan><span class=3D"o">&lt;</span><span class=3D"no">T</span><span class=3D"=
o">&gt;</span> <span class=3D"o">{</span>

    <span class=3D"no">T</span> <span class=3D"nf">createSmallerValue</span=
><span class=3D"o">();</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"k">default</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">returnsZeroWhenComparedToItself</span><span class=3D"o">()</spa=
n> <span class=3D"o">{</span>
        <span class=3D"no">T</span> <span class=3D"n">value</span> <span cl=
ass=3D"o">=3D</span> <span class=3D"n">createValue</span><span class=3D"o">=
();</span>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"mi">0</span><span class=3D"o">,</span> <span class=3D"n">value</=
span><span class=3D"o">.</span><span class=3D"na">compareTo</span><span cla=
ss=3D"o">(</span><span class=3D"n">value</span><span class=3D"o">));</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"k">default</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">returnsPositiveNumberWhenComparedToSmallerValue</span><span cla=
ss=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"no">T</span> <span class=3D"n">value</span> <span cl=
ass=3D"o">=3D</span> <span class=3D"n">createValue</span><span class=3D"o">=
();</span>
        <span class=3D"no">T</span> <span class=3D"n">smallerValue</span> <=
span class=3D"o">=3D</span> <span class=3D"n">createSmallerValue</span><spa=
n class=3D"o">();</span>
        <span class=3D"n">assertTrue</span><span class=3D"o">(</span><span =
class=3D"n">value</span><span class=3D"o">.</span><span class=3D"na">compar=
eTo</span><span class=3D"o">(</span><span class=3D"n">smallerValue</span><s=
pan class=3D"o">)</span> <span class=3D"o">&gt;</span> <span class=3D"mi">0=
</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"k">default</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">returnsNegativeNumberWhenComparedToLargerValue</span><span clas=
s=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"no">T</span> <span class=3D"n">value</span> <span cl=
ass=3D"o">=3D</span> <span class=3D"n">createValue</span><span class=3D"o">=
();</span>
        <span class=3D"no">T</span> <span class=3D"n">smallerValue</span> <=
span class=3D"o">=3D</span> <span class=3D"n">createSmallerValue</span><spa=
n class=3D"o">();</span>
        <span class=3D"n">assertTrue</span><span class=3D"o">(</span><span =
class=3D"n">smallerValue</span><span class=3D"o">.</span><span class=3D"na"=
>compareTo</span><span class=3D"o">(</span><span class=3D"n">value</span><s=
pan class=3D"o">)</span> <span class=3D"o">&lt;</span> <span class=3D"mi">0=
</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>In your test class you can then implement both contract interfaces there=
by inheriting the
corresponding tests. Of course you=E2=80=99ll have to implement the abstrac=
t methods.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kd">=
class</span> <span class=3D"nc">StringTests</span> <span class=3D"kd">imple=
ments</span> <span class=3D"nc">ComparableContract</span><span class=3D"o">=
&lt;</span><span class=3D"nc">String</span><span class=3D"o">&gt;,</span> <=
span class=3D"nc">EqualsContract</span><span class=3D"o">&lt;</span><span c=
lass=3D"nc">String</span><span class=3D"o">&gt;</span> <span class=3D"o">{<=
/span>

    <span class=3D"nd">@Override</span>
    <span class=3D"kd">public</span> <span class=3D"nc">String</span> <span=
 class=3D"nf">createValue</span><span class=3D"o">()</span> <span class=3D"=
o">{</span>
        <span class=3D"k">return</span> <span class=3D"s">"banana"</span><s=
pan class=3D"o">;</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Override</span>
    <span class=3D"kd">public</span> <span class=3D"nc">String</span> <span=
 class=3D"nf">createSmallerValue</span><span class=3D"o">()</span> <span cl=
ass=3D"o">{</span>
        <span class=3D"k">return</span> <span class=3D"s">"apple"</span><sp=
an class=3D"o">;</span> <span class=3D"c1">// 'a' &lt; 'b' in "banana"</spa=
n>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Override</span>
    <span class=3D"kd">public</span> <span class=3D"nc">String</span> <span=
 class=3D"nf">createNotEqualValue</span><span class=3D"o">()</span> <span c=
lass=3D"o">{</span>
        <span class=3D"k">return</span> <span class=3D"s">"cherry"</span><s=
pan class=3D"o">;</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
The above tests are merely meant as examples and therefore not complete.
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"writing-tests-repeated-tests"><a class=3D"anchor" href=3D"https:/=
/junit.org/junit5/docs/current/user-guide/#writing-tests-repeated-tests"></=
a>2.14. Repeated Tests</h3>
<div class=3D"paragraph">
<p>JUnit Jupiter provides the ability to repeat a test a specified number o=
f times by
annotating a method with <code>@RepeatedTest</code> and specifying the tota=
l number of repetitions
desired. Each invocation of a repeated test behaves like the execution of a=
 regular
<code>@Test</code> method with full support for the same lifecycle callback=
s and extensions.</p>
</div>
<div class=3D"paragraph">
<p>The following example demonstrates how to declare a test named <code>rep=
eatedTest()</code> that
will be automatically repeated 10 times.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@RepeatedTest</span><span class=3D"o">(</span><span class=3D"mi">10</span><=
span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">repeatedTest</span><span =
class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>In addition to specifying the number of repetitions, a custom display na=
me can be
configured for each repetition via the <code>name</code> attribute of the <=
code>@RepeatedTest</code>
annotation. Furthermore, the display name can be a pattern composed of a co=
mbination of
static text and dynamic placeholders. The following placeholders are curren=
tly supported.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code>{displayName}</code>: display name of the <code>@RepeatedTest</cod=
e> method</p>
</li>
<li>
<p><code>{currentRepetition}</code>: the current repetition count</p>
</li>
<li>
<p><code>{totalRepetitions}</code>: the total number of repetitions</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>The default display name for a given repetition is generated based on th=
e following
pattern: <code>"repetition {currentRepetition} of {totalRepetitions}"</code=
>. Thus, the display
names for individual repetitions of the previous <code>repeatedTest()</code=
> example would be:
<code>repetition 1 of 10</code>, <code>repetition 2 of 10</code>, etc. If y=
ou would like the display name of
the <code>@RepeatedTest</code> method included in the name of each repetiti=
on, you can define your
own custom pattern or use the predefined <code>RepeatedTest.LONG_DISPLAY_NA=
ME</code> pattern. The
latter is equal to <code>"{displayName} :: repetition {currentRepetition} o=
f
{totalRepetitions}"</code> which results in display names for individual re=
petitions like
<code>repeatedTest() :: repetition 1 of 10</code>, <code>repeatedTest() :: =
repetition 2 of 10</code>, etc.</p>
</div>
<div class=3D"paragraph">
<p>In order to retrieve information about the current repetition and the to=
tal number of
repetitions programmatically, a developer can choose to have an instance of
<code>RepetitionInfo</code> injected into a <code>@RepeatedTest</code>, <co=
de>@BeforeEach</code>, or <code>@AfterEach</code> method.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-repeated-tests-examples"><a class=3D"anchor" href=
=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-repeate=
d-tests-examples"></a>2.14.1. Repeated Test Examples</h4>
<div class=3D"paragraph">
<p>The <code>RepeatedTestsDemo</code> class at the end of this section demo=
nstrates several examples of
repeated tests.</p>
</div>
<div class=3D"paragraph">
<p>The <code>repeatedTest()</code> method is identical to example from the =
previous section; whereas,
<code>repeatedTestWithRepetitionInfo()</code> demonstrates how to have an i=
nstance of
<code>RepetitionInfo</code> injected into a test to access the total number=
 of repetitions for the
current repeated test.</p>
</div>
<div class=3D"paragraph">
<p>The next two methods demonstrate how to include a custom <code>@DisplayN=
ame</code> for the
<code>@RepeatedTest</code> method in the display name of each repetition. <=
code>customDisplayName()</code>
combines a custom display name with a custom pattern and then uses <code>Te=
stInfo</code> to verify
the format of the generated display name. <code>Repeat!</code> is the <code=
>{displayName}</code> which comes
from the <code>@DisplayName</code> declaration, and <code>1/1</code> comes =
from
<code>{currentRepetition}/{totalRepetitions}</code>. In contrast,
<code>customDisplayNameWithLongPattern()</code> uses the aforementioned pre=
defined
<code>RepeatedTest.LONG_DISPLAY_NAME</code> pattern.</p>
</div>
<div class=3D"paragraph">
<p><code>repeatedTestInGerman()</code> demonstrates the ability to translat=
e display names of repeated
tests into foreign languages=E2=80=89=E2=80=94=E2=80=89in this case German,=
 resulting in names for individual
repetitions such as: <code>Wiederholung 1 von 5</code>, <code>Wiederholung =
2 von 5</code>, etc.</p>
</div>
<div class=3D"paragraph">
<p>Since the <code>beforeEach()</code> method is annotated with <code>@Befo=
reEach</code> it will get executed
before each repetition of each repeated test. By having the <code>TestInfo<=
/code> and
<code>RepetitionInfo</code> injected into the method, we see that it=E2=80=
=99s possible to obtain
information about the currently executing repeated test. Executing <code>Re=
peatedTestsDemo</code>
with the <code>INFO</code> log level enabled results in the following outpu=
t.</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>INFO: About to execute repetition 1 of 10 for repeatedTest
INFO: About to execute repetition 2 of 10 for repeatedTest
INFO: About to execute repetition 3 of 10 for repeatedTest
INFO: About to execute repetition 4 of 10 for repeatedTest
INFO: About to execute repetition 5 of 10 for repeatedTest
INFO: About to execute repetition 6 of 10 for repeatedTest
INFO: About to execute repetition 7 of 10 for repeatedTest
INFO: About to execute repetition 8 of 10 for repeatedTest
INFO: About to execute repetition 9 of 10 for repeatedTest
INFO: About to execute repetition 10 of 10 for repeatedTest
INFO: About to execute repetition 1 of 5 for repeatedTestWithRepetitionInfo
INFO: About to execute repetition 2 of 5 for repeatedTestWithRepetitionInfo
INFO: About to execute repetition 3 of 5 for repeatedTestWithRepetitionInfo
INFO: About to execute repetition 4 of 5 for repeatedTestWithRepetitionInfo
INFO: About to execute repetition 5 of 5 for repeatedTestWithRepetitionInfo
INFO: About to execute repetition 1 of 1 for customDisplayName
INFO: About to execute repetition 1 of 1 for customDisplayNameWithLongPatte=
rn
INFO: About to execute repetition 1 of 5 for repeatedTestInGerman
INFO: About to execute repetition 2 of 5 for repeatedTestInGerman
INFO: About to execute repetition 3 of 5 for repeatedTestInGerman
INFO: About to execute repetition 4 of 5 for repeatedTestInGerman
INFO: About to execute repetition 5 of 5 for repeatedTestInGerman</pre>
</div>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">static</span> <span class=3D"n">org</span>=
<span class=3D"o">.</span><span class=3D"na">junit</span><span class=3D"o">=
.</span><span class=3D"na">jupiter</span><span class=3D"o">.</span><span cl=
ass=3D"na">api</span><span class=3D"o">.</span><span class=3D"na">Assertion=
s</span><span class=3D"o">.</span><span class=3D"na">assertEquals</span><sp=
an class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">java.util.logging.Logge=
r</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.B=
eforeEach</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.D=
isplayName</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.R=
epeatedTest</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.R=
epetitionInfo</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
estInfo</span><span class=3D"o">;</span>

<span class=3D"kd">class</span> <span class=3D"nc">RepeatedTestsDemo</span>=
 <span class=3D"o">{</span>

    <span class=3D"kd">private</span> <span class=3D"nc">Logger</span> <spa=
n class=3D"n">logger</span> <span class=3D"o">=3D</span> <span class=3D"c1"=
>// ...</span>

    <span class=3D"nd">@BeforeEach</span>
    <span class=3D"kt">void</span> <span class=3D"nf">beforeEach</span><spa=
n class=3D"o">(</span><span class=3D"nc">TestInfo</span> <span class=3D"n">=
testInfo</span><span class=3D"o">,</span> <span class=3D"nc">RepetitionInfo=
</span> <span class=3D"n">repetitionInfo</span><span class=3D"o">)</span> <=
span class=3D"o">{</span>
        <span class=3D"kt">int</span> <span class=3D"n">currentRepetition</=
span> <span class=3D"o">=3D</span> <span class=3D"n">repetitionInfo</span><=
span class=3D"o">.</span><span class=3D"na">getCurrentRepetition</span><spa=
n class=3D"o">();</span>
        <span class=3D"kt">int</span> <span class=3D"n">totalRepetitions</s=
pan> <span class=3D"o">=3D</span> <span class=3D"n">repetitionInfo</span><s=
pan class=3D"o">.</span><span class=3D"na">getTotalRepetitions</span><span =
class=3D"o">();</span>
        <span class=3D"nc">String</span> <span class=3D"n">methodName</span=
> <span class=3D"o">=3D</span> <span class=3D"n">testInfo</span><span class=
=3D"o">.</span><span class=3D"na">getTestMethod</span><span class=3D"o">().=
</span><span class=3D"na">get</span><span class=3D"o">().</span><span class=
=3D"na">getName</span><span class=3D"o">();</span>
        <span class=3D"n">logger</span><span class=3D"o">.</span><span clas=
s=3D"na">info</span><span class=3D"o">(</span><span class=3D"nc">String</sp=
an><span class=3D"o">.</span><span class=3D"na">format</span><span class=3D=
"o">(</span><span class=3D"s">"About to execute repetition %d of %d for %s"=
</span><span class=3D"o">,</span> <span class=3D"c1">//</span>
            <span class=3D"n">currentRepetition</span><span class=3D"o">,</=
span> <span class=3D"n">totalRepetitions</span><span class=3D"o">,</span> <=
span class=3D"n">methodName</span><span class=3D"o">));</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@RepeatedTest</span><span class=3D"o">(</span><span =
class=3D"mi">10</span><span class=3D"o">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">repeatedTest</span><s=
pan class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"c1">// ...</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@RepeatedTest</span><span class=3D"o">(</span><span =
class=3D"mi">5</span><span class=3D"o">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">repeatedTestWithRepet=
itionInfo</span><span class=3D"o">(</span><span class=3D"nc">RepetitionInfo=
</span> <span class=3D"n">repetitionInfo</span><span class=3D"o">)</span> <=
span class=3D"o">{</span>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"mi">5</span><span class=3D"o">,</span> <span class=3D"n">repetit=
ionInfo</span><span class=3D"o">.</span><span class=3D"na">getTotalRepetiti=
ons</span><span class=3D"o">());</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@RepeatedTest</span><span class=3D"o">(</span><span =
class=3D"n">value</span> <span class=3D"o">=3D</span> <span class=3D"mi">1<=
/span><span class=3D"o">,</span> <span class=3D"n">name</span> <span class=
=3D"o">=3D</span> <span class=3D"s">"{displayName} {currentRepetition}/{tot=
alRepetitions}"</span><span class=3D"o">)</span>
    <span class=3D"nd">@DisplayName</span><span class=3D"o">(</span><span c=
lass=3D"s">"Repeat!"</span><span class=3D"o">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">customDisplayName</sp=
an><span class=3D"o">(</span><span class=3D"nc">TestInfo</span> <span class=
=3D"n">testInfo</span><span class=3D"o">)</span> <span class=3D"o">{</span>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"s">"Repeat! 1/1"</span><span class=3D"o">,</span> <span class=3D=
"n">testInfo</span><span class=3D"o">.</span><span class=3D"na">getDisplayN=
ame</span><span class=3D"o">());</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@RepeatedTest</span><span class=3D"o">(</span><span =
class=3D"n">value</span> <span class=3D"o">=3D</span> <span class=3D"mi">1<=
/span><span class=3D"o">,</span> <span class=3D"n">name</span> <span class=
=3D"o">=3D</span> <span class=3D"nc">RepeatedTest</span><span class=3D"o">.=
</span><span class=3D"na">LONG_DISPLAY_NAME</span><span class=3D"o">)</span=
>
    <span class=3D"nd">@DisplayName</span><span class=3D"o">(</span><span c=
lass=3D"s">"Details..."</span><span class=3D"o">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">customDisplayNameWith=
LongPattern</span><span class=3D"o">(</span><span class=3D"nc">TestInfo</sp=
an> <span class=3D"n">testInfo</span><span class=3D"o">)</span> <span class=
=3D"o">{</span>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"s">"Details... :: repetition 1 of 1"</span><span class=3D"o">,</=
span> <span class=3D"n">testInfo</span><span class=3D"o">.</span><span clas=
s=3D"na">getDisplayName</span><span class=3D"o">());</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@RepeatedTest</span><span class=3D"o">(</span><span =
class=3D"n">value</span> <span class=3D"o">=3D</span> <span class=3D"mi">5<=
/span><span class=3D"o">,</span> <span class=3D"n">name</span> <span class=
=3D"o">=3D</span> <span class=3D"s">"Wiederholung {currentRepetition} von {=
totalRepetitions}"</span><span class=3D"o">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">repeatedTestInGerman<=
/span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"c1">// ...</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>When using the <code>ConsoleLauncher</code> with the unicode theme enabl=
ed, execution of
<code>RepeatedTestsDemo</code> results in the following output to the conso=
le.</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>=E2=94=9C=E2=94=80 RepeatedTestsDemo =E2=9C=94
=E2=94=82  =E2=94=9C=E2=94=80 repeatedTest() =E2=9C=94
=E2=94=82  =E2=94=82  =E2=94=9C=E2=94=80 repetition 1 of 10 =E2=9C=94
=E2=94=82  =E2=94=82  =E2=94=9C=E2=94=80 repetition 2 of 10 =E2=9C=94
=E2=94=82  =E2=94=82  =E2=94=9C=E2=94=80 repetition 3 of 10 =E2=9C=94
=E2=94=82  =E2=94=82  =E2=94=9C=E2=94=80 repetition 4 of 10 =E2=9C=94
=E2=94=82  =E2=94=82  =E2=94=9C=E2=94=80 repetition 5 of 10 =E2=9C=94
=E2=94=82  =E2=94=82  =E2=94=9C=E2=94=80 repetition 6 of 10 =E2=9C=94
=E2=94=82  =E2=94=82  =E2=94=9C=E2=94=80 repetition 7 of 10 =E2=9C=94
=E2=94=82  =E2=94=82  =E2=94=9C=E2=94=80 repetition 8 of 10 =E2=9C=94
=E2=94=82  =E2=94=82  =E2=94=9C=E2=94=80 repetition 9 of 10 =E2=9C=94
=E2=94=82  =E2=94=82  =E2=94=94=E2=94=80 repetition 10 of 10 =E2=9C=94
=E2=94=82  =E2=94=9C=E2=94=80 repeatedTestWithRepetitionInfo(RepetitionInfo=
) =E2=9C=94
=E2=94=82  =E2=94=82  =E2=94=9C=E2=94=80 repetition 1 of 5 =E2=9C=94
=E2=94=82  =E2=94=82  =E2=94=9C=E2=94=80 repetition 2 of 5 =E2=9C=94
=E2=94=82  =E2=94=82  =E2=94=9C=E2=94=80 repetition 3 of 5 =E2=9C=94
=E2=94=82  =E2=94=82  =E2=94=9C=E2=94=80 repetition 4 of 5 =E2=9C=94
=E2=94=82  =E2=94=82  =E2=94=94=E2=94=80 repetition 5 of 5 =E2=9C=94
=E2=94=82  =E2=94=9C=E2=94=80 Repeat! =E2=9C=94
=E2=94=82  =E2=94=82  =E2=94=94=E2=94=80 Repeat! 1/1 =E2=9C=94
=E2=94=82  =E2=94=9C=E2=94=80 Details... =E2=9C=94
=E2=94=82  =E2=94=82  =E2=94=94=E2=94=80 Details... :: repetition 1 of 1 =
=E2=9C=94
=E2=94=82  =E2=94=94=E2=94=80 repeatedTestInGerman() =E2=9C=94
=E2=94=82     =E2=94=9C=E2=94=80 Wiederholung 1 von 5 =E2=9C=94
=E2=94=82     =E2=94=9C=E2=94=80 Wiederholung 2 von 5 =E2=9C=94
=E2=94=82     =E2=94=9C=E2=94=80 Wiederholung 3 von 5 =E2=9C=94
=E2=94=82     =E2=94=9C=E2=94=80 Wiederholung 4 von 5 =E2=9C=94
=E2=94=82     =E2=94=94=E2=94=80 Wiederholung 5 von 5 =E2=9C=94</pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"writing-tests-parameterized-tests"><a class=3D"anchor" href=3D"ht=
tps://junit.org/junit5/docs/current/user-guide/#writing-tests-parameterized=
-tests"></a>2.15. Parameterized Tests</h3>
<div class=3D"paragraph">
<p>Parameterized tests make it possible to run a test multiple times with d=
ifferent
arguments. They are declared just like regular <code>@Test</code> methods b=
ut use the
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupite=
r.params/org/junit/jupiter/params/ParameterizedTest.html">@ParameterizedTes=
t</a></code> annotation instead. In addition, you must declare at least one
<em>source</em> that will provide the arguments for each invocation and the=
n <em>consume</em> the
arguments in the test method.</p>
</div>
<div class=3D"paragraph">
<p>The following example demonstrates a parameterized test that uses the <c=
ode>@ValueSource</code>
annotation to specify a <code>String</code> array as the source of argument=
s.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@ValueSource</span><span class=3D"o">(</span><span class=
=3D"n">strings</span> <span class=3D"o">=3D</span> <span class=3D"o">{</spa=
n> <span class=3D"s">"racecar"</span><span class=3D"o">,</span> <span class=
=3D"s">"radar"</span><span class=3D"o">,</span> <span class=3D"s">"able was=
 I ere I saw elba"</span> <span class=3D"o">})</span>
<span class=3D"kt">void</span> <span class=3D"nf">palindromes</span><span c=
lass=3D"o">(</span><span class=3D"nc">String</span> <span class=3D"n">candi=
date</span><span class=3D"o">)</span> <span class=3D"o">{</span>
    <span class=3D"n">assertTrue</span><span class=3D"o">(</span><span clas=
s=3D"nc">StringUtils</span><span class=3D"o">.</span><span class=3D"na">isP=
alindrome</span><span class=3D"o">(</span><span class=3D"n">candidate</span=
><span class=3D"o">));</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>When executing the above parameterized test method, each invocation will=
 be reported
separately. For instance, the <code>ConsoleLauncher</code> will print outpu=
t similar to the
following.</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>palindromes(String) =E2=9C=94
=E2=94=9C=E2=94=80 [1] candidate=3Dracecar =E2=9C=94
=E2=94=9C=E2=94=80 [2] candidate=3Dradar =E2=9C=94
=E2=94=94=E2=94=80 [3] candidate=3Dable was I ere I saw elba =E2=9C=94</pre=
>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-parameterized-tests-setup"><a class=3D"anchor" href=
=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-paramet=
erized-tests-setup"></a>2.15.1. Required Setup</h4>
<div class=3D"paragraph">
<p>In order to use parameterized tests you need to add a dependency on the
<code>junit-jupiter-params</code> artifact. Please refer to <a href=3D"http=
s://junit.org/junit5/docs/current/user-guide/#dependency-metadata">Dependen=
cy Metadata</a> for details.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-parameterized-tests-consuming-arguments"><a class=
=3D"anchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#writi=
ng-tests-parameterized-tests-consuming-arguments"></a>2.15.2. Consuming Arg=
uments</h4>
<div class=3D"paragraph">
<p>Parameterized test methods typically <em>consume</em> arguments directly=
 from the configured
source (see <a href=3D"https://junit.org/junit5/docs/current/user-guide/#wr=
iting-tests-parameterized-tests-sources">Sources of Arguments</a>) followin=
g a one-to-one
correlation between argument source index and method parameter index (see e=
xamples in
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-=
parameterized-tests-sources-CsvSource">@CsvSource</a>). However, a paramete=
rized test
method may also choose to <em>aggregate</em> arguments from the source into=
 a single object
passed to the method (see <a href=3D"https://junit.org/junit5/docs/current/=
user-guide/#writing-tests-parameterized-tests-argument-aggregation">Argumen=
t Aggregation</a>).
Additional arguments may also be provided by a <code>ParameterResolver</cod=
e> (e.g., to obtain an
instance of <code>TestInfo</code>, <code>TestReporter</code>, etc.). Specif=
ically, a parameterized test method
must declare formal parameters according to the following rules.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Zero or more <em>indexed arguments</em> must be declared first.</p>
</li>
<li>
<p>Zero or more <em>aggregators</em> must be declared next.</p>
</li>
<li>
<p>Zero or more arguments supplied by a <code>ParameterResolver</code> must=
 be declared last.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>In this context, an <em>indexed argument</em> is an argument for a given=
 index in the
<code>Arguments</code> provided by an <code>ArgumentsProvider</code> that i=
s passed as an argument to the
parameterized method at the same index in the method=E2=80=99s formal param=
eter list. An
<em>aggregator</em> is any parameter of type <code>ArgumentsAccessor</code>=
 or any parameter annotated with
<code>@AggregateWith</code>.</p>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
<div class=3D"title">AutoCloseable arguments</div>
<div class=3D"paragraph">
<p>Arguments that implement <code>java.lang.AutoCloseable</code> (or <code>=
java.io.Closeable</code> which extends
<code>java.lang.AutoCloseable</code>) will be automatically closed after <c=
ode>@AfterEach</code> methods and
<code>AfterEachCallback</code> extensions have been called for the current =
parameterized test
invocation.</p>
</div>
<div class=3D"paragraph">
<p>To prevent this from happening, set the <code>autoCloseArguments</code> =
attribute in
<code>@ParameterizedTest</code> to <code>false</code>. Specifically, if an =
argument that implements
<code>AutoCloseable</code> is reused for multiple invocations of the same p=
arameterized test method,
you must annotate the method with <code>@ParameterizedTest(autoCloseArgumen=
ts =3D false)</code> to
ensure that the argument is not closed between invocations.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-parameterized-tests-sources"><a class=3D"anchor" hr=
ef=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-param=
eterized-tests-sources"></a>2.15.3. Sources of Arguments</h4>
<div class=3D"paragraph">
<p>Out of the box, JUnit Jupiter provides quite a few <em>source</em> annot=
ations. Each of the
following subsections provides a brief overview and an example for each of =
them. Please
refer to the Javadoc in the <code><a href=3D"https://junit.org/junit5/docs/=
current/api/org.junit.jupiter.params/org/junit/jupiter/params/provider/pack=
age-summary.html">org.junit.jupiter.params.provider</a></code> package for =
additional
information.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"writing-tests-parameterized-tests-sources-ValueSource"><a class=
=3D"anchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#writi=
ng-tests-parameterized-tests-sources-ValueSource"></a>@ValueSource</h5>
<div class=3D"paragraph">
<p><code>@ValueSource</code> is one of the simplest possible sources. It le=
ts you specify a single
array of literal values and can only be used for providing a single argumen=
t per
parameterized test invocation.</p>
</div>
<div class=3D"paragraph">
<p>The following types of literal values are supported by <code>@ValueSourc=
e</code>.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code>short</code></p>
</li>
<li>
<p><code>byte</code></p>
</li>
<li>
<p><code>int</code></p>
</li>
<li>
<p><code>long</code></p>
</li>
<li>
<p><code>float</code></p>
</li>
<li>
<p><code>double</code></p>
</li>
<li>
<p><code>char</code></p>
</li>
<li>
<p><code>boolean</code></p>
</li>
<li>
<p><code>java.lang.String</code></p>
</li>
<li>
<p><code>java.lang.Class</code></p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>For example, the following <code>@ParameterizedTest</code> method will b=
e invoked three times, with
the values <code>1</code>, <code>2</code>, and <code>3</code> respectively.=
</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@ValueSource</span><span class=3D"o">(</span><span class=
=3D"n">ints</span> <span class=3D"o">=3D</span> <span class=3D"o">{</span> =
<span class=3D"mi">1</span><span class=3D"o">,</span> <span class=3D"mi">2<=
/span><span class=3D"o">,</span> <span class=3D"mi">3</span> <span class=3D=
"o">})</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithValueSource</span=
><span class=3D"o">(</span><span class=3D"kt">int</span> <span class=3D"n">=
argument</span><span class=3D"o">)</span> <span class=3D"o">{</span>
    <span class=3D"n">assertTrue</span><span class=3D"o">(</span><span clas=
s=3D"n">argument</span> <span class=3D"o">&gt;</span> <span class=3D"mi">0<=
/span> <span class=3D"o">&amp;&amp;</span> <span class=3D"n">argument</span=
> <span class=3D"o">&lt;</span> <span class=3D"mi">4</span><span class=3D"o=
">);</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"writing-tests-parameterized-tests-sources-null-and-empty"><a clas=
s=3D"anchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#writ=
ing-tests-parameterized-tests-sources-null-and-empty"></a>Null and Empty So=
urces</h5>
<div class=3D"paragraph">
<p>In order to check corner cases and verify proper behavior of our softwar=
e when it is
supplied <em>bad input</em>, it can be useful to have <code>null</code> and=
 <em>empty</em> values supplied to our
parameterized tests. The following annotations serve as sources of <code>nu=
ll</code> and empty values
for parameterized tests that accept a single argument.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.params/org/junit/jupiter/params/provider/NullSource.html">@NullSource<=
/a></code>: provides a single <code>null</code> argument to the annotated <=
code>@ParameterizedTest</code>
method.</p>
<div class=3D"ulist">
<ul>
<li>
<p><code>@NullSource</code> cannot be used for a parameter that has a primi=
tive type.</p>
</li>
</ul>
</div>
</li>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.params/org/junit/jupiter/params/provider/EmptySource.html">@EmptySourc=
e</a></code>: provides a single <em>empty</em> argument to the annotated <c=
ode>@ParameterizedTest</code>
method for parameters of the following types: <code>java.lang.String</code>=
, <code>java.util.List</code>,
<code>java.util.Set</code>, <code>java.util.Map</code>, primitive arrays (e=
.g., <code>int[]</code>, <code>char[][]</code>, etc.),
object arrays (e.g.,<code>String[]</code>, <code>Integer[][]</code>, etc.).=
</p>
<div class=3D"ulist">
<ul>
<li>
<p>Subtypes of the supported types are not supported.</p>
</li>
</ul>
</div>
</li>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.params/org/junit/jupiter/params/provider/NullAndEmptySource.html">@Nul=
lAndEmptySource</a></code>: a <em>composed annotation</em> that combines th=
e functionality of
<code>@NullSource</code> and <code>@EmptySource</code>.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>If you need to supply multiple varying types of <em>blank</em> strings t=
o a parameterized test,
you can achieve that using <a href=3D"https://junit.org/junit5/docs/current=
/user-guide/#writing-tests-parameterized-tests-sources-ValueSource">@ValueS=
ource</a>=E2=80=89=E2=80=94=E2=80=89for example, <code>@ValueSource(strings=
 =3D {"&nbsp;", "&nbsp;&nbsp;&nbsp;", "\t", "\n"})</code>.</p>
</div>
<div class=3D"paragraph">
<p>You can also combine <code>@NullSource</code>, <code>@EmptySource</code>=
, and <code>@ValueSource</code> to test a wider
range of <code>null</code>, <em>empty</em>, and <em>blank</em> input. The f=
ollowing example demonstrates how to
achieve this for strings.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@NullSource</span>
<span class=3D"nd">@EmptySource</span>
<span class=3D"nd">@ValueSource</span><span class=3D"o">(</span><span class=
=3D"n">strings</span> <span class=3D"o">=3D</span> <span class=3D"o">{</spa=
n> <span class=3D"s">" "</span><span class=3D"o">,</span> <span class=3D"s"=
>"   "</span><span class=3D"o">,</span> <span class=3D"s">"\t"</span><span =
class=3D"o">,</span> <span class=3D"s">"\n"</span> <span class=3D"o">})</sp=
an>
<span class=3D"kt">void</span> <span class=3D"nf">nullEmptyAndBlankStrings<=
/span><span class=3D"o">(</span><span class=3D"nc">String</span> <span clas=
s=3D"n">text</span><span class=3D"o">)</span> <span class=3D"o">{</span>
    <span class=3D"n">assertTrue</span><span class=3D"o">(</span><span clas=
s=3D"n">text</span> <span class=3D"o">=3D=3D</span> <span class=3D"kc">null=
</span> <span class=3D"o">||</span> <span class=3D"n">text</span><span clas=
s=3D"o">.</span><span class=3D"na">trim</span><span class=3D"o">().</span><=
span class=3D"na">isEmpty</span><span class=3D"o">());</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Making use of the composed <code>@NullAndEmptySource</code> annotation s=
implifies the above as
follows.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@NullAndEmptySource</span>
<span class=3D"nd">@ValueSource</span><span class=3D"o">(</span><span class=
=3D"n">strings</span> <span class=3D"o">=3D</span> <span class=3D"o">{</spa=
n> <span class=3D"s">" "</span><span class=3D"o">,</span> <span class=3D"s"=
>"   "</span><span class=3D"o">,</span> <span class=3D"s">"\t"</span><span =
class=3D"o">,</span> <span class=3D"s">"\n"</span> <span class=3D"o">})</sp=
an>
<span class=3D"kt">void</span> <span class=3D"nf">nullEmptyAndBlankStrings<=
/span><span class=3D"o">(</span><span class=3D"nc">String</span> <span clas=
s=3D"n">text</span><span class=3D"o">)</span> <span class=3D"o">{</span>
    <span class=3D"n">assertTrue</span><span class=3D"o">(</span><span clas=
s=3D"n">text</span> <span class=3D"o">=3D=3D</span> <span class=3D"kc">null=
</span> <span class=3D"o">||</span> <span class=3D"n">text</span><span clas=
s=3D"o">.</span><span class=3D"na">trim</span><span class=3D"o">().</span><=
span class=3D"na">isEmpty</span><span class=3D"o">());</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
Both variants of the <code>nullEmptyAndBlankStrings(String)</code> paramete=
rized test method
result in six invocations: 1 for <code>null</code>, 1 for the empty string,=
 and 4 for the explicit
blank strings supplied via <code>@ValueSource</code>.
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"writing-tests-parameterized-tests-sources-EnumSource"><a class=3D=
"anchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-=
tests-parameterized-tests-sources-EnumSource"></a>@EnumSource</h5>
<div class=3D"paragraph">
<p><code>@EnumSource</code> provides a convenient way to use <code>Enum</co=
de> constants.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@EnumSource</span><span class=3D"o">(</span><span class=
=3D"nc">ChronoUnit</span><span class=3D"o">.</span><span class=3D"na">class=
</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithEnumSource</span>=
<span class=3D"o">(</span><span class=3D"nc">TemporalUnit</span> <span clas=
s=3D"n">unit</span><span class=3D"o">)</span> <span class=3D"o">{</span>
    <span class=3D"n">assertNotNull</span><span class=3D"o">(</span><span c=
lass=3D"n">unit</span><span class=3D"o">);</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The annotation=E2=80=99s <code>value</code> attribute is optional. When =
omitted, the declared type of the
first method parameter is used. The test will fail if it does not reference=
 an enum type.
Thus, the <code>value</code> attribute is required in the above example bec=
ause the method parameter
is declared as <code>TemporalUnit</code>, i.e. the interface implemented by=
 <code>ChronoUnit</code>, which isn=E2=80=99t
an enum type. Changing the method parameter type to <code>ChronoUnit</code>=
 allows you to omit the
explicit enum type from the annotation as follows.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@EnumSource</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithEnumSourceWithAut=
oDetection</span><span class=3D"o">(</span><span class=3D"nc">ChronoUnit</s=
pan> <span class=3D"n">unit</span><span class=3D"o">)</span> <span class=3D=
"o">{</span>
    <span class=3D"n">assertNotNull</span><span class=3D"o">(</span><span c=
lass=3D"n">unit</span><span class=3D"o">);</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The annotation provides an optional <code>names</code> attribute that le=
ts you specify which
constants shall be used, like in the following example. If omitted, all con=
stants will be
used.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@EnumSource</span><span class=3D"o">(</span><span class=
=3D"n">names</span> <span class=3D"o">=3D</span> <span class=3D"o">{</span>=
 <span class=3D"s">"DAYS"</span><span class=3D"o">,</span> <span class=3D"s=
">"HOURS"</span> <span class=3D"o">})</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithEnumSourceInclude=
</span><span class=3D"o">(</span><span class=3D"nc">ChronoUnit</span> <span=
 class=3D"n">unit</span><span class=3D"o">)</span> <span class=3D"o">{</spa=
n>
    <span class=3D"n">assertTrue</span><span class=3D"o">(</span><span clas=
s=3D"nc">EnumSet</span><span class=3D"o">.</span><span class=3D"na">of</spa=
n><span class=3D"o">(</span><span class=3D"nc">ChronoUnit</span><span class=
=3D"o">.</span><span class=3D"na">DAYS</span><span class=3D"o">,</span> <sp=
an class=3D"nc">ChronoUnit</span><span class=3D"o">.</span><span class=3D"n=
a">HOURS</span><span class=3D"o">).</span><span class=3D"na">contains</span=
><span class=3D"o">(</span><span class=3D"n">unit</span><span class=3D"o">)=
);</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The <code>@EnumSource</code> annotation also provides an optional <code>=
mode</code> attribute that enables
fine-grained control over which constants are passed to the test method. Fo=
r example, you
can exclude names from the enum constant pool or specify regular expression=
s as in the
following examples.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@EnumSource</span><span class=3D"o">(</span><span class=
=3D"n">mode</span> <span class=3D"o">=3D</span> <span class=3D"no">EXCLUDE<=
/span><span class=3D"o">,</span> <span class=3D"n">names</span> <span class=
=3D"o">=3D</span> <span class=3D"o">{</span> <span class=3D"s">"ERAS"</span=
><span class=3D"o">,</span> <span class=3D"s">"FOREVER"</span> <span class=
=3D"o">})</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithEnumSourceExclude=
</span><span class=3D"o">(</span><span class=3D"nc">ChronoUnit</span> <span=
 class=3D"n">unit</span><span class=3D"o">)</span> <span class=3D"o">{</spa=
n>
    <span class=3D"n">assertFalse</span><span class=3D"o">(</span><span cla=
ss=3D"nc">EnumSet</span><span class=3D"o">.</span><span class=3D"na">of</sp=
an><span class=3D"o">(</span><span class=3D"nc">ChronoUnit</span><span clas=
s=3D"o">.</span><span class=3D"na">ERAS</span><span class=3D"o">,</span> <s=
pan class=3D"nc">ChronoUnit</span><span class=3D"o">.</span><span class=3D"=
na">FOREVER</span><span class=3D"o">).</span><span class=3D"na">contains</s=
pan><span class=3D"o">(</span><span class=3D"n">unit</span><span class=3D"o=
">));</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@EnumSource</span><span class=3D"o">(</span><span class=
=3D"n">mode</span> <span class=3D"o">=3D</span> <span class=3D"no">MATCH_AL=
L</span><span class=3D"o">,</span> <span class=3D"n">names</span> <span cla=
ss=3D"o">=3D</span> <span class=3D"s">"^.*DAYS$"</span><span class=3D"o">)<=
/span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithEnumSourceRegex</=
span><span class=3D"o">(</span><span class=3D"nc">ChronoUnit</span> <span c=
lass=3D"n">unit</span><span class=3D"o">)</span> <span class=3D"o">{</span>
    <span class=3D"n">assertTrue</span><span class=3D"o">(</span><span clas=
s=3D"n">unit</span><span class=3D"o">.</span><span class=3D"na">name</span>=
<span class=3D"o">().</span><span class=3D"na">endsWith</span><span class=
=3D"o">(</span><span class=3D"s">"DAYS"</span><span class=3D"o">));</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"writing-tests-parameterized-tests-sources-MethodSource"><a class=
=3D"anchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#writi=
ng-tests-parameterized-tests-sources-MethodSource"></a>@MethodSource</h5>
<div class=3D"paragraph">
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.params/org/junit/jupiter/params/provider/MethodSource.html">@MethodSou=
rce</a></code> allows you to refer to one or more <em>factory</em> methods =
of the test class
or external classes.</p>
</div>
<div class=3D"paragraph">
<p>Factory methods within the test class must be <code>static</code> unless=
 the test class is annotated
with <code>@TestInstance(Lifecycle.PER_CLASS)</code>; whereas, factory meth=
ods in external classes
must always be <code>static</code>. In addition, such factory methods must =
not accept any arguments.</p>
</div>
<div class=3D"paragraph">
<p>Each factory method must generate a <em>stream</em> of <em>arguments</em=
>, and each set of arguments
within the stream will be provided as the physical arguments for individual=
 invocations
of the annotated <code>@ParameterizedTest</code> method. Generally speaking=
 this translates to a
<code>Stream</code> of <code>Arguments</code> (i.e., <code>Stream&lt;Argume=
nts&gt;</code>); however, the actual concrete return
type can take on many forms. In this context, a "stream" is anything that J=
Unit can
reliably convert into a <code>Stream</code>, such as <code>Stream</code>, <=
code>DoubleStream</code>, <code>LongStream</code>,
<code>IntStream</code>, <code>Collection</code>, <code>Iterator</code>, <co=
de>Iterable</code>, an array of objects, or an array of
primitives. The "arguments" within the stream can be supplied as an instanc=
e of
<code>Arguments</code>, an array of objects (e.g., <code>Object[]</code>), =
or a single value if the
parameterized test method accepts a single argument.</p>
</div>
<div class=3D"paragraph">
<p>If you only need a single parameter, you can return a <code>Stream</code=
> of instances of the
parameter type as demonstrated in the following example.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@MethodSource</span><span class=3D"o">(</span><span clas=
s=3D"s">"stringProvider"</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithExplicitLocalMeth=
odSource</span><span class=3D"o">(</span><span class=3D"nc">String</span> <=
span class=3D"n">argument</span><span class=3D"o">)</span> <span class=3D"o=
">{</span>
    <span class=3D"n">assertNotNull</span><span class=3D"o">(</span><span c=
lass=3D"n">argument</span><span class=3D"o">);</span>
<span class=3D"o">}</span>

<span class=3D"kd">static</span> <span class=3D"nc">Stream</span><span clas=
s=3D"o">&lt;</span><span class=3D"nc">String</span><span class=3D"o">&gt;</=
span> <span class=3D"nf">stringProvider</span><span class=3D"o">()</span> <=
span class=3D"o">{</span>
    <span class=3D"k">return</span> <span class=3D"nc">Stream</span><span c=
lass=3D"o">.</span><span class=3D"na">of</span><span class=3D"o">(</span><s=
pan class=3D"s">"apple"</span><span class=3D"o">,</span> <span class=3D"s">=
"banana"</span><span class=3D"o">);</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>If you do not explicitly provide a factory method name via <code>@Method=
Source</code>, JUnit Jupiter
will search for a <em>factory</em> method that has the same name as the cur=
rent
<code>@ParameterizedTest</code> method by convention. This is demonstrated =
in the following example.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@MethodSource</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithDefaultLocalMetho=
dSource</span><span class=3D"o">(</span><span class=3D"nc">String</span> <s=
pan class=3D"n">argument</span><span class=3D"o">)</span> <span class=3D"o"=
>{</span>
    <span class=3D"n">assertNotNull</span><span class=3D"o">(</span><span c=
lass=3D"n">argument</span><span class=3D"o">);</span>
<span class=3D"o">}</span>

<span class=3D"kd">static</span> <span class=3D"nc">Stream</span><span clas=
s=3D"o">&lt;</span><span class=3D"nc">String</span><span class=3D"o">&gt;</=
span> <span class=3D"nf">testWithDefaultLocalMethodSource</span><span class=
=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"k">return</span> <span class=3D"nc">Stream</span><span c=
lass=3D"o">.</span><span class=3D"na">of</span><span class=3D"o">(</span><s=
pan class=3D"s">"apple"</span><span class=3D"o">,</span> <span class=3D"s">=
"banana"</span><span class=3D"o">);</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Streams for primitive types (<code>DoubleStream</code>, <code>IntStream<=
/code>, and <code>LongStream</code>) are also
supported as demonstrated by the following example.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@MethodSource</span><span class=3D"o">(</span><span clas=
s=3D"s">"range"</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithRangeMethodSource=
</span><span class=3D"o">(</span><span class=3D"kt">int</span> <span class=
=3D"n">argument</span><span class=3D"o">)</span> <span class=3D"o">{</span>
    <span class=3D"n">assertNotEquals</span><span class=3D"o">(</span><span=
 class=3D"mi">9</span><span class=3D"o">,</span> <span class=3D"n">argument=
</span><span class=3D"o">);</span>
<span class=3D"o">}</span>

<span class=3D"kd">static</span> <span class=3D"nc">IntStream</span> <span =
class=3D"nf">range</span><span class=3D"o">()</span> <span class=3D"o">{</s=
pan>
    <span class=3D"k">return</span> <span class=3D"nc">IntStream</span><spa=
n class=3D"o">.</span><span class=3D"na">range</span><span class=3D"o">(</s=
pan><span class=3D"mi">0</span><span class=3D"o">,</span> <span class=3D"mi=
">20</span><span class=3D"o">).</span><span class=3D"na">skip</span><span c=
lass=3D"o">(</span><span class=3D"mi">10</span><span class=3D"o">);</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>If a parameterized test method declares multiple parameters, you need to=
 return a
collection, stream, or array of <code>Arguments</code> instances or object =
arrays as shown below
(see the Javadoc for <code><a href=3D"https://junit.org/junit5/docs/current=
/api/org.junit.jupiter.params/org/junit/jupiter/params/provider/MethodSourc=
e.html">@MethodSource</a></code> for further details on supported return ty=
pes).
Note that <code>arguments(Object=E2=80=A6=E2=80=8B)</code> is a static fact=
ory method defined in the <code>Arguments</code>
interface. In addition, <code>Arguments.of(Object=E2=80=A6=E2=80=8B)</code>=
 may be used as an alternative to
<code>arguments(Object=E2=80=A6=E2=80=8B)</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@MethodSource</span><span class=3D"o">(</span><span clas=
s=3D"s">"stringIntAndListProvider"</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithMultiArgMethodSou=
rce</span><span class=3D"o">(</span><span class=3D"nc">String</span> <span =
class=3D"n">str</span><span class=3D"o">,</span> <span class=3D"kt">int</sp=
an> <span class=3D"n">num</span><span class=3D"o">,</span> <span class=3D"n=
c">List</span><span class=3D"o">&lt;</span><span class=3D"nc">String</span>=
<span class=3D"o">&gt;</span> <span class=3D"n">list</span><span class=3D"o=
">)</span> <span class=3D"o">{</span>
    <span class=3D"n">assertEquals</span><span class=3D"o">(</span><span cl=
ass=3D"mi">5</span><span class=3D"o">,</span> <span class=3D"n">str</span><=
span class=3D"o">.</span><span class=3D"na">length</span><span class=3D"o">=
());</span>
    <span class=3D"n">assertTrue</span><span class=3D"o">(</span><span clas=
s=3D"n">num</span> <span class=3D"o">&gt;=3D</span><span class=3D"mi">1</sp=
an> <span class=3D"o">&amp;&amp;</span> <span class=3D"n">num</span> <span =
class=3D"o">&lt;=3D</span><span class=3D"mi">2</span><span class=3D"o">);</=
span>
    <span class=3D"n">assertEquals</span><span class=3D"o">(</span><span cl=
ass=3D"mi">2</span><span class=3D"o">,</span> <span class=3D"n">list</span>=
<span class=3D"o">.</span><span class=3D"na">size</span><span class=3D"o">(=
));</span>
<span class=3D"o">}</span>

<span class=3D"kd">static</span> <span class=3D"nc">Stream</span><span clas=
s=3D"o">&lt;</span><span class=3D"nc">Arguments</span><span class=3D"o">&gt=
;</span> <span class=3D"nf">stringIntAndListProvider</span><span class=3D"o=
">()</span> <span class=3D"o">{</span>
    <span class=3D"k">return</span> <span class=3D"nc">Stream</span><span c=
lass=3D"o">.</span><span class=3D"na">of</span><span class=3D"o">(</span>
        <span class=3D"n">arguments</span><span class=3D"o">(</span><span c=
lass=3D"s">"apple"</span><span class=3D"o">,</span> <span class=3D"mi">1</s=
pan><span class=3D"o">,</span> <span class=3D"nc">Arrays</span><span class=
=3D"o">.</span><span class=3D"na">asList</span><span class=3D"o">(</span><s=
pan class=3D"s">"a"</span><span class=3D"o">,</span> <span class=3D"s">"b"<=
/span><span class=3D"o">)),</span>
        <span class=3D"n">arguments</span><span class=3D"o">(</span><span c=
lass=3D"s">"lemon"</span><span class=3D"o">,</span> <span class=3D"mi">2</s=
pan><span class=3D"o">,</span> <span class=3D"nc">Arrays</span><span class=
=3D"o">.</span><span class=3D"na">asList</span><span class=3D"o">(</span><s=
pan class=3D"s">"x"</span><span class=3D"o">,</span> <span class=3D"s">"y"<=
/span><span class=3D"o">))</span>
    <span class=3D"o">);</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>An external, <code>static</code> <em>factory</em> method can be referenc=
ed by providing its <em>fully
qualified method name</em> as demonstrated in the following example.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
package</span> <span class=3D"nn">example</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">java.util.stream.Stream=
</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.param=
s.ParameterizedTest</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.param=
s.provider.MethodSource</span><span class=3D"o">;</span>

<span class=3D"kd">class</span> <span class=3D"nc">ExternalMethodSourceDemo=
</span> <span class=3D"o">{</span>

    <span class=3D"nd">@ParameterizedTest</span>
    <span class=3D"nd">@MethodSource</span><span class=3D"o">(</span><span =
class=3D"s">"example.StringsProviders#tinyStrings"</span><span class=3D"o">=
)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">testWithExternalMetho=
dSource</span><span class=3D"o">(</span><span class=3D"nc">String</span> <s=
pan class=3D"n">tinyString</span><span class=3D"o">)</span> <span class=3D"=
o">{</span>
        <span class=3D"c1">// test with tiny string</span>
    <span class=3D"o">}</span>
<span class=3D"o">}</span>

<span class=3D"kd">class</span> <span class=3D"nc">StringsProviders</span> =
<span class=3D"o">{</span>

    <span class=3D"kd">static</span> <span class=3D"nc">Stream</span><span =
class=3D"o">&lt;</span><span class=3D"nc">String</span><span class=3D"o">&g=
t;</span> <span class=3D"nf">tinyStrings</span><span class=3D"o">()</span> =
<span class=3D"o">{</span>
        <span class=3D"k">return</span> <span class=3D"nc">Stream</span><sp=
an class=3D"o">.</span><span class=3D"na">of</span><span class=3D"o">(</spa=
n><span class=3D"s">"."</span><span class=3D"o">,</span> <span class=3D"s">=
"oo"</span><span class=3D"o">,</span> <span class=3D"s">"OOO"</span><span c=
lass=3D"o">);</span>
    <span class=3D"o">}</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"writing-tests-parameterized-tests-sources-CsvSource"><a class=3D"=
anchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-t=
ests-parameterized-tests-sources-CsvSource"></a>@CsvSource</h5>
<div class=3D"paragraph">
<p><code>@CsvSource</code> allows you to express argument lists as comma-se=
parated values (i.e., CSV
<code>String</code> literals). Each string provided via the <code>value</co=
de> attribute in <code>@CsvSource</code>
represents a CSV record and results in one invocation of the parameterized =
test. The first
record may optionally be used to supply CSV headers (see the Javadoc for th=
e
<code>useHeadersInDisplayName</code> attribute for details and an example).=
</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@CsvSource</span><span class=3D"o">({</span>
    <span class=3D"s">"apple,         1"</span><span class=3D"o">,</span>
    <span class=3D"s">"banana,        2"</span><span class=3D"o">,</span>
    <span class=3D"s">"'lemon, lime', 0xF1"</span><span class=3D"o">,</span=
>
    <span class=3D"s">"strawberry,    700_000"</span>
<span class=3D"o">})</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithCsvSource</span><=
span class=3D"o">(</span><span class=3D"nc">String</span> <span class=3D"n"=
>fruit</span><span class=3D"o">,</span> <span class=3D"kt">int</span> <span=
 class=3D"n">rank</span><span class=3D"o">)</span> <span class=3D"o">{</spa=
n>
    <span class=3D"n">assertNotNull</span><span class=3D"o">(</span><span c=
lass=3D"n">fruit</span><span class=3D"o">);</span>
    <span class=3D"n">assertNotEquals</span><span class=3D"o">(</span><span=
 class=3D"mi">0</span><span class=3D"o">,</span> <span class=3D"n">rank</sp=
an><span class=3D"o">);</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The default delimiter is a comma (<code>,</code>), but you can use anoth=
er character by setting the
<code>delimiter</code> attribute. Alternatively, the <code>delimiterString<=
/code> attribute allows you to use a
<code>String</code> delimiter instead of a single character. However, both =
delimiter attributes
cannot be set simultaneously.</p>
</div>
<div class=3D"paragraph">
<p>By default, <code>@CsvSource</code> uses a single quote (<code>'</code>)=
 as its quote character, but this can be
changed via the <code>quoteCharacter</code> attribute. See the <code>'lemon=
, lime'</code> value in the example
above and in the table below. An empty, quoted value (<code>''</code>) resu=
lts in an empty <code>String</code>
unless the <code>emptyValue</code> attribute is set; whereas, an entirely <=
em>empty</em> value is
interpreted as a <code>null</code> reference. By specifying one or more <co=
de>nullValues</code>, a custom value
can be interpreted as a <code>null</code> reference (see the <code>NIL</cod=
e> example in the table below). An
<code>ArgumentConversionException</code> is thrown if the target type of a =
<code>null</code> reference is a
primitive type.</p>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
An <em>unquoted</em> empty value will always be converted to a <code>null</=
code> reference regardless
of any custom values configured via the <code>nullValues</code> attribute.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>Except within a quoted string, leading and trailing whitespace in a CSV =
column is trimmed
by default. This behavior can be changed by setting the
<code>ignoreLeadingAndTrailingWhitespace</code> attribute to <code>true</co=
de>.</p>
</div>
<table class=3D"tableblock frame-all grid-all stretch">
<colgroup>
<col style=3D"width: 50%;">
<col style=3D"width: 50%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Example Input</th>
<th class=3D"tableblock halign-left valign-top">Resulting Argument List</th=
>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@CsvSource({ "apple, banana" })</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"apple"</code>, <code>"banana"</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@CsvSource({ "apple, 'lemon, lime'" })</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"apple"</code>, <code>"lemon, lime"</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@CsvSource({ "apple, ''" })</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"apple"</code>, <code>""</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@CsvSource({ "apple, " })</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"apple"</code>, <code>null</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@CsvSource(value =3D { "apple, banana, NIL" }, nullValues =3D "NIL")</co=
de></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"apple"</code>, <code>"banana"</code>, <code>null</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@CsvSource(value =3D { " apple , banana" }, ignoreLeadingAndTrailingWhit=
espace =3D false)</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>" apple "</code>, <code>" banana"</code></p></td>
</tr>
</tbody>
</table>
<div class=3D"paragraph">
<p>If the programming language you are using supports <em>text blocks</em>=
=E2=80=89=E2=80=94=E2=80=89for example, Java SE
15 or higher=E2=80=89=E2=80=94=E2=80=89you can alternatively use the <code>=
textBlock</code> attribute of <code>@CsvSource</code>. Each
record within a text block represents a CSV record and results in one invoc=
ation of the
parameterized test. The first record may optionally be used to supply CSV h=
eaders by
setting the <code>useHeadersInDisplayName</code> attribute to <code>true</c=
ode> as in the example below.</p>
</div>
<div class=3D"paragraph">
<p>Using a text block, the previous example can be implemented as follows.<=
/p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span><span class=3D"o">(</span><span class=3D"n">name</=
span> <span class=3D"o">=3D</span> <span class=3D"s">"[{index}] {arguments}=
"</span><span class=3D"o">)</span>
<span class=3D"nd">@CsvSource</span><span class=3D"o">(</span><span class=
=3D"n">useHeadersInDisplayName</span> <span class=3D"o">=3D</span> <span cl=
ass=3D"kc">true</span><span class=3D"o">,</span> <span class=3D"n">textBloc=
k</span> <span class=3D"o">=3D</span> <span class=3D"s">"""
    FRUIT,         RANK
    apple,         1
    banana,        2
    'lemon, lime', 0xF1
    strawberry,    700_000
    """</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithCsvSource</span><=
span class=3D"o">(</span><span class=3D"nc">String</span> <span class=3D"n"=
>fruit</span><span class=3D"o">,</span> <span class=3D"kt">int</span> <span=
 class=3D"n">rank</span><span class=3D"o">)</span> <span class=3D"o">{</spa=
n>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The generated display names for the previous example include the CSV hea=
der names.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre>[1] FRUIT =3D apple, RANK =3D 1
[2] FRUIT =3D banana, RANK =3D 2
[3] FRUIT =3D lemon, lime, RANK =3D 0xF1
[4] FRUIT =3D strawberry, RANK =3D 700_000</pre>
</div>
</div>
<div class=3D"paragraph">
<p>In contrast to CSV records supplied via the <code>value</code> attribute=
, a text block can contain
comments. Any line beginning with a <code>#</code> symbol will be treated a=
s a comment and
ignored. Note, however, that the <code>#</code> symbol must be the first ch=
aracter on the line
without any leading whitespace. It is therefore recommended that the closin=
g text block
delimiter (<code>"""</code>) be placed either at the end of the last line o=
f input or on the
following line, left aligned with the rest of the input (as can be seen in =
the example
below which demonstrates formatting similar to a table).</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@CsvSource</span><span class=3D"o">(</span><span class=
=3D"n">delimiter</span> <span class=3D"o">=3D</span> <span class=3D"sc">'|'=
</span><span class=3D"o">,</span> <span class=3D"n">quoteCharacter</span> <=
span class=3D"o">=3D</span> <span class=3D"sc">'"'</span><span class=3D"o">=
,</span> <span class=3D"n">textBlock</span> <span class=3D"o">=3D</span> <s=
pan class=3D"s">"""
    #-----------------------------
    #    FRUIT     |     RANK
    #-----------------------------
         apple     |      1
    #-----------------------------
         banana    |      2
    #-----------------------------
      "</span><span class=3D"n">lemon</span> <span class=3D"n">lime</span><=
span class=3D"s">" |     0xF1
    #-----------------------------
       strawberry  |    700_000
    #-----------------------------
    """</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithCsvSource</span><=
span class=3D"o">(</span><span class=3D"nc">String</span> <span class=3D"n"=
>fruit</span><span class=3D"o">,</span> <span class=3D"kt">int</span> <span=
 class=3D"n">rank</span><span class=3D"o">)</span> <span class=3D"o">{</spa=
n>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
<div class=3D"paragraph">
<p>Java=E2=80=99s <a href=3D"https://docs.oracle.com/en/java/javase/15/text=
-blocks/index.html">text block</a>
feature automatically removes <em>incidental whitespace</em> when the code =
is compiled.
However other JVM languages such as Groovy and Kotlin do not. Thus, if you =
are using a
programming language other than Java and your text block contains comments =
or new lines
within quoted strings, you will need to ensure that there is no leading whi=
tespace within
your text block.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"writing-tests-parameterized-tests-sources-CsvFileSource"><a class=
=3D"anchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#writi=
ng-tests-parameterized-tests-sources-CsvFileSource"></a>@CsvFileSource</h5>
<div class=3D"paragraph">
<p><code>@CsvFileSource</code> lets you use comma-separated value (CSV) fil=
es from the classpath or the
local file system. Each record from a CSV file results in one invocation of=
 the
parameterized test. The first record may optionally be used to supply CSV h=
eaders. You can
instruct JUnit to ignore the headers via the <code>numLinesToSkip</code> at=
tribute. If you would like
for the headers to be used in the display names, you can set the <code>useH=
eadersInDisplayName</code>
attribute to <code>true</code>. The examples below demonstrate the use of <=
code>numLinesToSkip</code> and
<code>useHeadersInDisplayName</code>.</p>
</div>
<div class=3D"paragraph">
<p>The default delimiter is a comma (<code>,</code>), but you can use anoth=
er character by setting the
<code>delimiter</code> attribute. Alternatively, the <code>delimiterString<=
/code> attribute allows you to use a
<code>String</code> delimiter instead of a single character. However, both =
delimiter attributes
cannot be set simultaneously.</p>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
<div class=3D"title">Comments in CSV files</div>
Any line beginning with a <code>#</code> symbol will be interpreted as a co=
mment and will
be ignored.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@CsvFileSource</span><span class=3D"o">(</span><span cla=
ss=3D"n">resources</span> <span class=3D"o">=3D</span> <span class=3D"s">"/=
two-column.csv"</span><span class=3D"o">,</span> <span class=3D"n">numLines=
ToSkip</span> <span class=3D"o">=3D</span> <span class=3D"mi">1</span><span=
 class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithCsvFileSourceFrom=
Classpath</span><span class=3D"o">(</span><span class=3D"nc">String</span> =
<span class=3D"n">country</span><span class=3D"o">,</span> <span class=3D"k=
t">int</span> <span class=3D"n">reference</span><span class=3D"o">)</span> =
<span class=3D"o">{</span>
    <span class=3D"n">assertNotNull</span><span class=3D"o">(</span><span c=
lass=3D"n">country</span><span class=3D"o">);</span>
    <span class=3D"n">assertNotEquals</span><span class=3D"o">(</span><span=
 class=3D"mi">0</span><span class=3D"o">,</span> <span class=3D"n">referenc=
e</span><span class=3D"o">);</span>
<span class=3D"o">}</span>

<span class=3D"nd">@ParameterizedTest</span>
<span class=3D"nd">@CsvFileSource</span><span class=3D"o">(</span><span cla=
ss=3D"n">files</span> <span class=3D"o">=3D</span> <span class=3D"s">"src/t=
est/resources/two-column.csv"</span><span class=3D"o">,</span> <span class=
=3D"n">numLinesToSkip</span> <span class=3D"o">=3D</span> <span class=3D"mi=
">1</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithCsvFileSourceFrom=
File</span><span class=3D"o">(</span><span class=3D"nc">String</span> <span=
 class=3D"n">country</span><span class=3D"o">,</span> <span class=3D"kt">in=
t</span> <span class=3D"n">reference</span><span class=3D"o">)</span> <span=
 class=3D"o">{</span>
    <span class=3D"n">assertNotNull</span><span class=3D"o">(</span><span c=
lass=3D"n">country</span><span class=3D"o">);</span>
    <span class=3D"n">assertNotEquals</span><span class=3D"o">(</span><span=
 class=3D"mi">0</span><span class=3D"o">,</span> <span class=3D"n">referenc=
e</span><span class=3D"o">);</span>
<span class=3D"o">}</span>

<span class=3D"nd">@ParameterizedTest</span><span class=3D"o">(</span><span=
 class=3D"n">name</span> <span class=3D"o">=3D</span> <span class=3D"s">"[{=
index}] {arguments}"</span><span class=3D"o">)</span>
<span class=3D"nd">@CsvFileSource</span><span class=3D"o">(</span><span cla=
ss=3D"n">resources</span> <span class=3D"o">=3D</span> <span class=3D"s">"/=
two-column.csv"</span><span class=3D"o">,</span> <span class=3D"n">useHeade=
rsInDisplayName</span> <span class=3D"o">=3D</span> <span class=3D"kc">true=
</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithCsvFileSourceAndH=
eaders</span><span class=3D"o">(</span><span class=3D"nc">String</span> <sp=
an class=3D"n">country</span><span class=3D"o">,</span> <span class=3D"kt">=
int</span> <span class=3D"n">reference</span><span class=3D"o">)</span> <sp=
an class=3D"o">{</span>
    <span class=3D"n">assertNotNull</span><span class=3D"o">(</span><span c=
lass=3D"n">country</span><span class=3D"o">);</span>
    <span class=3D"n">assertNotEquals</span><span class=3D"o">(</span><span=
 class=3D"mi">0</span><span class=3D"o">,</span> <span class=3D"n">referenc=
e</span><span class=3D"o">);</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"listingblock">
<div class=3D"title">two-column.csv</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"csv">COUNTRY, REFERENCE
Sweden, 1
Poland, 2
"United States of America", 3
France, 700_000</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The following listing shows the generated display names for the first tw=
o parameterized
test methods above.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre>[1] country=3DSweden, reference=3D1
[2] country=3DPoland, reference=3D2
[3] country=3DUnited States of America, reference=3D3
[4] country=3DFrance, reference=3D700_000</pre>
</div>
</div>
<div class=3D"paragraph">
<p>The following listing shows the generated display names for the last par=
ameterized test
method above that uses CSV header names.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre>[1] COUNTRY =3D Sweden, REFERENCE =3D 1
[2] COUNTRY =3D Poland, REFERENCE =3D 2
[3] COUNTRY =3D United States of America, REFERENCE =3D 3
[4] COUNTRY =3D France, REFERENCE =3D 700_000</pre>
</div>
</div>
<div class=3D"paragraph">
<p>In contrast to the default syntax used in <code>@CsvSource</code>, <code=
>@CsvFileSource</code> uses a double
quote (<code>"</code>) as the quote character by default, but this can be c=
hanged via the
<code>quoteCharacter</code> attribute. See the <code>"United States of Amer=
ica"</code> value in the example
above. An empty, quoted value (<code>""</code>) results in an empty <code>S=
tring</code> unless the
<code>emptyValue</code> attribute is set; whereas, an entirely <em>empty</e=
m> value is interpreted as a
<code>null</code> reference. By specifying one or more <code>nullValues</co=
de>, a custom value can be
interpreted as a <code>null</code> reference. An <code>ArgumentConversionEx=
ception</code> is thrown if the
target type of a <code>null</code> reference is a primitive type.</p>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
An <em>unquoted</em> empty value will always be converted to a <code>null</=
code> reference regardless
of any custom values configured via the <code>nullValues</code> attribute.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>Except within a quoted string, leading and trailing whitespace in a CSV =
column is trimmed
by default. This behavior can be changed by setting the
<code>ignoreLeadingAndTrailingWhitespace</code> attribute to <code>true</co=
de>.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"writing-tests-parameterized-tests-sources-ArgumentsSource"><a cla=
ss=3D"anchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#wri=
ting-tests-parameterized-tests-sources-ArgumentsSource"></a>@ArgumentsSourc=
e</h5>
<div class=3D"paragraph">
<p><code>@ArgumentsSource</code> can be used to specify a custom, reusable =
<code>ArgumentsProvider</code>. Note
that an implementation of <code>ArgumentsProvider</code> must be declared a=
s either a top-level
class or as a <code>static</code> nested class.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@ArgumentsSource</span><span class=3D"o">(</span><span c=
lass=3D"nc">MyArgumentsProvider</span><span class=3D"o">.</span><span class=
=3D"na">class</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithArgumentsSource</=
span><span class=3D"o">(</span><span class=3D"nc">String</span> <span class=
=3D"n">argument</span><span class=3D"o">)</span> <span class=3D"o">{</span>
    <span class=3D"n">assertNotNull</span><span class=3D"o">(</span><span c=
lass=3D"n">argument</span><span class=3D"o">);</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kd">=
public</span> <span class=3D"kd">class</span> <span class=3D"nc">MyArgument=
sProvider</span> <span class=3D"kd">implements</span> <span class=3D"nc">Ar=
gumentsProvider</span> <span class=3D"o">{</span>

    <span class=3D"nd">@Override</span>
    <span class=3D"kd">public</span> <span class=3D"nc">Stream</span><span =
class=3D"o">&lt;?</span> <span class=3D"kd">extends</span> <span class=3D"n=
c">Arguments</span><span class=3D"o">&gt;</span> <span class=3D"nf">provide=
Arguments</span><span class=3D"o">(</span><span class=3D"nc">ExtensionConte=
xt</span> <span class=3D"n">context</span><span class=3D"o">)</span> <span =
class=3D"o">{</span>
        <span class=3D"k">return</span> <span class=3D"nc">Stream</span><sp=
an class=3D"o">.</span><span class=3D"na">of</span><span class=3D"o">(</spa=
n><span class=3D"s">"apple"</span><span class=3D"o">,</span> <span class=3D=
"s">"banana"</span><span class=3D"o">).</span><span class=3D"na">map</span>=
<span class=3D"o">(</span><span class=3D"nl">Arguments:</span><span class=
=3D"o">:</span><span class=3D"n">of</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-parameterized-tests-argument-conversion"><a class=
=3D"anchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#writi=
ng-tests-parameterized-tests-argument-conversion"></a>2.15.4. Argument Conv=
ersion</h4>
<div class=3D"sect4">
<h5 id=3D"writing-tests-parameterized-tests-argument-conversion-widening"><=
a class=3D"anchor" href=3D"https://junit.org/junit5/docs/current/user-guide=
/#writing-tests-parameterized-tests-argument-conversion-widening"></a>Widen=
ing Conversion</h5>
<div class=3D"paragraph">
<p>JUnit Jupiter supports
<a href=3D"https://docs.oracle.com/javase/specs/jls/se8/html/jls-5.html#jls=
-5.1.2">Widening Primitive
Conversion</a> for arguments supplied to a <code>@ParameterizedTest</code>.=
 For example, a
parameterized test annotated with <code>@ValueSource(ints =3D { 1, 2, 3 })<=
/code> can be declared to
accept not only an argument of type <code>int</code> but also an argument o=
f type <code>long</code>, <code>float</code>,
or <code>double</code>.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"writing-tests-parameterized-tests-argument-conversion-implicit"><=
a class=3D"anchor" href=3D"https://junit.org/junit5/docs/current/user-guide=
/#writing-tests-parameterized-tests-argument-conversion-implicit"></a>Impli=
cit Conversion</h5>
<div class=3D"paragraph">
<p>To support use cases like <code>@CsvSource</code>, JUnit Jupiter provide=
s a number of built-in
implicit type converters. The conversion process depends on the declared ty=
pe of each
method parameter.</p>
</div>
<div class=3D"paragraph">
<p>For example, if a <code>@ParameterizedTest</code> declares a parameter o=
f type <code>TimeUnit</code> and the
actual type supplied by the declared source is a <code>String</code>, the s=
tring will be
automatically converted into the corresponding <code>TimeUnit</code> enum c=
onstant.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@ValueSource</span><span class=3D"o">(</span><span class=
=3D"n">strings</span> <span class=3D"o">=3D</span> <span class=3D"s">"SECON=
DS"</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithImplicitArgumentC=
onversion</span><span class=3D"o">(</span><span class=3D"nc">ChronoUnit</sp=
an> <span class=3D"n">argument</span><span class=3D"o">)</span> <span class=
=3D"o">{</span>
    <span class=3D"n">assertNotNull</span><span class=3D"o">(</span><span c=
lass=3D"n">argument</span><span class=3D"o">.</span><span class=3D"na">name=
</span><span class=3D"o">());</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p><code>String</code> instances are implicitly converted to the following =
target types.</p>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
Decimal, hexadecimal, and octal <code>String</code> literals will be conver=
ted to their
integral types: <code>byte</code>, <code>short</code>, <code>int</code>, <c=
ode>long</code>, and their boxed counterparts.
</td>
</tr>
</tbody></table>
</div>
<table id=3D"writing-tests-parameterized-tests-argument-conversion-implicit=
-table" class=3D"tableblock frame-all grid-all stretch">
<colgroup>
<col style=3D"width: 10%;">
<col style=3D"width: 90%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Target Type</th>
<th class=3D"tableblock halign-left valign-top">Example</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>boolean</code>/<code>Boolean</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"true"</code>                                 =E2=86=92 <code>true</code=
></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>byte</code>/<code>Byte</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"15"</code>, <code>"0xF"</code>, or <code>"017"</code>              =E2=
=86=92 <code>(byte) 15</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>char</code>/<code>Character</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"o"</code>                                    =E2=86=92 <code>'o'</code>=
</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>short</code>/<code>Short</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"15"</code>, <code>"0xF"</code>, or <code>"017"</code>              =E2=
=86=92 <code>(short) 15</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>int</code>/<code>Integer</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"15"</code>, <code>"0xF"</code>, or <code>"017"</code>              =E2=
=86=92 <code>15</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>long</code>/<code>Long</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"15"</code>, <code>"0xF"</code>, or <code>"017"</code>              =E2=
=86=92 <code>15L</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>float</code>/<code>Float</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"1.0"</code>                                  =E2=86=92 <code>1.0f</code=
></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>double</code>/<code>Double</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"1.0"</code>                                  =E2=86=92 <code>1.0d</code=
></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>Enum</code> subclass</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"SECONDS"</code>                              =E2=86=92 <code>TimeUnit.S=
ECONDS</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.io.File</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"/path/to/file"</code>                        =E2=86=92 <code>new File("=
/path/to/file")</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.lang.Class</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"java.lang.Integer"</code>                    =E2=86=92 <code>java.lang.=
Integer.class</code> <em>(use <code>$</code> for nested classes, e.g. <code=
>"java.lang.Thread$State"</code>)</em></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.lang.Class</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"byte"</code>                                 =E2=86=92 <code>byte.class=
</code> <em>(primitive types are supported)</em></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.lang.Class</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"char[]"</code>                               =E2=86=92 <code>char[].cla=
ss</code> <em>(array types are supported)</em></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.math.BigDecimal</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"123.456e789"</code>                          =E2=86=92 <code>new BigDec=
imal("123.456e789")</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.math.BigInteger</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"1234567890123456789"</code>                  =E2=86=92 <code>new BigInt=
eger("1234567890123456789")</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.net.URI</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"https://junit.org/"</code>                   =E2=86=92 <code>URI.create=
("https://junit.org/")</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.net.URL</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"https://junit.org/"</code>                   =E2=86=92 <code>new URL("h=
ttps://junit.org/")</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.nio.charset.Charset</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"UTF-8"</code>                                =E2=86=92 <code>Charset.fo=
rName("UTF-8")</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.nio.file.Path</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"/path/to/file"</code>                        =E2=86=92 <code>Paths.get(=
"/path/to/file")</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.time.Duration</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"PT3S"</code>                                 =E2=86=92 <code>Duration.o=
fSeconds(3)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.time.Instant</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"1970-01-01T00:00:00Z"</code>                 =E2=86=92 <code>Instant.of=
EpochMilli(0)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.time.LocalDateTime</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"2017-03-14T12:34:56.789"</code>              =E2=86=92 <code>LocalDateT=
ime.of(2017, 3, 14, 12, 34, 56, 789_000_000)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.time.LocalDate</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"2017-03-14"</code>                           =E2=86=92 <code>LocalDate.=
of(2017, 3, 14)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.time.LocalTime</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"12:34:56.789"</code>                         =E2=86=92 <code>LocalTime.=
of(12, 34, 56, 789_000_000)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.time.MonthDay</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"--03-14"</code>                              =E2=86=92 <code>MonthDay.o=
f(3, 14)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.time.OffsetDateTime</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"2017-03-14T12:34:56.789Z"</code>             =E2=86=92 <code>OffsetDate=
Time.of(2017, 3, 14, 12, 34, 56, 789_000_000, ZoneOffset.UTC)</code></p></t=
d>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.time.OffsetTime</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"12:34:56.789Z"</code>                        =E2=86=92 <code>OffsetTime=
.of(12, 34, 56, 789_000_000, ZoneOffset.UTC)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.time.Period</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"P2M6D"</code>                                =E2=86=92 <code>Period.of(=
0, 2, 6)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.time.YearMonth</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"2017-03"</code>                              =E2=86=92 <code>YearMonth.=
of(2017, 3)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.time.Year</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"2017"</code>                                 =E2=86=92 <code>Year.of(20=
17)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.time.ZonedDateTime</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"2017-03-14T12:34:56.789Z"</code>             =E2=86=92 <code>ZonedDateT=
ime.of(2017, 3, 14, 12, 34, 56, 789_000_000, ZoneOffset.UTC)</code></p></td=
>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.time.ZoneId</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"Europe/Berlin"</code>                        =E2=86=92 <code>ZoneId.of(=
"Europe/Berlin")</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.time.ZoneOffset</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"+02:30"</code>                               =E2=86=92 <code>ZoneOffset=
.ofHoursMinutes(2, 30)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.util.Currency</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"JPY"</code>                                  =E2=86=92 <code>Currency.g=
etInstance("JPY")</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.util.Locale</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"en"</code>                                   =E2=86=92 <code>new Locale=
("en")</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>java.util.UUID</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>"d043e930-7b3b-48e3-bdbe-5a3ccfb833db"</code> =E2=86=92 <code>UUID.fromS=
tring("d043e930-7b3b-48e3-bdbe-5a3ccfb833db")</code></p></td>
</tr>
</tbody>
</table>
<div class=3D"sect5">
<h6 id=3D"writing-tests-parameterized-tests-argument-conversion-implicit-fa=
llback"><a class=3D"anchor" href=3D"https://junit.org/junit5/docs/current/u=
ser-guide/#writing-tests-parameterized-tests-argument-conversion-implicit-f=
allback"></a>Fallback String-to-Object Conversion</h6>
<div class=3D"paragraph">
<p>In addition to implicit conversion from strings to the target types list=
ed in the above
table, JUnit Jupiter also provides a fallback mechanism for automatic conve=
rsion from a
<code>String</code> to a given target type if the target type declares exac=
tly one suitable <em>factory
method</em> or a <em>factory constructor</em> as defined below.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><em>factory method</em>: a non-private, <code>static</code> method decla=
red in the target type that
accepts a single <code>String</code> argument and returns an instance of th=
e target type. The name
of the method can be arbitrary and need not follow any particular conventio=
n.</p>
</li>
<li>
<p><em>factory constructor</em>: a non-private constructor in the target ty=
pe that accepts a
single <code>String</code> argument. Note that the target type must be decl=
ared as either a
top-level class or as a <code>static</code> nested class.</p>
</li>
</ul>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
If multiple <em>factory methods</em> are discovered, they will be ignored. =
If a <em>factory
method</em> and a <em>factory constructor</em> are discovered, the factory =
method will be used
instead of the constructor.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>For example, in the following <code>@ParameterizedTest</code> method, th=
e <code>Book</code> argument will be
created by invoking the <code>Book.fromTitle(String)</code> factory method =
and passing <code>"42 Cats"</code>
as the title of the book.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@ValueSource</span><span class=3D"o">(</span><span class=
=3D"n">strings</span> <span class=3D"o">=3D</span> <span class=3D"s">"42 Ca=
ts"</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithImplicitFallbackA=
rgumentConversion</span><span class=3D"o">(</span><span class=3D"nc">Book</=
span> <span class=3D"n">book</span><span class=3D"o">)</span> <span class=
=3D"o">{</span>
    <span class=3D"n">assertEquals</span><span class=3D"o">(</span><span cl=
ass=3D"s">"42 Cats"</span><span class=3D"o">,</span> <span class=3D"n">book=
</span><span class=3D"o">.</span><span class=3D"na">getTitle</span><span cl=
ass=3D"o">());</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kd">=
public</span> <span class=3D"kd">class</span> <span class=3D"nc">Book</span=
> <span class=3D"o">{</span>

    <span class=3D"kd">private</span> <span class=3D"kd">final</span> <span=
 class=3D"nc">String</span> <span class=3D"n">title</span><span class=3D"o"=
>;</span>

    <span class=3D"kd">private</span> <span class=3D"nf">Book</span><span c=
lass=3D"o">(</span><span class=3D"nc">String</span> <span class=3D"n">title=
</span><span class=3D"o">)</span> <span class=3D"o">{</span>
        <span class=3D"k">this</span><span class=3D"o">.</span><span class=
=3D"na">title</span> <span class=3D"o">=3D</span> <span class=3D"n">title</=
span><span class=3D"o">;</span>
    <span class=3D"o">}</span>

    <span class=3D"kd">public</span> <span class=3D"kd">static</span> <span=
 class=3D"nc">Book</span> <span class=3D"nf">fromTitle</span><span class=3D=
"o">(</span><span class=3D"nc">String</span> <span class=3D"n">title</span>=
<span class=3D"o">)</span> <span class=3D"o">{</span>
        <span class=3D"k">return</span> <span class=3D"k">new</span> <span =
class=3D"nf">Book</span><span class=3D"o">(</span><span class=3D"n">title</=
span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"kd">public</span> <span class=3D"nc">String</span> <span=
 class=3D"nf">getTitle</span><span class=3D"o">()</span> <span class=3D"o">=
{</span>
        <span class=3D"k">return</span> <span class=3D"k">this</span><span =
class=3D"o">.</span><span class=3D"na">title</span><span class=3D"o">;</spa=
n>
    <span class=3D"o">}</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"writing-tests-parameterized-tests-argument-conversion-explicit"><=
a class=3D"anchor" href=3D"https://junit.org/junit5/docs/current/user-guide=
/#writing-tests-parameterized-tests-argument-conversion-explicit"></a>Expli=
cit Conversion</h5>
<div class=3D"paragraph">
<p>Instead of relying on implicit argument conversion you may explicitly sp=
ecify an
<code>ArgumentConverter</code> to use for a certain parameter using the <co=
de>@ConvertWith</code> annotation
like in the following example. Note that an implementation of <code>Argumen=
tConverter</code> must be
declared as either a top-level class or as a <code>static</code> nested cla=
ss.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@EnumSource</span><span class=3D"o">(</span><span class=
=3D"nc">ChronoUnit</span><span class=3D"o">.</span><span class=3D"na">class=
</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithExplicitArgumentC=
onversion</span><span class=3D"o">(</span>
        <span class=3D"nd">@ConvertWith</span><span class=3D"o">(</span><sp=
an class=3D"nc">ToStringArgumentConverter</span><span class=3D"o">.</span><=
span class=3D"na">class</span><span class=3D"o">)</span> <span class=3D"nc"=
>String</span> <span class=3D"n">argument</span><span class=3D"o">)</span> =
<span class=3D"o">{</span>

    <span class=3D"n">assertNotNull</span><span class=3D"o">(</span><span c=
lass=3D"nc">ChronoUnit</span><span class=3D"o">.</span><span class=3D"na">v=
alueOf</span><span class=3D"o">(</span><span class=3D"n">argument</span><sp=
an class=3D"o">));</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kd">=
public</span> <span class=3D"kd">class</span> <span class=3D"nc">ToStringAr=
gumentConverter</span> <span class=3D"kd">extends</span> <span class=3D"nc"=
>SimpleArgumentConverter</span> <span class=3D"o">{</span>

    <span class=3D"nd">@Override</span>
    <span class=3D"kd">protected</span> <span class=3D"nc">Object</span> <s=
pan class=3D"nf">convert</span><span class=3D"o">(</span><span class=3D"nc"=
>Object</span> <span class=3D"n">source</span><span class=3D"o">,</span> <s=
pan class=3D"nc">Class</span><span class=3D"o">&lt;?&gt;</span> <span class=
=3D"n">targetType</span><span class=3D"o">)</span> <span class=3D"o">{</spa=
n>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"nc">String</span><span class=3D"o">.</span><span class=3D"na">cl=
ass</span><span class=3D"o">,</span> <span class=3D"n">targetType</span><sp=
an class=3D"o">,</span> <span class=3D"s">"Can only convert to String"</spa=
n><span class=3D"o">);</span>
        <span class=3D"k">if</span> <span class=3D"o">(</span><span class=
=3D"n">source</span> <span class=3D"k">instanceof</span> <span class=3D"nc"=
>Enum</span><span class=3D"o">&lt;?&gt;)</span> <span class=3D"o">{</span>
            <span class=3D"k">return</span> <span class=3D"o">((</span><spa=
n class=3D"nc">Enum</span><span class=3D"o">&lt;?&gt;)</span> <span class=
=3D"n">source</span><span class=3D"o">).</span><span class=3D"na">name</spa=
n><span class=3D"o">();</span>
        <span class=3D"o">}</span>
        <span class=3D"k">return</span> <span class=3D"nc">String</span><sp=
an class=3D"o">.</span><span class=3D"na">valueOf</span><span class=3D"o">(=
</span><span class=3D"n">source</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>If the converter is only meant to convert one type to another, you can e=
xtend
<code>TypedArgumentConverter</code> to avoid boilerplate type checks.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kd">=
public</span> <span class=3D"kd">class</span> <span class=3D"nc">ToLengthAr=
gumentConverter</span> <span class=3D"kd">extends</span> <span class=3D"nc"=
>TypedArgumentConverter</span><span class=3D"o">&lt;</span><span class=3D"n=
c">String</span><span class=3D"o">,</span> <span class=3D"nc">Integer</span=
><span class=3D"o">&gt;</span> <span class=3D"o">{</span>

    <span class=3D"kd">protected</span> <span class=3D"nf">ToLengthArgument=
Converter</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"kd">super</span><span class=3D"o">(</span><span clas=
s=3D"nc">String</span><span class=3D"o">.</span><span class=3D"na">class</s=
pan><span class=3D"o">,</span> <span class=3D"nc">Integer</span><span class=
=3D"o">.</span><span class=3D"na">class</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Override</span>
    <span class=3D"kd">protected</span> <span class=3D"nc">Integer</span> <=
span class=3D"nf">convert</span><span class=3D"o">(</span><span class=3D"nc=
">String</span> <span class=3D"n">source</span><span class=3D"o">)</span> <=
span class=3D"o">{</span>
        <span class=3D"k">return</span> <span class=3D"o">(</span><span cla=
ss=3D"n">source</span> <span class=3D"o">!=3D</span> <span class=3D"kc">nul=
l</span> <span class=3D"o">?</span> <span class=3D"n">source</span><span cl=
ass=3D"o">.</span><span class=3D"na">length</span><span class=3D"o">()</spa=
n> <span class=3D"o">:</span> <span class=3D"mi">0</span><span class=3D"o">=
);</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Explicit argument converters are meant to be implemented by test and ext=
ension authors.
Thus, <code>junit-jupiter-params</code> only provides a single explicit arg=
ument converter that may
also serve as a reference implementation: <code>JavaTimeArgumentConverter</=
code>. It is used via the
composed annotation <code>JavaTimeConversionPattern</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@ValueSource</span><span class=3D"o">(</span><span class=
=3D"n">strings</span> <span class=3D"o">=3D</span> <span class=3D"o">{</spa=
n> <span class=3D"s">"01.01.2017"</span><span class=3D"o">,</span> <span cl=
ass=3D"s">"31.12.2017"</span> <span class=3D"o">})</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithExplicitJavaTimeC=
onverter</span><span class=3D"o">(</span>
        <span class=3D"nd">@JavaTimeConversionPattern</span><span class=3D"=
o">(</span><span class=3D"s">"dd.MM.yyyy"</span><span class=3D"o">)</span> =
<span class=3D"nc">LocalDate</span> <span class=3D"n">argument</span><span =
class=3D"o">)</span> <span class=3D"o">{</span>

    <span class=3D"n">assertEquals</span><span class=3D"o">(</span><span cl=
ass=3D"mi">2017</span><span class=3D"o">,</span> <span class=3D"n">argument=
</span><span class=3D"o">.</span><span class=3D"na">getYear</span><span cla=
ss=3D"o">());</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-parameterized-tests-argument-aggregation"><a class=
=3D"anchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#writi=
ng-tests-parameterized-tests-argument-aggregation"></a>2.15.5. Argument Agg=
regation</h4>
<div class=3D"paragraph">
<p>By default, each <em>argument</em> provided to a <code>@ParameterizedTes=
t</code> method corresponds to a
single method parameter. Consequently, argument sources which are expected =
to supply a
large number of arguments can lead to large method signatures.</p>
</div>
<div class=3D"paragraph">
<p>In such cases, an <code><a href=3D"https://junit.org/junit5/docs/current=
/api/org.junit.jupiter.params/org/junit/jupiter/params/aggregator/Arguments=
Accessor.html">ArgumentsAccessor</a></code> can be used instead of multiple=
 parameters. Using
this API, you can access the provided arguments through a single argument p=
assed to your
test method. In addition, type conversion is supported as discussed in
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-=
parameterized-tests-argument-conversion-implicit">Implicit Conversion</a>.<=
/p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@CsvSource</span><span class=3D"o">({</span>
    <span class=3D"s">"Jane, Doe, F, 1990-05-20"</span><span class=3D"o">,<=
/span>
    <span class=3D"s">"John, Doe, M, 1990-10-22"</span>
<span class=3D"o">})</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithArgumentsAccessor=
</span><span class=3D"o">(</span><span class=3D"nc">ArgumentsAccessor</span=
> <span class=3D"n">arguments</span><span class=3D"o">)</span> <span class=
=3D"o">{</span>
    <span class=3D"nc">Person</span> <span class=3D"n">person</span> <span =
class=3D"o">=3D</span> <span class=3D"k">new</span> <span class=3D"nc">Pers=
on</span><span class=3D"o">(</span><span class=3D"n">arguments</span><span =
class=3D"o">.</span><span class=3D"na">getString</span><span class=3D"o">(<=
/span><span class=3D"mi">0</span><span class=3D"o">),</span>
                               <span class=3D"n">arguments</span><span clas=
s=3D"o">.</span><span class=3D"na">getString</span><span class=3D"o">(</spa=
n><span class=3D"mi">1</span><span class=3D"o">),</span>
                               <span class=3D"n">arguments</span><span clas=
s=3D"o">.</span><span class=3D"na">get</span><span class=3D"o">(</span><spa=
n class=3D"mi">2</span><span class=3D"o">,</span> <span class=3D"nc">Gender=
</span><span class=3D"o">.</span><span class=3D"na">class</span><span class=
=3D"o">),</span>
                               <span class=3D"n">arguments</span><span clas=
s=3D"o">.</span><span class=3D"na">get</span><span class=3D"o">(</span><spa=
n class=3D"mi">3</span><span class=3D"o">,</span> <span class=3D"nc">LocalD=
ate</span><span class=3D"o">.</span><span class=3D"na">class</span><span cl=
ass=3D"o">));</span>

    <span class=3D"k">if</span> <span class=3D"o">(</span><span class=3D"n"=
>person</span><span class=3D"o">.</span><span class=3D"na">getFirstName</sp=
an><span class=3D"o">().</span><span class=3D"na">equals</span><span class=
=3D"o">(</span><span class=3D"s">"Jane"</span><span class=3D"o">))</span> <=
span class=3D"o">{</span>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"nc">Gender</span><span class=3D"o">.</span><span class=3D"na">F<=
/span><span class=3D"o">,</span> <span class=3D"n">person</span><span class=
=3D"o">.</span><span class=3D"na">getGender</span><span class=3D"o">());</s=
pan>
    <span class=3D"o">}</span>
    <span class=3D"k">else</span> <span class=3D"o">{</span>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"nc">Gender</span><span class=3D"o">.</span><span class=3D"na">M<=
/span><span class=3D"o">,</span> <span class=3D"n">person</span><span class=
=3D"o">.</span><span class=3D"na">getGender</span><span class=3D"o">());</s=
pan>
    <span class=3D"o">}</span>
    <span class=3D"n">assertEquals</span><span class=3D"o">(</span><span cl=
ass=3D"s">"Doe"</span><span class=3D"o">,</span> <span class=3D"n">person</=
span><span class=3D"o">.</span><span class=3D"na">getLastName</span><span c=
lass=3D"o">());</span>
    <span class=3D"n">assertEquals</span><span class=3D"o">(</span><span cl=
ass=3D"mi">1990</span><span class=3D"o">,</span> <span class=3D"n">person</=
span><span class=3D"o">.</span><span class=3D"na">getDateOfBirth</span><spa=
n class=3D"o">().</span><span class=3D"na">getYear</span><span class=3D"o">=
());</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p><em>An instance of <code>ArgumentsAccessor</code> is automatically injec=
ted into any parameter of type
<code>ArgumentsAccessor</code>.</em></p>
</div>
<div class=3D"sect4">
<h5 id=3D"writing-tests-parameterized-tests-argument-aggregation-custom"><a=
 class=3D"anchor" href=3D"https://junit.org/junit5/docs/current/user-guide/=
#writing-tests-parameterized-tests-argument-aggregation-custom"></a>Custom =
Aggregators</h5>
<div class=3D"paragraph">
<p>Apart from direct access to a <code>@ParameterizedTest</code> method=E2=
=80=99s arguments using an
<code>ArgumentsAccessor</code>, JUnit Jupiter also supports the usage of cu=
stom, reusable
<em>aggregators</em>.</p>
</div>
<div class=3D"paragraph">
<p>To use a custom aggregator, implement the <code><a href=3D"https://junit=
.org/junit5/docs/current/api/org.junit.jupiter.params/org/junit/jupiter/par=
ams/aggregator/ArgumentsAggregator.html">ArgumentsAggregator</a></code> int=
erface and register
it via the <code>@AggregateWith</code> annotation on a compatible parameter=
 in the
<code>@ParameterizedTest</code> method. The result of the aggregation will =
then be provided as an
argument for the corresponding parameter when the parameterized test is inv=
oked. Note
that an implementation of <code>ArgumentsAggregator</code> must be declared=
 as either a top-level
class or as a <code>static</code> nested class.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@CsvSource</span><span class=3D"o">({</span>
    <span class=3D"s">"Jane, Doe, F, 1990-05-20"</span><span class=3D"o">,<=
/span>
    <span class=3D"s">"John, Doe, M, 1990-10-22"</span>
<span class=3D"o">})</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithArgumentsAggregat=
or</span><span class=3D"o">(</span><span class=3D"nd">@AggregateWith</span>=
<span class=3D"o">(</span><span class=3D"nc">PersonAggregator</span><span c=
lass=3D"o">.</span><span class=3D"na">class</span><span class=3D"o">)</span=
> <span class=3D"nc">Person</span> <span class=3D"n">person</span><span cla=
ss=3D"o">)</span> <span class=3D"o">{</span>
    <span class=3D"c1">// perform assertions against person</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kd">=
public</span> <span class=3D"kd">class</span> <span class=3D"nc">PersonAggr=
egator</span> <span class=3D"kd">implements</span> <span class=3D"nc">Argum=
entsAggregator</span> <span class=3D"o">{</span>
    <span class=3D"nd">@Override</span>
    <span class=3D"kd">public</span> <span class=3D"nc">Person</span> <span=
 class=3D"nf">aggregateArguments</span><span class=3D"o">(</span><span clas=
s=3D"nc">ArgumentsAccessor</span> <span class=3D"n">arguments</span><span c=
lass=3D"o">,</span> <span class=3D"nc">ParameterContext</span> <span class=
=3D"n">context</span><span class=3D"o">)</span> <span class=3D"o">{</span>
        <span class=3D"k">return</span> <span class=3D"k">new</span> <span =
class=3D"nf">Person</span><span class=3D"o">(</span><span class=3D"n">argum=
ents</span><span class=3D"o">.</span><span class=3D"na">getString</span><sp=
an class=3D"o">(</span><span class=3D"mi">0</span><span class=3D"o">),</spa=
n>
                          <span class=3D"n">arguments</span><span class=3D"=
o">.</span><span class=3D"na">getString</span><span class=3D"o">(</span><sp=
an class=3D"mi">1</span><span class=3D"o">),</span>
                          <span class=3D"n">arguments</span><span class=3D"=
o">.</span><span class=3D"na">get</span><span class=3D"o">(</span><span cla=
ss=3D"mi">2</span><span class=3D"o">,</span> <span class=3D"nc">Gender</spa=
n><span class=3D"o">.</span><span class=3D"na">class</span><span class=3D"o=
">),</span>
                          <span class=3D"n">arguments</span><span class=3D"=
o">.</span><span class=3D"na">get</span><span class=3D"o">(</span><span cla=
ss=3D"mi">3</span><span class=3D"o">,</span> <span class=3D"nc">LocalDate</=
span><span class=3D"o">.</span><span class=3D"na">class</span><span class=
=3D"o">));</span>
    <span class=3D"o">}</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>If you find yourself repeatedly declaring <code>@AggregateWith(MyTypeAgg=
regator.class)</code> for
multiple parameterized test methods across your codebase, you may wish to c=
reate a custom
<em>composed annotation</em> such as <code>@CsvToMyType</code> that is meta=
-annotated with
<code>@AggregateWith(MyTypeAggregator.class)</code>. The following example =
demonstrates this in
action with a custom <code>@CsvToPerson</code> annotation.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ParameterizedTest</span>
<span class=3D"nd">@CsvSource</span><span class=3D"o">({</span>
    <span class=3D"s">"Jane, Doe, F, 1990-05-20"</span><span class=3D"o">,<=
/span>
    <span class=3D"s">"John, Doe, M, 1990-10-22"</span>
<span class=3D"o">})</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithCustomAggregatorA=
nnotation</span><span class=3D"o">(</span><span class=3D"nd">@CsvToPerson</=
span> <span class=3D"nc">Person</span> <span class=3D"n">person</span><span=
 class=3D"o">)</span> <span class=3D"o">{</span>
    <span class=3D"c1">// perform assertions against person</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@Retention</span><span class=3D"o">(</span><span class=3D"nc">RetentionPoli=
cy</span><span class=3D"o">.</span><span class=3D"na">RUNTIME</span><span c=
lass=3D"o">)</span>
<span class=3D"nd">@Target</span><span class=3D"o">(</span><span class=3D"n=
c">ElementType</span><span class=3D"o">.</span><span class=3D"na">PARAMETER=
</span><span class=3D"o">)</span>
<span class=3D"nd">@AggregateWith</span><span class=3D"o">(</span><span cla=
ss=3D"nc">PersonAggregator</span><span class=3D"o">.</span><span class=3D"n=
a">class</span><span class=3D"o">)</span>
<span class=3D"kd">public</span> <span class=3D"nd">@interface</span> <span=
 class=3D"nc">CsvToPerson</span> <span class=3D"o">{</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-parameterized-tests-display-names"><a class=3D"anch=
or" href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests=
-parameterized-tests-display-names"></a>2.15.6. Customizing Display Names</=
h4>
<div class=3D"paragraph">
<p>By default, the display name of a parameterized test invocation contains=
 the invocation
index and the <code>String</code> representation of all arguments for that =
specific invocation.
Each of them is preceded by the parameter name (unless the argument is only=
 available via
an <code>ArgumentsAccessor</code> or <code>ArgumentAggregator</code>), if p=
resent in the bytecode (for Java,
test code must be compiled with the <code>-parameters</code> compiler flag)=
.</p>
</div>
<div class=3D"paragraph">
<p>However, you can customize invocation display names via the <code>name</=
code> attribute of the
<code>@ParameterizedTest</code> annotation like in the following example.</=
p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@DisplayName</span><span class=3D"o">(</span><span class=3D"s">"Display nam=
e of container"</span><span class=3D"o">)</span>
<span class=3D"nd">@ParameterizedTest</span><span class=3D"o">(</span><span=
 class=3D"n">name</span> <span class=3D"o">=3D</span> <span class=3D"s">"{i=
ndex} =3D=3D&gt; the rank of ''{0}'' is {1}"</span><span class=3D"o">)</spa=
n>
<span class=3D"nd">@CsvSource</span><span class=3D"o">({</span> <span class=
=3D"s">"apple, 1"</span><span class=3D"o">,</span> <span class=3D"s">"banan=
a, 2"</span><span class=3D"o">,</span> <span class=3D"s">"'lemon, lime', 3"=
</span> <span class=3D"o">})</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithCustomDisplayName=
s</span><span class=3D"o">(</span><span class=3D"nc">String</span> <span cl=
ass=3D"n">fruit</span><span class=3D"o">,</span> <span class=3D"kt">int</sp=
an> <span class=3D"n">rank</span><span class=3D"o">)</span> <span class=3D"=
o">{</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>When executing the above method using the <code>ConsoleLauncher</code> y=
ou will see output similar to
the following.</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>Display name of container =E2=9C=94
=E2=94=9C=E2=94=80 1 =3D=3D&gt; the rank of 'apple' is 1 =E2=9C=94
=E2=94=9C=E2=94=80 2 =3D=3D&gt; the rank of 'banana' is 2 =E2=9C=94
=E2=94=94=E2=94=80 3 =3D=3D&gt; the rank of 'lemon, lime' is 3 =E2=9C=94</p=
re>
</div>
</div>
<div class=3D"paragraph">
<p>Please note that <code>name</code> is a <code>MessageFormat</code> patte=
rn. Thus, a single quote (<code>'</code>) needs to be represented as a doub=
led single quote (<code>''</code>) in order to be displayed.</p>
</div>
<div class=3D"paragraph">
<p>The following placeholders are supported within custom display names.</p=
>
</div>
<table class=3D"tableblock frame-all grid-all stretch">
<colgroup>
<col style=3D"width: 20%;">
<col style=3D"width: 80%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Placeholder</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>{displayName}</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">the=
 display name of the method</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>{index}</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">the=
 current invocation index (1-based)</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>{arguments}</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">the=
 complete, comma-separated arguments list</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>{argumentsWithNames}</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">the=
 complete, comma-separated arguments list with parameter names</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>{0}</code>, <code>{1}</code>, =E2=80=A6=E2=80=8B</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">an =
individual argument</p></td>
</tr>
</tbody>
</table>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
When including arguments in display names, their string representations are=
 truncated
if they exceed the configured maximum length. The limit is configurable via=
 the
<code>junit.jupiter.params.displayname.argument.maxlength</code> configurat=
ion parameter and defaults
to 512 characters.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>When using <code>@MethodSource</code> or <code>@ArgumentSource</code>, y=
ou can give names to arguments. This
name will be used if the argument is included in the invocation display nam=
e, like in
the example below.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@DisplayName</span><span class=3D"o">(</span><span class=3D"s">"A parameter=
ized test with named arguments"</span><span class=3D"o">)</span>
<span class=3D"nd">@ParameterizedTest</span><span class=3D"o">(</span><span=
 class=3D"n">name</span> <span class=3D"o">=3D</span> <span class=3D"s">"{i=
ndex}: {0}"</span><span class=3D"o">)</span>
<span class=3D"nd">@MethodSource</span><span class=3D"o">(</span><span clas=
s=3D"s">"namedArguments"</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithNamedArguments</s=
pan><span class=3D"o">(</span><span class=3D"nc">File</span> <span class=3D=
"n">file</span><span class=3D"o">)</span> <span class=3D"o">{</span>
<span class=3D"o">}</span>

<span class=3D"kd">static</span> <span class=3D"nc">Stream</span><span clas=
s=3D"o">&lt;</span><span class=3D"nc">Arguments</span><span class=3D"o">&gt=
;</span> <span class=3D"nf">namedArguments</span><span class=3D"o">()</span=
> <span class=3D"o">{</span>
    <span class=3D"k">return</span> <span class=3D"nc">Stream</span><span c=
lass=3D"o">.</span><span class=3D"na">of</span><span class=3D"o">(</span><s=
pan class=3D"n">arguments</span><span class=3D"o">(</span><span class=3D"nc=
">Named</span><span class=3D"o">.</span><span class=3D"na">of</span><span c=
lass=3D"o">(</span><span class=3D"s">"An important file"</span><span class=
=3D"o">,</span> <span class=3D"k">new</span> <span class=3D"nc">File</span>=
<span class=3D"o">(</span><span class=3D"s">"path1"</span><span class=3D"o"=
>))),</span>
        <span class=3D"n">arguments</span><span class=3D"o">(</span><span c=
lass=3D"nc">Named</span><span class=3D"o">.</span><span class=3D"na">of</sp=
an><span class=3D"o">(</span><span class=3D"s">"Another file"</span><span c=
lass=3D"o">,</span> <span class=3D"k">new</span> <span class=3D"nc">File</s=
pan><span class=3D"o">(</span><span class=3D"s">"path2"</span><span class=
=3D"o">))));</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>A parameterized test with named arguments =E2=9C=94
=E2=94=9C=E2=94=80 1: An important file =E2=9C=94
=E2=94=94=E2=94=80 2: Another file =E2=9C=94</pre>
</div>
</div>
<div class=3D"paragraph">
<p>If you=E2=80=99d like to set default name pattern for all parameterized =
tests in your project, you can add the following
configuration to <code>junit-platform.properties</code></p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"properties"><span class=
=3D"py">junit.jupiter.params.displayname.default</span> <span class=3D"p">=
=3D</span> <span class=3D"s">{index}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>the display name for a parameterized method is determined according to t=
he following precedence rules:</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p><code>name</code> of <code>@ParameterizedTest</code>, if present</p>
</li>
<li>
<p>the value of <code>junit.jupiter.params.displayname.default</code> (from=
 junit-platform.properties), if present</p>
</li>
<li>
<p><code>DEFAULT_DISPLAY_NAME</code> constant defined in <code>@Parameteriz=
edTest</code></p>
</li>
</ol>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-parameterized-tests-lifecycle-interop"><a class=3D"=
anchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-t=
ests-parameterized-tests-lifecycle-interop"></a>2.15.7. Lifecycle and Inter=
operability</h4>
<div class=3D"paragraph">
<p>Each invocation of a parameterized test has the same lifecycle as a regu=
lar <code>@Test</code>
method. For example, <code>@BeforeEach</code> methods will be executed befo=
re each invocation.
Similar to <a href=3D"https://junit.org/junit5/docs/current/user-guide/#wri=
ting-tests-dynamic-tests">Dynamic Tests</a>, invocations will appear one by=
 one in the
test tree of an IDE. You may at will mix regular <code>@Test</code> methods=
 and <code>@ParameterizedTest</code>
methods within the same test class.</p>
</div>
<div class=3D"paragraph">
<p>You may use <code>ParameterResolver</code> extensions with <code>@Parame=
terizedTest</code> methods. However,
method parameters that are resolved by argument sources need to come first =
in the
argument list. Since a test class may contain regular tests as well as para=
meterized
tests with different parameter lists, values from argument sources are not =
resolved for
lifecycle methods (e.g. <code>@BeforeEach</code>) and test class constructo=
rs.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@BeforeEach</span>
<span class=3D"kt">void</span> <span class=3D"nf">beforeEach</span><span cl=
ass=3D"o">(</span><span class=3D"nc">TestInfo</span> <span class=3D"n">test=
Info</span><span class=3D"o">)</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span>

<span class=3D"nd">@ParameterizedTest</span>
<span class=3D"nd">@ValueSource</span><span class=3D"o">(</span><span class=
=3D"n">strings</span> <span class=3D"o">=3D</span> <span class=3D"s">"apple=
"</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">testWithRegularParameterR=
esolver</span><span class=3D"o">(</span><span class=3D"nc">String</span> <s=
pan class=3D"n">argument</span><span class=3D"o">,</span> <span class=3D"nc=
">TestReporter</span> <span class=3D"n">testReporter</span><span class=3D"o=
">)</span> <span class=3D"o">{</span>
    <span class=3D"n">testReporter</span><span class=3D"o">.</span><span cl=
ass=3D"na">publishEntry</span><span class=3D"o">(</span><span class=3D"s">"=
argument"</span><span class=3D"o">,</span> <span class=3D"n">argument</span=
><span class=3D"o">);</span>
<span class=3D"o">}</span>

<span class=3D"nd">@AfterEach</span>
<span class=3D"kt">void</span> <span class=3D"nf">afterEach</span><span cla=
ss=3D"o">(</span><span class=3D"nc">TestInfo</span> <span class=3D"n">testI=
nfo</span><span class=3D"o">)</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"writing-tests-test-templates"><a class=3D"anchor" href=3D"https:/=
/junit.org/junit5/docs/current/user-guide/#writing-tests-test-templates"></=
a>2.16. Test Templates</h3>
<div class=3D"paragraph">
<p>A <code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.j=
upiter.api/org/junit/jupiter/api/TestTemplate.html">@TestTemplate</a></code=
> method is not a regular test case but rather a template for test
cases. As such, it is designed to be invoked multiple times depending on th=
e number of
invocation contexts returned by the registered providers. Thus, it must be =
used in
conjunction with a registered <code><a href=3D"https://junit.org/junit5/doc=
s/current/api/org.junit.jupiter.api/org/junit/jupiter/api/extension/TestTem=
plateInvocationContextProvider.html">TestTemplateInvocationContextProvider<=
/a></code> extension. Each
invocation of a test template method behaves like the execution of a regula=
r <code>@Test</code>
method with full support for the same lifecycle callbacks and extensions. P=
lease refer to
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-tes=
t-templates">Providing Invocation Contexts for Test Templates</a> for usage=
 examples.</p>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-=
repeated-tests">Repeated Tests</a> and <a href=3D"https://junit.org/junit5/=
docs/current/user-guide/#writing-tests-parameterized-tests">Parameterized T=
ests</a> are
built-in specializations of test templates.
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"writing-tests-dynamic-tests"><a class=3D"anchor" href=3D"https://=
junit.org/junit5/docs/current/user-guide/#writing-tests-dynamic-tests"></a>=
2.17. Dynamic Tests</h3>
<div class=3D"paragraph">
<p>The standard <code>@Test</code> annotation in JUnit Jupiter described in
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-=
annotations">Annotations</a> is very similar to the <code>@Test</code> anno=
tation in JUnit 4. Both
describe methods that implement test cases. These test cases are static in =
the sense that
they are fully specified at compile time, and their behavior cannot be chan=
ged by
anything happening at runtime. <em>Assumptions provide a basic form of dyna=
mic behavior but
are intentionally rather limited in their expressiveness.</em></p>
</div>
<div class=3D"paragraph">
<p>In addition to these standard tests a completely new kind of test progra=
mming model has
been introduced in JUnit Jupiter. This new kind of test is a <em>dynamic te=
st</em> which is
generated at runtime by a factory method that is annotated with <code>@Test=
Factory</code>.</p>
</div>
<div class=3D"paragraph">
<p>In contrast to <code>@Test</code> methods, a <code>@TestFactory</code> m=
ethod is not itself a test case but
rather a factory for test cases. Thus, a dynamic test is the product of a f=
actory.
Technically speaking, a <code>@TestFactory</code> method must return a sing=
le <code>DynamicNode</code> or a
<code>Stream</code>, <code>Collection</code>, <code>Iterable</code>, <code>=
Iterator</code>, or array of <code>DynamicNode</code> instances.
Instantiable subclasses of <code>DynamicNode</code> are <code>DynamicContai=
ner</code> and <code>DynamicTest</code>.
<code>DynamicContainer</code> instances are composed of a <em>display name<=
/em> and a list of dynamic child
nodes, enabling the creation of arbitrarily nested hierarchies of dynamic n=
odes.
<code>DynamicTest</code> instances will be executed lazily, enabling dynami=
c and even
non-deterministic generation of test cases.</p>
</div>
<div class=3D"paragraph">
<p>Any <code>Stream</code> returned by a <code>@TestFactory</code> will be =
properly closed by calling
<code>stream.close()</code>, making it safe to use a resource such as <code=
>Files.lines()</code>.</p>
</div>
<div class=3D"paragraph">
<p>As with <code>@Test</code> methods, <code>@TestFactory</code> methods mu=
st not be <code>private</code> or <code>static</code> and may
optionally declare parameters to be resolved by <code>ParameterResolvers</c=
ode>.</p>
</div>
<div class=3D"paragraph">
<p>A <code>DynamicTest</code> is a test case generated at runtime. It is co=
mposed of a <em>display name</em>
and an <code>Executable</code>. <code>Executable</code> is a <code>@Functio=
nalInterface</code> which means that the
implementations of dynamic tests can be provided as <em>lambda expressions<=
/em> or <em>method
references</em>.</p>
</div>
<div class=3D"admonitionblock warning">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-warning" title=3D"Warning"></i>
</td>
<td class=3D"content">
<div class=3D"title">Dynamic Test Lifecycle</div>
The execution lifecycle of a dynamic test is quite different than it is for=
 a
standard <code>@Test</code> case. Specifically, there are no lifecycle call=
backs for individual
dynamic tests. This means that <code>@BeforeEach</code> and <code>@AfterEac=
h</code> methods and their
corresponding extension callbacks are executed for the <code>@TestFactory</=
code> method but not for
each <em>dynamic test</em>. In other words, if you access fields from the t=
est instance within a
lambda expression for a dynamic test, those fields will not be reset by cal=
lback methods
or extensions between the execution of individual dynamic tests generated b=
y the same
<code>@TestFactory</code> method.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>As of JUnit Jupiter 5.8.2, dynamic tests must always be created by facto=
ry
methods; however, this might be complemented by a registration facility in =
a later
release.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-dynamic-tests-examples"><a class=3D"anchor" href=3D=
"https://junit.org/junit5/docs/current/user-guide/#writing-tests-dynamic-te=
sts-examples"></a>2.17.1. Dynamic Test Examples</h4>
<div class=3D"paragraph">
<p>The following <code>DynamicTestsDemo</code> class demonstrates several e=
xamples of test factories
and dynamic tests.</p>
</div>
<div class=3D"paragraph">
<p>The first method returns an invalid return type. Since an invalid return=
 type cannot be
detected at compile time, a <code>JUnitException</code> is thrown when it i=
s detected at runtime.</p>
</div>
<div class=3D"paragraph">
<p>The next six methods are very simple examples that demonstrate the gener=
ation of a
<code>Collection</code>, <code>Iterable</code>, <code>Iterator</code>, arra=
y, or <code>Stream</code> of <code>DynamicTest</code> instances. Most of
these examples do not really exhibit dynamic behavior but merely demonstrat=
e the
supported return types in principle. However, <code>dynamicTestsFromStream(=
)</code> and
<code>dynamicTestsFromIntStream()</code> demonstrate how easy it is to gene=
rate dynamic tests for a
given set of strings or a range of input numbers.</p>
</div>
<div class=3D"paragraph">
<p>The next method is truly dynamic in nature. <code>generateRandomNumberOf=
Tests()</code> implements an
<code>Iterator</code> that generates random numbers, a display name generat=
or, and a test executor
and then provides all three to <code>DynamicTest.stream()</code>. Although =
the non-deterministic
behavior of <code>generateRandomNumberOfTests()</code> is of course in conf=
lict with test
repeatability and should thus be used with care, it serves to demonstrate t=
he
expressiveness and power of dynamic tests.</p>
</div>
<div class=3D"paragraph">
<p>The next method is similar to <code>generateRandomNumberOfTests()</code>=
 in terms of flexibility;
however, <code>dynamicTestsFromStreamFactoryMethod()</code> generates a str=
eam of dynamic tests from
an existing <code>Stream</code> via the <code>DynamicTest.stream()</code> f=
actory method.</p>
</div>
<div class=3D"paragraph">
<p>For demonstration purposes, the <code>dynamicNodeSingleTest()</code> met=
hod generates a single
<code>DynamicTest</code> instead of a stream, and the <code>dynamicNodeSing=
leContainer()</code> method generates
a nested hierarchy of dynamic tests utilizing <code>DynamicContainer</code>=
.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">static</span> <span class=3D"n">example</s=
pan><span class=3D"o">.</span><span class=3D"na">util</span><span class=3D"=
o">.</span><span class=3D"na">StringUtils</span><span class=3D"o">.</span><=
span class=3D"na">isPalindrome</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">Assertions</span><span class=3D"o">.</span><span class=3D"na">ass=
ertEquals</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">Assertions</span><span class=3D"o">.</span><span class=3D"na">ass=
ertFalse</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">Assertions</span><span class=3D"o">.</span><span class=3D"na">ass=
ertNotNull</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">Assertions</span><span class=3D"o">.</span><span class=3D"na">ass=
ertTrue</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">DynamicContainer</span><span class=3D"o">.</span><span class=3D"n=
a">dynamicContainer</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">DynamicTest</span><span class=3D"o">.</span><span class=3D"na">dy=
namicTest</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">Named</span><span class=3D"o">.</span><span class=3D"na">named</s=
pan><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">java.util.Arrays</span>=
<span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.util.Collection</s=
pan><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.util.Iterator</spa=
n><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.util.List</span><s=
pan class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.util.Random</span>=
<span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.util.function.Func=
tion</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.util.stream.IntStr=
eam</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.util.stream.Stream=
</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">example.util.Calculator=
</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.D=
ynamicNode</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.D=
ynamicTest</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.N=
amed</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
ag</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
estFactory</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.f=
unction.ThrowingConsumer</span><span class=3D"o">;</span>

<span class=3D"kd">class</span> <span class=3D"nc">DynamicTestsDemo</span> =
<span class=3D"o">{</span>

    <span class=3D"kd">private</span> <span class=3D"kd">final</span> <span=
 class=3D"nc">Calculator</span> <span class=3D"n">calculator</span> <span c=
lass=3D"o">=3D</span> <span class=3D"k">new</span> <span class=3D"nc">Calcu=
lator</span><span class=3D"o">();</span>

    <span class=3D"c1">// This will result in a JUnitException!</span>
    <span class=3D"nd">@TestFactory</span>
    <span class=3D"nc">List</span><span class=3D"o">&lt;</span><span class=
=3D"nc">String</span><span class=3D"o">&gt;</span> <span class=3D"nf">dynam=
icTestsWithInvalidReturnType</span><span class=3D"o">()</span> <span class=
=3D"o">{</span>
        <span class=3D"k">return</span> <span class=3D"nc">Arrays</span><sp=
an class=3D"o">.</span><span class=3D"na">asList</span><span class=3D"o">(<=
/span><span class=3D"s">"Hello"</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@TestFactory</span>
    <span class=3D"nc">Collection</span><span class=3D"o">&lt;</span><span =
class=3D"nc">DynamicTest</span><span class=3D"o">&gt;</span> <span class=3D=
"nf">dynamicTestsFromCollection</span><span class=3D"o">()</span> <span cla=
ss=3D"o">{</span>
        <span class=3D"k">return</span> <span class=3D"nc">Arrays</span><sp=
an class=3D"o">.</span><span class=3D"na">asList</span><span class=3D"o">(<=
/span>
            <span class=3D"n">dynamicTest</span><span class=3D"o">(</span><=
span class=3D"s">"1st dynamic test"</span><span class=3D"o">,</span> <span =
class=3D"o">()</span> <span class=3D"o">-&gt;</span> <span class=3D"n">asse=
rtTrue</span><span class=3D"o">(</span><span class=3D"n">isPalindrome</span=
><span class=3D"o">(</span><span class=3D"s">"madam"</span><span class=3D"o=
">))),</span>
            <span class=3D"n">dynamicTest</span><span class=3D"o">(</span><=
span class=3D"s">"2nd dynamic test"</span><span class=3D"o">,</span> <span =
class=3D"o">()</span> <span class=3D"o">-&gt;</span> <span class=3D"n">asse=
rtEquals</span><span class=3D"o">(</span><span class=3D"mi">4</span><span c=
lass=3D"o">,</span> <span class=3D"n">calculator</span><span class=3D"o">.<=
/span><span class=3D"na">multiply</span><span class=3D"o">(</span><span cla=
ss=3D"mi">2</span><span class=3D"o">,</span> <span class=3D"mi">2</span><sp=
an class=3D"o">)))</span>
        <span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@TestFactory</span>
    <span class=3D"nc">Iterable</span><span class=3D"o">&lt;</span><span cl=
ass=3D"nc">DynamicTest</span><span class=3D"o">&gt;</span> <span class=3D"n=
f">dynamicTestsFromIterable</span><span class=3D"o">()</span> <span class=
=3D"o">{</span>
        <span class=3D"k">return</span> <span class=3D"nc">Arrays</span><sp=
an class=3D"o">.</span><span class=3D"na">asList</span><span class=3D"o">(<=
/span>
            <span class=3D"n">dynamicTest</span><span class=3D"o">(</span><=
span class=3D"s">"3rd dynamic test"</span><span class=3D"o">,</span> <span =
class=3D"o">()</span> <span class=3D"o">-&gt;</span> <span class=3D"n">asse=
rtTrue</span><span class=3D"o">(</span><span class=3D"n">isPalindrome</span=
><span class=3D"o">(</span><span class=3D"s">"madam"</span><span class=3D"o=
">))),</span>
            <span class=3D"n">dynamicTest</span><span class=3D"o">(</span><=
span class=3D"s">"4th dynamic test"</span><span class=3D"o">,</span> <span =
class=3D"o">()</span> <span class=3D"o">-&gt;</span> <span class=3D"n">asse=
rtEquals</span><span class=3D"o">(</span><span class=3D"mi">4</span><span c=
lass=3D"o">,</span> <span class=3D"n">calculator</span><span class=3D"o">.<=
/span><span class=3D"na">multiply</span><span class=3D"o">(</span><span cla=
ss=3D"mi">2</span><span class=3D"o">,</span> <span class=3D"mi">2</span><sp=
an class=3D"o">)))</span>
        <span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@TestFactory</span>
    <span class=3D"nc">Iterator</span><span class=3D"o">&lt;</span><span cl=
ass=3D"nc">DynamicTest</span><span class=3D"o">&gt;</span> <span class=3D"n=
f">dynamicTestsFromIterator</span><span class=3D"o">()</span> <span class=
=3D"o">{</span>
        <span class=3D"k">return</span> <span class=3D"nc">Arrays</span><sp=
an class=3D"o">.</span><span class=3D"na">asList</span><span class=3D"o">(<=
/span>
            <span class=3D"n">dynamicTest</span><span class=3D"o">(</span><=
span class=3D"s">"5th dynamic test"</span><span class=3D"o">,</span> <span =
class=3D"o">()</span> <span class=3D"o">-&gt;</span> <span class=3D"n">asse=
rtTrue</span><span class=3D"o">(</span><span class=3D"n">isPalindrome</span=
><span class=3D"o">(</span><span class=3D"s">"madam"</span><span class=3D"o=
">))),</span>
            <span class=3D"n">dynamicTest</span><span class=3D"o">(</span><=
span class=3D"s">"6th dynamic test"</span><span class=3D"o">,</span> <span =
class=3D"o">()</span> <span class=3D"o">-&gt;</span> <span class=3D"n">asse=
rtEquals</span><span class=3D"o">(</span><span class=3D"mi">4</span><span c=
lass=3D"o">,</span> <span class=3D"n">calculator</span><span class=3D"o">.<=
/span><span class=3D"na">multiply</span><span class=3D"o">(</span><span cla=
ss=3D"mi">2</span><span class=3D"o">,</span> <span class=3D"mi">2</span><sp=
an class=3D"o">)))</span>
        <span class=3D"o">).</span><span class=3D"na">iterator</span><span =
class=3D"o">();</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@TestFactory</span>
    <span class=3D"nc">DynamicTest</span><span class=3D"o">[]</span> <span =
class=3D"nf">dynamicTestsFromArray</span><span class=3D"o">()</span> <span =
class=3D"o">{</span>
        <span class=3D"k">return</span> <span class=3D"k">new</span> <span =
class=3D"nc">DynamicTest</span><span class=3D"o">[]</span> <span class=3D"o=
">{</span>
            <span class=3D"n">dynamicTest</span><span class=3D"o">(</span><=
span class=3D"s">"7th dynamic test"</span><span class=3D"o">,</span> <span =
class=3D"o">()</span> <span class=3D"o">-&gt;</span> <span class=3D"n">asse=
rtTrue</span><span class=3D"o">(</span><span class=3D"n">isPalindrome</span=
><span class=3D"o">(</span><span class=3D"s">"madam"</span><span class=3D"o=
">))),</span>
            <span class=3D"n">dynamicTest</span><span class=3D"o">(</span><=
span class=3D"s">"8th dynamic test"</span><span class=3D"o">,</span> <span =
class=3D"o">()</span> <span class=3D"o">-&gt;</span> <span class=3D"n">asse=
rtEquals</span><span class=3D"o">(</span><span class=3D"mi">4</span><span c=
lass=3D"o">,</span> <span class=3D"n">calculator</span><span class=3D"o">.<=
/span><span class=3D"na">multiply</span><span class=3D"o">(</span><span cla=
ss=3D"mi">2</span><span class=3D"o">,</span> <span class=3D"mi">2</span><sp=
an class=3D"o">)))</span>
        <span class=3D"o">};</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@TestFactory</span>
    <span class=3D"nc">Stream</span><span class=3D"o">&lt;</span><span clas=
s=3D"nc">DynamicTest</span><span class=3D"o">&gt;</span> <span class=3D"nf"=
>dynamicTestsFromStream</span><span class=3D"o">()</span> <span class=3D"o"=
>{</span>
        <span class=3D"k">return</span> <span class=3D"nc">Stream</span><sp=
an class=3D"o">.</span><span class=3D"na">of</span><span class=3D"o">(</spa=
n><span class=3D"s">"racecar"</span><span class=3D"o">,</span> <span class=
=3D"s">"radar"</span><span class=3D"o">,</span> <span class=3D"s">"mom"</sp=
an><span class=3D"o">,</span> <span class=3D"s">"dad"</span><span class=3D"=
o">)</span>
            <span class=3D"o">.</span><span class=3D"na">map</span><span cl=
ass=3D"o">(</span><span class=3D"n">text</span> <span class=3D"o">-&gt;</sp=
an> <span class=3D"n">dynamicTest</span><span class=3D"o">(</span><span cla=
ss=3D"n">text</span><span class=3D"o">,</span> <span class=3D"o">()</span> =
<span class=3D"o">-&gt;</span> <span class=3D"n">assertTrue</span><span cla=
ss=3D"o">(</span><span class=3D"n">isPalindrome</span><span class=3D"o">(</=
span><span class=3D"n">text</span><span class=3D"o">))));</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@TestFactory</span>
    <span class=3D"nc">Stream</span><span class=3D"o">&lt;</span><span clas=
s=3D"nc">DynamicTest</span><span class=3D"o">&gt;</span> <span class=3D"nf"=
>dynamicTestsFromIntStream</span><span class=3D"o">()</span> <span class=3D=
"o">{</span>
        <span class=3D"c1">// Generates tests for the first 10 even integer=
s.</span>
        <span class=3D"k">return</span> <span class=3D"nc">IntStream</span>=
<span class=3D"o">.</span><span class=3D"na">iterate</span><span class=3D"o=
">(</span><span class=3D"mi">0</span><span class=3D"o">,</span> <span class=
=3D"n">n</span> <span class=3D"o">-&gt;</span> <span class=3D"n">n</span> <=
span class=3D"o">+</span> <span class=3D"mi">2</span><span class=3D"o">).</=
span><span class=3D"na">limit</span><span class=3D"o">(</span><span class=
=3D"mi">10</span><span class=3D"o">)</span>
            <span class=3D"o">.</span><span class=3D"na">mapToObj</span><sp=
an class=3D"o">(</span><span class=3D"n">n</span> <span class=3D"o">-&gt;</=
span> <span class=3D"n">dynamicTest</span><span class=3D"o">(</span><span c=
lass=3D"s">"test"</span> <span class=3D"o">+</span> <span class=3D"n">n</sp=
an><span class=3D"o">,</span> <span class=3D"o">()</span> <span class=3D"o"=
>-&gt;</span> <span class=3D"n">assertTrue</span><span class=3D"o">(</span>=
<span class=3D"n">n</span> <span class=3D"o">%</span> <span class=3D"mi">2<=
/span> <span class=3D"o">=3D=3D</span> <span class=3D"mi">0</span><span cla=
ss=3D"o">)));</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@TestFactory</span>
    <span class=3D"nc">Stream</span><span class=3D"o">&lt;</span><span clas=
s=3D"nc">DynamicTest</span><span class=3D"o">&gt;</span> <span class=3D"nf"=
>generateRandomNumberOfTestsFromIterator</span><span class=3D"o">()</span> =
<span class=3D"o">{</span>

        <span class=3D"c1">// Generates random positive integers between 0 =
and 100 until</span>
        <span class=3D"c1">// a number evenly divisible by 7 is encountered=
.</span>
        <span class=3D"nc">Iterator</span><span class=3D"o">&lt;</span><spa=
n class=3D"nc">Integer</span><span class=3D"o">&gt;</span> <span class=3D"n=
">inputGenerator</span> <span class=3D"o">=3D</span> <span class=3D"k">new<=
/span> <span class=3D"nc">Iterator</span><span class=3D"o">&lt;</span><span=
 class=3D"nc">Integer</span><span class=3D"o">&gt;()</span> <span class=3D"=
o">{</span>

            <span class=3D"nc">Random</span> <span class=3D"n">random</span=
> <span class=3D"o">=3D</span> <span class=3D"k">new</span> <span class=3D"=
nc">Random</span><span class=3D"o">();</span>
            <span class=3D"kt">int</span> <span class=3D"n">current</span><=
span class=3D"o">;</span>

            <span class=3D"nd">@Override</span>
            <span class=3D"kd">public</span> <span class=3D"kt">boolean</sp=
an> <span class=3D"nf">hasNext</span><span class=3D"o">()</span> <span clas=
s=3D"o">{</span>
                <span class=3D"n">current</span> <span class=3D"o">=3D</spa=
n> <span class=3D"n">random</span><span class=3D"o">.</span><span class=3D"=
na">nextInt</span><span class=3D"o">(</span><span class=3D"mi">100</span><s=
pan class=3D"o">);</span>
                <span class=3D"k">return</span> <span class=3D"n">current</=
span> <span class=3D"o">%</span> <span class=3D"mi">7</span> <span class=3D=
"o">!=3D</span> <span class=3D"mi">0</span><span class=3D"o">;</span>
            <span class=3D"o">}</span>

            <span class=3D"nd">@Override</span>
            <span class=3D"kd">public</span> <span class=3D"nc">Integer</sp=
an> <span class=3D"nf">next</span><span class=3D"o">()</span> <span class=
=3D"o">{</span>
                <span class=3D"k">return</span> <span class=3D"n">current</=
span><span class=3D"o">;</span>
            <span class=3D"o">}</span>
        <span class=3D"o">};</span>

        <span class=3D"c1">// Generates display names like: input:5, input:=
37, input:85, etc.</span>
        <span class=3D"nc">Function</span><span class=3D"o">&lt;</span><spa=
n class=3D"nc">Integer</span><span class=3D"o">,</span> <span class=3D"nc">=
String</span><span class=3D"o">&gt;</span> <span class=3D"n">displayNameGen=
erator</span> <span class=3D"o">=3D</span> <span class=3D"o">(</span><span =
class=3D"n">input</span><span class=3D"o">)</span> <span class=3D"o">-&gt;<=
/span> <span class=3D"s">"input:"</span> <span class=3D"o">+</span> <span c=
lass=3D"n">input</span><span class=3D"o">;</span>

        <span class=3D"c1">// Executes tests based on the current input val=
ue.</span>
        <span class=3D"nc">ThrowingConsumer</span><span class=3D"o">&lt;</s=
pan><span class=3D"nc">Integer</span><span class=3D"o">&gt;</span> <span cl=
ass=3D"n">testExecutor</span> <span class=3D"o">=3D</span> <span class=3D"o=
">(</span><span class=3D"n">input</span><span class=3D"o">)</span> <span cl=
ass=3D"o">-&gt;</span> <span class=3D"n">assertTrue</span><span class=3D"o"=
>(</span><span class=3D"n">input</span> <span class=3D"o">%</span> <span cl=
ass=3D"mi">7</span> <span class=3D"o">!=3D</span> <span class=3D"mi">0</spa=
n><span class=3D"o">);</span>

        <span class=3D"c1">// Returns a stream of dynamic tests.</span>
        <span class=3D"k">return</span> <span class=3D"nc">DynamicTest</spa=
n><span class=3D"o">.</span><span class=3D"na">stream</span><span class=3D"=
o">(</span><span class=3D"n">inputGenerator</span><span class=3D"o">,</span=
> <span class=3D"n">displayNameGenerator</span><span class=3D"o">,</span> <=
span class=3D"n">testExecutor</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@TestFactory</span>
    <span class=3D"nc">Stream</span><span class=3D"o">&lt;</span><span clas=
s=3D"nc">DynamicTest</span><span class=3D"o">&gt;</span> <span class=3D"nf"=
>dynamicTestsFromStreamFactoryMethod</span><span class=3D"o">()</span> <spa=
n class=3D"o">{</span>
        <span class=3D"c1">// Stream of palindromes to check</span>
        <span class=3D"nc">Stream</span><span class=3D"o">&lt;</span><span =
class=3D"nc">String</span><span class=3D"o">&gt;</span> <span class=3D"n">i=
nputStream</span> <span class=3D"o">=3D</span> <span class=3D"nc">Stream</s=
pan><span class=3D"o">.</span><span class=3D"na">of</span><span class=3D"o"=
>(</span><span class=3D"s">"racecar"</span><span class=3D"o">,</span> <span=
 class=3D"s">"radar"</span><span class=3D"o">,</span> <span class=3D"s">"mo=
m"</span><span class=3D"o">,</span> <span class=3D"s">"dad"</span><span cla=
ss=3D"o">);</span>

        <span class=3D"c1">// Generates display names like: racecar is a pa=
lindrome</span>
        <span class=3D"nc">Function</span><span class=3D"o">&lt;</span><spa=
n class=3D"nc">String</span><span class=3D"o">,</span> <span class=3D"nc">S=
tring</span><span class=3D"o">&gt;</span> <span class=3D"n">displayNameGene=
rator</span> <span class=3D"o">=3D</span> <span class=3D"n">text</span> <sp=
an class=3D"o">-&gt;</span> <span class=3D"n">text</span> <span class=3D"o"=
>+</span> <span class=3D"s">" is a palindrome"</span><span class=3D"o">;</s=
pan>

        <span class=3D"c1">// Executes tests based on the current input val=
ue.</span>
        <span class=3D"nc">ThrowingConsumer</span><span class=3D"o">&lt;</s=
pan><span class=3D"nc">String</span><span class=3D"o">&gt;</span> <span cla=
ss=3D"n">testExecutor</span> <span class=3D"o">=3D</span> <span class=3D"n"=
>text</span> <span class=3D"o">-&gt;</span> <span class=3D"n">assertTrue</s=
pan><span class=3D"o">(</span><span class=3D"n">isPalindrome</span><span cl=
ass=3D"o">(</span><span class=3D"n">text</span><span class=3D"o">));</span>

        <span class=3D"c1">// Returns a stream of dynamic tests.</span>
        <span class=3D"k">return</span> <span class=3D"nc">DynamicTest</spa=
n><span class=3D"o">.</span><span class=3D"na">stream</span><span class=3D"=
o">(</span><span class=3D"n">inputStream</span><span class=3D"o">,</span> <=
span class=3D"n">displayNameGenerator</span><span class=3D"o">,</span> <spa=
n class=3D"n">testExecutor</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@TestFactory</span>
    <span class=3D"nc">Stream</span><span class=3D"o">&lt;</span><span clas=
s=3D"nc">DynamicTest</span><span class=3D"o">&gt;</span> <span class=3D"nf"=
>dynamicTestsFromStreamFactoryMethodWithNames</span><span class=3D"o">()</s=
pan> <span class=3D"o">{</span>
        <span class=3D"c1">// Stream of palindromes to check</span>
        <span class=3D"nc">Stream</span><span class=3D"o">&lt;</span><span =
class=3D"nc">Named</span><span class=3D"o">&lt;</span><span class=3D"nc">St=
ring</span><span class=3D"o">&gt;&gt;</span> <span class=3D"n">inputStream<=
/span> <span class=3D"o">=3D</span> <span class=3D"nc">Stream</span><span c=
lass=3D"o">.</span><span class=3D"na">of</span><span class=3D"o">(</span>
                <span class=3D"n">named</span><span class=3D"o">(</span><sp=
an class=3D"s">"racecar is a palindrome"</span><span class=3D"o">,</span> <=
span class=3D"s">"racecar"</span><span class=3D"o">),</span>
                <span class=3D"n">named</span><span class=3D"o">(</span><sp=
an class=3D"s">"radar is also a palindrome"</span><span class=3D"o">,</span=
> <span class=3D"s">"radar"</span><span class=3D"o">),</span>
                <span class=3D"n">named</span><span class=3D"o">(</span><sp=
an class=3D"s">"mom also seems to be a palindrome"</span><span class=3D"o">=
,</span> <span class=3D"s">"mom"</span><span class=3D"o">),</span>
                <span class=3D"n">named</span><span class=3D"o">(</span><sp=
an class=3D"s">"dad is yet another palindrome"</span><span class=3D"o">,</s=
pan> <span class=3D"s">"dad"</span><span class=3D"o">)</span>
            <span class=3D"o">);</span>

        <span class=3D"c1">// Returns a stream of dynamic tests.</span>
        <span class=3D"k">return</span> <span class=3D"nc">DynamicTest</spa=
n><span class=3D"o">.</span><span class=3D"na">stream</span><span class=3D"=
o">(</span><span class=3D"n">inputStream</span><span class=3D"o">,</span>
            <span class=3D"n">text</span> <span class=3D"o">-&gt;</span> <s=
pan class=3D"n">assertTrue</span><span class=3D"o">(</span><span class=3D"n=
">isPalindrome</span><span class=3D"o">(</span><span class=3D"n">text</span=
><span class=3D"o">)));</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@TestFactory</span>
    <span class=3D"nc">Stream</span><span class=3D"o">&lt;</span><span clas=
s=3D"nc">DynamicNode</span><span class=3D"o">&gt;</span> <span class=3D"nf"=
>dynamicTestsWithContainers</span><span class=3D"o">()</span> <span class=
=3D"o">{</span>
        <span class=3D"k">return</span> <span class=3D"nc">Stream</span><sp=
an class=3D"o">.</span><span class=3D"na">of</span><span class=3D"o">(</spa=
n><span class=3D"s">"A"</span><span class=3D"o">,</span> <span class=3D"s">=
"B"</span><span class=3D"o">,</span> <span class=3D"s">"C"</span><span clas=
s=3D"o">)</span>
            <span class=3D"o">.</span><span class=3D"na">map</span><span cl=
ass=3D"o">(</span><span class=3D"n">input</span> <span class=3D"o">-&gt;</s=
pan> <span class=3D"n">dynamicContainer</span><span class=3D"o">(</span><sp=
an class=3D"s">"Container "</span> <span class=3D"o">+</span> <span class=
=3D"n">input</span><span class=3D"o">,</span> <span class=3D"nc">Stream</sp=
an><span class=3D"o">.</span><span class=3D"na">of</span><span class=3D"o">=
(</span>
                <span class=3D"n">dynamicTest</span><span class=3D"o">(</sp=
an><span class=3D"s">"not null"</span><span class=3D"o">,</span> <span clas=
s=3D"o">()</span> <span class=3D"o">-&gt;</span> <span class=3D"n">assertNo=
tNull</span><span class=3D"o">(</span><span class=3D"n">input</span><span c=
lass=3D"o">)),</span>
                <span class=3D"n">dynamicContainer</span><span class=3D"o">=
(</span><span class=3D"s">"properties"</span><span class=3D"o">,</span> <sp=
an class=3D"nc">Stream</span><span class=3D"o">.</span><span class=3D"na">o=
f</span><span class=3D"o">(</span>
                    <span class=3D"n">dynamicTest</span><span class=3D"o">(=
</span><span class=3D"s">"length &gt; 0"</span><span class=3D"o">,</span> <=
span class=3D"o">()</span> <span class=3D"o">-&gt;</span> <span class=3D"n"=
>assertTrue</span><span class=3D"o">(</span><span class=3D"n">input</span><=
span class=3D"o">.</span><span class=3D"na">length</span><span class=3D"o">=
()</span> <span class=3D"o">&gt;</span> <span class=3D"mi">0</span><span cl=
ass=3D"o">)),</span>
                    <span class=3D"n">dynamicTest</span><span class=3D"o">(=
</span><span class=3D"s">"not empty"</span><span class=3D"o">,</span> <span=
 class=3D"o">()</span> <span class=3D"o">-&gt;</span> <span class=3D"n">ass=
ertFalse</span><span class=3D"o">(</span><span class=3D"n">input</span><spa=
n class=3D"o">.</span><span class=3D"na">isEmpty</span><span class=3D"o">()=
))</span>
                <span class=3D"o">))</span>
            <span class=3D"o">)));</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@TestFactory</span>
    <span class=3D"nc">DynamicNode</span> <span class=3D"nf">dynamicNodeSin=
gleTest</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"k">return</span> <span class=3D"nf">dynamicTest</spa=
n><span class=3D"o">(</span><span class=3D"s">"'pop' is a palindrome"</span=
><span class=3D"o">,</span> <span class=3D"o">()</span> <span class=3D"o">-=
&gt;</span> <span class=3D"n">assertTrue</span><span class=3D"o">(</span><s=
pan class=3D"n">isPalindrome</span><span class=3D"o">(</span><span class=3D=
"s">"pop"</span><span class=3D"o">)));</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@TestFactory</span>
    <span class=3D"nc">DynamicNode</span> <span class=3D"nf">dynamicNodeSin=
gleContainer</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"k">return</span> <span class=3D"nf">dynamicContainer=
</span><span class=3D"o">(</span><span class=3D"s">"palindromes"</span><spa=
n class=3D"o">,</span>
            <span class=3D"nc">Stream</span><span class=3D"o">.</span><span=
 class=3D"na">of</span><span class=3D"o">(</span><span class=3D"s">"racecar=
"</span><span class=3D"o">,</span> <span class=3D"s">"radar"</span><span cl=
ass=3D"o">,</span> <span class=3D"s">"mom"</span><span class=3D"o">,</span>=
 <span class=3D"s">"dad"</span><span class=3D"o">)</span>
                <span class=3D"o">.</span><span class=3D"na">map</span><spa=
n class=3D"o">(</span><span class=3D"n">text</span> <span class=3D"o">-&gt;=
</span> <span class=3D"n">dynamicTest</span><span class=3D"o">(</span><span=
 class=3D"n">text</span><span class=3D"o">,</span> <span class=3D"o">()</sp=
an> <span class=3D"o">-&gt;</span> <span class=3D"n">assertTrue</span><span=
 class=3D"o">(</span><span class=3D"n">isPalindrome</span><span class=3D"o"=
>(</span><span class=3D"n">text</span><span class=3D"o">)))</span>
        <span class=3D"o">));</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-dynamic-tests-uri-test-source"><a class=3D"anchor" =
href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-dyn=
amic-tests-uri-test-source"></a>2.17.2. URI Test Sources for Dynamic Tests<=
/h4>
<div class=3D"paragraph">
<p>The JUnit Platform provides <code>TestSource</code>, a representation of=
 the source of a test or
container used to navigate to its location by IDEs and build tools.</p>
</div>
<div class=3D"paragraph">
<p>The <code>TestSource</code> for a dynamic test or dynamic container can =
be constructed from a
<code>java.net.URI</code> which can be supplied via the <code>DynamicTest.d=
ynamicTest(String, URI,
Executable)</code> or <code>DynamicContainer.dynamicContainer(String, URI, =
Stream)</code> factory method,
respectively. The <code>URI</code> will be converted to one of the followin=
g <code>TestSource</code>
implementations.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><code>ClasspathResourceSource</code> </dt>
<dd>
<p>If the <code>URI</code> contains the <code>classpath</code> scheme=E2=80=
=89=E2=80=94=E2=80=89for example,
<code>classpath:/test/foo.xml?line=3D20,column=3D2</code>.</p>
</dd>
<dt class=3D"hdlist1"><code>DirectorySource</code> </dt>
<dd>
<p>If the <code>URI</code> represents a directory present in the file syste=
m.</p>
</dd>
<dt class=3D"hdlist1"><code>FileSource</code> </dt>
<dd>
<p>If the <code>URI</code> represents a file present in the file system.</p=
>
</dd>
<dt class=3D"hdlist1"><code>MethodSource</code> </dt>
<dd>
<p>If the <code>URI</code> contains the <code>method</code> scheme and the =
fully qualified method name (FQMN)=E2=80=89=E2=80=94=E2=80=89for example, <=
code>method:org.junit.Foo#bar(java.lang.String, java.lang.String[])</code>.=
 Please
refer to the Javadoc for <code>DiscoverySelectors.selectMethod(String)</cod=
e> for the supported
formats for a FQMN.</p>
</dd>
<dt class=3D"hdlist1"><code>ClassSource</code> </dt>
<dd>
<p>If the <code>URI</code> contains the <code>class</code> scheme and the f=
ully qualified class name=E2=80=89=E2=80=94=E2=80=89for example, <code>clas=
s:org.junit.Foo?line=3D42</code>.</p>
</dd>
<dt class=3D"hdlist1"><code>UriSource</code> </dt>
<dd>
<p>If none of the above <code>TestSource</code> implementations are applica=
ble.</p>
</dd>
</dl>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"writing-tests-declarative-timeouts"><a class=3D"anchor" href=3D"h=
ttps://junit.org/junit5/docs/current/user-guide/#writing-tests-declarative-=
timeouts"></a>2.18. Timeouts</h3>
<div class=3D"paragraph">
<p>The <code>@Timeout</code> annotation allows one to declare that a test, =
test factory, test template,
or lifecycle method should fail if its execution time exceeds a given durat=
ion. The time
unit for the duration defaults to seconds but is configurable.</p>
</div>
<div class=3D"paragraph">
<p>The following example shows how <code>@Timeout</code> is applied to life=
cycle and test methods.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kd">=
class</span> <span class=3D"nc">TimeoutDemo</span> <span class=3D"o">{</spa=
n>

    <span class=3D"nd">@BeforeEach</span>
    <span class=3D"nd">@Timeout</span><span class=3D"o">(</span><span class=
=3D"mi">5</span><span class=3D"o">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">setUp</span><span cla=
ss=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"c1">// fails if execution time exceeds 5 seconds</sp=
an>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"nd">@Timeout</span><span class=3D"o">(</span><span class=
=3D"n">value</span> <span class=3D"o">=3D</span> <span class=3D"mi">100</sp=
an><span class=3D"o">,</span> <span class=3D"n">unit</span> <span class=3D"=
o">=3D</span> <span class=3D"nc">TimeUnit</span><span class=3D"o">.</span><=
span class=3D"na">MILLISECONDS</span><span class=3D"o">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">failsIfExecutionTimeE=
xceeds100Milliseconds</span><span class=3D"o">()</span> <span class=3D"o">{=
</span>
        <span class=3D"c1">// fails if execution time exceeds 100 milliseco=
nds</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Contrary to the <code>assertTimeoutPreemptively()</code> assertion, the =
execution of the annotated
method proceeds in the main thread of the test. If the timeout is exceeded,=
 the main
thread is interrupted from another thread. This is done to ensure interoper=
ability with
frameworks such as Spring that make use of mechanisms that are sensitive to=
 the currently
running thread =E2=80=94 for example, <code>ThreadLocal</code> transaction =
management.</p>
</div>
<div class=3D"paragraph">
<p>To apply the same timeout to all test methods within a test class and al=
l of its <code>@Nested</code>
classes, you can declare the <code>@Timeout</code> annotation at the class =
level. It will then be
applied to all test, test factory, and test template methods within that cl=
ass and its
<code>@Nested</code> classes unless overridden by a <code>@Timeout</code> a=
nnotation on a specific method or
<code>@Nested</code> class. Please note that <code>@Timeout</code> annotati=
ons declared at the class level are
not applied to lifecycle methods.</p>
</div>
<div class=3D"paragraph">
<p>Declaring <code>@Timeout</code> on a <code>@TestFactory</code> method ch=
ecks that the factory method returns
within the specified duration but does not verify the execution time of eac=
h individual
<code>DynamicTest</code> generated by the factory. Please use
<code>assertTimeout()</code> or <code>assertTimeoutPreemptively()</code> fo=
r that purpose.</p>
</div>
<div class=3D"paragraph">
<p>If <code>@Timeout</code> is present on a <code>@TestTemplate</code> meth=
od =E2=80=94 for example, a <code>@RepeatedTest</code> or
<code>@ParameterizedTest</code> =E2=80=94 each invocation will have the giv=
en timeout applied to it.</p>
</div>
<div class=3D"paragraph">
<p>The following <a href=3D"https://junit.org/junit5/docs/current/user-guid=
e/#running-tests-config-params">configuration parameters</a> can be used to
specify global timeouts for all methods of a certain category unless they o=
r an enclosing
test class is annotated with <code>@Timeout</code>:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><code>junit.jupiter.execution.timeout.default</code><=
/dt>
<dd>
<p>Default timeout for all testable and lifecycle methods</p>
</dd>
<dt class=3D"hdlist1"><code>junit.jupiter.execution.timeout.testable.method=
.default</code></dt>
<dd>
<p>Default timeout for all testable methods</p>
</dd>
<dt class=3D"hdlist1"><code>junit.jupiter.execution.timeout.test.method.def=
ault</code></dt>
<dd>
<p>Default timeout for <code>@Test</code> methods</p>
</dd>
<dt class=3D"hdlist1"><code>junit.jupiter.execution.timeout.testtemplate.me=
thod.default</code></dt>
<dd>
<p>Default timeout for <code>@TestTemplate</code> methods</p>
</dd>
<dt class=3D"hdlist1"><code>junit.jupiter.execution.timeout.testfactory.met=
hod.default</code></dt>
<dd>
<p>Default timeout for <code>@TestFactory</code> methods</p>
</dd>
<dt class=3D"hdlist1"><code>junit.jupiter.execution.timeout.lifecycle.metho=
d.default</code></dt>
<dd>
<p>Default timeout for all lifecycle methods</p>
</dd>
<dt class=3D"hdlist1"><code>junit.jupiter.execution.timeout.beforeall.metho=
d.default</code></dt>
<dd>
<p>Default timeout for <code>@BeforeAll</code> methods</p>
</dd>
<dt class=3D"hdlist1"><code>junit.jupiter.execution.timeout.beforeeach.meth=
od.default</code></dt>
<dd>
<p>Default timeout for <code>@BeforeEach</code> methods</p>
</dd>
<dt class=3D"hdlist1"><code>junit.jupiter.execution.timeout.aftereach.metho=
d.default</code></dt>
<dd>
<p>Default timeout for <code>@AfterEach</code> methods</p>
</dd>
<dt class=3D"hdlist1"><code>junit.jupiter.execution.timeout.afterall.method=
.default</code></dt>
<dd>
<p>Default timeout for <code>@AfterAll</code> methods</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>More specific configuration parameters override less specific ones. For =
example,
<code>junit.jupiter.execution.timeout.test.method.default</code> overrides
<code>junit.jupiter.execution.timeout.testable.method.default</code> which =
overrides
<code>junit.jupiter.execution.timeout.default</code>.</p>
</div>
<div class=3D"paragraph">
<p>The values of such configuration parameters must be in the following, ca=
se-insensitive
format: <code>&lt;number&gt; [ns|=CE=BCs|ms|s|m|h|d]</code>. The space betw=
een the number and the unit may be
omitted. Specifying no unit is equivalent to using seconds.</p>
</div>
<table class=3D"tableblock frame-all grid-all stretch">
<caption class=3D"title">Table 1. Example timeout configuration parameter v=
alues</caption>
<colgroup>
<col style=3D"width: 20%;">
<col style=3D"width: 80%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Parameter value</th>
<th class=3D"tableblock halign-left valign-top">Equivalent annotation</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>42</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@Timeout(42)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>42 ns</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@Timeout(value =3D 42, unit =3D NANOSECONDS)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>42 =CE=BCs</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@Timeout(value =3D 42, unit =3D MICROSECONDS)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>42 ms</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@Timeout(value =3D 42, unit =3D MILLISECONDS)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>42 s</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@Timeout(value =3D 42, unit =3D SECONDS)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>42 m</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@Timeout(value =3D 42, unit =3D MINUTES)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>42 h</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@Timeout(value =3D 42, unit =3D HOURS)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>42 d</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>@Timeout(value =3D 42, unit =3D DAYS)</code></p></td>
</tr>
</tbody>
</table>
<div class=3D"sect3">
<h4 id=3D"writing-tests-declarative-timeouts-polling"><a class=3D"anchor" h=
ref=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-decl=
arative-timeouts-polling"></a>2.18.1. Using @Timeout for Polling Tests</h4>
<div class=3D"paragraph">
<p>When dealing with asynchronous code, it is common to write tests that po=
ll while waiting
for something to happen before performing any assertions. In some cases you=
 can rewrite
the logic to use a <code>CountDownLatch</code> or another synchronization m=
echanism, but sometimes
that is not possible =E2=80=94 for example, if the subject under test sends=
 a message to a channel
in an external message broker and assertions cannot be performed until the =
message has
been successfully sent through the channel. Asynchronous tests like these r=
equire some
form of timeout to ensure they don=E2=80=99t hang the test suite by executi=
ng indefinitely, as
would be the case if an asynchronous message never gets successfully delive=
red.</p>
</div>
<div class=3D"paragraph">
<p>By configuring a timeout for an asynchronous test that polls, you can en=
sure that the test
does not execute indefinitely. The following example demonstrates how to ac=
hieve this with
JUnit Jupiter=E2=80=99s <code>@Timeout</code> annotation. This technique ca=
n be used to implement "poll
until" logic very easily.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@Test</span>
<span class=3D"nd">@Timeout</span><span class=3D"o">(</span><span class=3D"=
mi">5</span><span class=3D"o">)</span> <span class=3D"c1">// Poll at most 5=
 seconds</span>
<span class=3D"kt">void</span> <span class=3D"nf">pollUntil</span><span cla=
ss=3D"o">()</span> <span class=3D"kd">throws</span> <span class=3D"nc">Inte=
rruptedException</span> <span class=3D"o">{</span>
    <span class=3D"k">while</span> <span class=3D"o">(</span><span class=3D=
"n">asynchronousResultNotAvailable</span><span class=3D"o">())</span> <span=
 class=3D"o">{</span>
        <span class=3D"nc">Thread</span><span class=3D"o">.</span><span cla=
ss=3D"na">sleep</span><span class=3D"o">(</span><span class=3D"mi">250</spa=
n><span class=3D"o">);</span> <span class=3D"c1">// custom poll interval</s=
pan>
    <span class=3D"o">}</span>
    <span class=3D"c1">// Obtain the asynchronous result and perform assert=
ions</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
If you need more control over polling intervals and greater flexibility wit=
h
asynchronous tests, consider using a dedicated library such as
<a href=3D"https://github.com/awaitility/awaitility">Awaitility</a>.
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-declarative-timeouts-mode"><a class=3D"anchor" href=
=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-declara=
tive-timeouts-mode"></a>2.18.2. Disable @Timeout Globally</h4>
<div class=3D"paragraph">
<p>When stepping through your code in a debug session, a fixed timeout limi=
t may influence
the result of the test, e.g. mark the test as failed although all assertion=
s were met.</p>
</div>
<div class=3D"paragraph">
<p>JUnit Jupiter supports the <code>junit.jupiter.execution.timeout.mode</c=
ode> configuration parameter
to configure when timeouts are applied. There are three modes: <code>enable=
d</code>, <code>disabled</code>,
and <code>disabled_on_debug</code>. The default mode is <code>enabled</code=
>.
A VM runtime is considered to run in debug mode when one of its input param=
eters starts
with <code>-agentlib:jdwp</code>. This heuristic is queried by the <code>di=
sabled_on_debug</code> mode.</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"writing-tests-parallel-execution"><a class=3D"anchor" href=3D"htt=
ps://junit.org/junit5/docs/current/user-guide/#writing-tests-parallel-execu=
tion"></a>2.19. Parallel Execution</h3>
<div class=3D"admonitionblock warning">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-warning" title=3D"Warning"></i>
</td>
<td class=3D"content">
<div class=3D"title">Parallel test execution is an experimental feature</di=
v>
You=E2=80=99re invited to give it a try and provide feedback to the JUnit t=
eam so they
can improve and eventually <a href=3D"https://junit.org/junit5/docs/current=
/user-guide/#api-evolution">promote</a> this feature.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>By default, JUnit Jupiter tests are run sequentially in a single thread.=
 Running tests in
parallel=E2=80=89=E2=80=94=E2=80=89for example, to speed up execution=E2=80=
=89=E2=80=94=E2=80=89is available as an opt-in feature since
version 5.3. To enable parallel execution, set the
<code>junit.jupiter.execution.parallel.enabled</code> configuration paramet=
er to <code>true</code>=E2=80=89=E2=80=94=E2=80=89for
example, in <code>junit-platform.properties</code> (see <a href=3D"https://=
junit.org/junit5/docs/current/user-guide/#running-tests-config-params">Conf=
iguration Parameters</a> for other
options).</p>
</div>
<div class=3D"paragraph">
<p>Please note that enabling this property is only the first step required =
to execute tests
in parallel. If enabled, test classes and methods will still be executed se=
quentially by
default. Whether or not a node in the test tree is executed concurrently is=
 controlled by
its execution mode. The following two modes are available.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><code>SAME_THREAD</code></dt>
<dd>
<p>Force execution in the same thread used by the parent. For example, when=
 used on a test
method, the test method will be executed in the same thread as any <code>@B=
eforeAll</code> or
<code>@AfterAll</code> methods of the containing test class.</p>
</dd>
<dt class=3D"hdlist1"><code>CONCURRENT</code></dt>
<dd>
<p>Execute concurrently unless a resource lock forces execution in the same=
 thread.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>By default, nodes in the test tree use the <code>SAME_THREAD</code> exec=
ution mode. You can change
the default by setting the <code>junit.jupiter.execution.parallel.mode.defa=
ult</code> configuration
parameter. Alternatively, you can use the <code><a href=3D"https://junit.or=
g/junit5/docs/current/api/org.junit.jupiter.api/org/junit/jupiter/api/paral=
lel/Execution.html">@Execution</a></code> annotation to change the
execution mode for the annotated element and its subelements (if any) which=
 allows you to
activate parallel execution for individual test classes, one by one.</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">Configuration parameters to execute all tests in paral=
lel</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"properties"><span class=
=3D"py">junit.jupiter.execution.parallel.enabled</span> <span class=3D"p">=
=3D</span> <span class=3D"s">true</span>
<span class=3D"py">junit.jupiter.execution.parallel.mode.default</span> <sp=
an class=3D"p">=3D</span> <span class=3D"s">concurrent</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The default execution mode is applied to all nodes of the test tree with=
 a few notable
exceptions, namely test classes that use the <code>Lifecycle.PER_CLASS</cod=
e> mode or a
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupite=
r.api/org/junit/jupiter/api/MethodOrderer.html">MethodOrderer</a></code> (e=
xcept for <code><a href=3D"https://junit.org/junit5/docs/current/api/org.ju=
nit.jupiter.api/org/junit/jupiter/api/MethodOrderer.Random.html">MethodOrde=
rer.Random</a></code>). In the former case, test authors
have to ensure that the test class is thread-safe; in the latter, concurren=
t execution
might conflict with the configured execution order. Thus, in both cases, te=
st methods in
such test classes are only executed concurrently if the <code>@Execution(CO=
NCURRENT)</code>
annotation is present on the test class or method.</p>
</div>
<div class=3D"paragraph">
<p>All nodes of the test tree that are configured with the <code>CONCURRENT=
</code> execution mode will
be executed fully in parallel according to the provided
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-=
parallel-execution-config">configuration</a> while observing the
declarative <a href=3D"https://junit.org/junit5/docs/current/user-guide/#wr=
iting-tests-parallel-execution-synchronization">synchronization</a>
mechanism. Please note that <a href=3D"https://junit.org/junit5/docs/curren=
t/user-guide/#running-tests-capturing-output">Capturing Standard Output/Err=
or</a> needs to be enabled
separately.</p>
</div>
<div class=3D"paragraph">
<p>In addition, you can configure the default execution mode for top-level =
classes by setting
the <code>junit.jupiter.execution.parallel.mode.classes.default</code> conf=
iguration parameter. By
combining both configuration parameters, you can configure classes to run i=
n parallel but
their methods in the same thread:</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">Configuration parameters to execute top-level classes =
in parallel but methods in same thread</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"properties"><span class=
=3D"py">junit.jupiter.execution.parallel.enabled</span> <span class=3D"p">=
=3D</span> <span class=3D"s">true</span>
<span class=3D"py">junit.jupiter.execution.parallel.mode.default</span> <sp=
an class=3D"p">=3D</span> <span class=3D"s">same_thread</span>
<span class=3D"py">junit.jupiter.execution.parallel.mode.classes.default</s=
pan> <span class=3D"p">=3D</span> <span class=3D"s">concurrent</span></code=
></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The opposite combination will run all methods within one class in parall=
el, but top-level
classes will run sequentially:</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">Configuration parameters to execute top-level classes =
sequentially but their methods in parallel</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"properties"><span class=
=3D"py">junit.jupiter.execution.parallel.enabled</span> <span class=3D"p">=
=3D</span> <span class=3D"s">true</span>
<span class=3D"py">junit.jupiter.execution.parallel.mode.default</span> <sp=
an class=3D"p">=3D</span> <span class=3D"s">concurrent</span>
<span class=3D"py">junit.jupiter.execution.parallel.mode.classes.default</s=
pan> <span class=3D"p">=3D</span> <span class=3D"s">same_thread</span></cod=
e></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The following diagram illustrates how the execution of two top-level tes=
t classes <code>A</code> and
<code>B</code> with two test methods per class behaves for all four combina=
tions of
<code>junit.jupiter.execution.parallel.mode.default</code> and
<code>junit.jupiter.execution.parallel.mode.classes.default</code> (see lab=
els in first column).</p>
</div>
<div class=3D"imageblock">
<div class=3D"content">
<img src=3D"https://junit.org/junit5/docs/current/user-guide/images/writing=
-tests_execution_mode.svg" alt=3D"writing tests execution mode">
</div>
<div class=3D"title">Default execution mode configuration combinations</div=
>
</div>
<div class=3D"paragraph">
<p>If the <code>junit.jupiter.execution.parallel.mode.classes.default</code=
> configuration parameter is
not explicitly set, the value for <code>junit.jupiter.execution.parallel.mo=
de.default</code> will be
used instead.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-parallel-execution-config"><a class=3D"anchor" href=
=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-paralle=
l-execution-config"></a>2.19.1. Configuration</h4>
<div class=3D"paragraph">
<p>Properties such as the desired parallelism and the maximum pool size can=
 be configured
using a <code><a href=3D"https://junit.org/junit5/docs/current/api/org.juni=
t.platform.engine/org/junit/platform/engine/support/hierarchical/ParallelEx=
ecutionConfigurationStrategy.html">ParallelExecutionConfigurationStrategy</=
a></code>. The JUnit Platform provides two
implementations out of the box: <code>dynamic</code> and <code>fixed</code>=
. Alternatively, you may implement a
<code>custom</code> strategy.</p>
</div>
<div class=3D"paragraph">
<p>To select a strategy, set the <code>junit.jupiter.execution.parallel.con=
fig.strategy</code>
configuration parameter to one of the following options.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><code>dynamic</code></dt>
<dd>
<p>Computes the desired parallelism based on the number of available proces=
sors/cores
multiplied by the <code>junit.jupiter.execution.parallel.config.dynamic.fac=
tor</code>
configuration parameter (defaults to <code>1</code>).</p>
</dd>
<dt class=3D"hdlist1"><code>fixed</code></dt>
<dd>
<p>Uses the mandatory <code>junit.jupiter.execution.parallel.config.fixed.p=
arallelism</code>
configuration parameter as the desired parallelism.</p>
</dd>
<dt class=3D"hdlist1"><code>custom</code></dt>
<dd>
<p>Allows you to specify a custom <code><a href=3D"https://junit.org/junit5=
/docs/current/api/org.junit.platform.engine/org/junit/platform/engine/suppo=
rt/hierarchical/ParallelExecutionConfigurationStrategy.html">ParallelExecut=
ionConfigurationStrategy</a></code>
implementation via the mandatory <code>junit.jupiter.execution.parallel.con=
fig.custom.class</code>
configuration parameter to determine the desired configuration.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>If no configuration strategy is set, JUnit Jupiter uses the <code>dynami=
c</code> configuration
strategy with a factor of <code>1</code>. Consequently, the desired paralle=
lism will be equal to the
number of available processors/cores.</p>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
<div class=3D"title">Parallelism does not imply maximum number of concurren=
t threads</div>
JUnit Jupiter does not guarantee that the number of concurrently executing =
tests
will not exceed the configured parallelism. For example, when using one of =
the
synchronization mechanisms described in the next section, the <code>ForkJoi=
nPool</code> that is used
behind the scenes may spawn additional threads to ensure execution continue=
s with
sufficient parallelism. Thus, if you require such guarantees in a test clas=
s, please use
your own means of controlling concurrency.
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-parallel-execution-synchronization"><a class=3D"anc=
hor" href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-test=
s-parallel-execution-synchronization"></a>2.19.2. Synchronization</h4>
<div class=3D"paragraph">
<p>In addition to controlling the execution mode using the <code><a href=3D=
"https://junit.org/junit5/docs/current/api/org.junit.jupiter.api/org/junit/=
jupiter/api/parallel/Execution.html">@Execution</a></code> annotation, JUni=
t
Jupiter provides another annotation-based declarative synchronization mecha=
nism. The
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupite=
r.api/org/junit/jupiter/api/parallel/ResourceLock.html">@ResourceLock</a></=
code> annotation allows you to declare that a test class or method uses a
specific shared resource that requires synchronized access to ensure reliab=
le test
execution. The shared resource is identified by a unique name which is a <c=
ode>String</code>. The
name can be user-defined or one of the predefined constants in <code><a hre=
f=3D"https://junit.org/junit5/docs/current/api/org.junit.jupiter.api/org/ju=
nit/jupiter/api/parallel/Resources.html">Resources</a></code>:
<code>SYSTEM_PROPERTIES</code>, <code>SYSTEM_OUT</code>, <code>SYSTEM_ERR</=
code>, <code>LOCALE</code>, or <code>TIME_ZONE</code>.</p>
</div>
<div class=3D"paragraph">
<p>If the tests in the following example were run in parallel <em>without</=
em> the use of
<a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupiter.api/=
org/junit/jupiter/api/parallel/ResourceLock.html">@ResourceLock</a>, they w=
ould be <em>flaky</em>. Sometimes they would pass, and at other times they
would fail due to the inherent race condition of writing and then reading t=
he same JVM
System Property.</p>
</div>
<div class=3D"paragraph">
<p>When access to shared resources is declared using the <code><a href=3D"h=
ttps://junit.org/junit5/docs/current/api/org.junit.jupiter.api/org/junit/ju=
piter/api/parallel/ResourceLock.html">@ResourceLock</a></code> annotation, =
the
JUnit Jupiter engine uses this information to ensure that no conflicting te=
sts are run in
parallel.</p>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
<div class=3D"title">Running tests in isolation</div>
<div class=3D"paragraph">
<p>If most of your test classes can be run in parallel without any synchron=
ization but you
have some test classes that need to run in isolation, you can mark the latt=
er with the
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupite=
r.api/org/junit/jupiter/api/parallel/Isolated.html">@Isolated</a></code> an=
notation. Tests in such classes are executed sequentially without any other
tests running at the same time.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>In addition to the <code>String</code> that uniquely identifies the shar=
ed resource, you may specify
an access mode. Two tests that require <code>READ</code> access to a shared=
 resource may run in
parallel with each other but not while any other test that requires <code>R=
EAD_WRITE</code> access
to the same shared resource is running.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@Execution</span><span class=3D"o">(</span><span class=3D"no">CONCURRENT</s=
pan><span class=3D"o">)</span>
<span class=3D"kd">class</span> <span class=3D"nc">SharedResourcesDemo</spa=
n> <span class=3D"o">{</span>

    <span class=3D"kd">private</span> <span class=3D"nc">Properties</span> =
<span class=3D"n">backup</span><span class=3D"o">;</span>

    <span class=3D"nd">@BeforeEach</span>
    <span class=3D"kt">void</span> <span class=3D"nf">backup</span><span cl=
ass=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">backup</span> <span class=3D"o">=3D</span> <span =
class=3D"k">new</span> <span class=3D"nc">Properties</span><span class=3D"o=
">();</span>
        <span class=3D"n">backup</span><span class=3D"o">.</span><span clas=
s=3D"na">putAll</span><span class=3D"o">(</span><span class=3D"nc">System</=
span><span class=3D"o">.</span><span class=3D"na">getProperties</span><span=
 class=3D"o">());</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@AfterEach</span>
    <span class=3D"kt">void</span> <span class=3D"nf">restore</span><span c=
lass=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"nc">System</span><span class=3D"o">.</span><span cla=
ss=3D"na">setProperties</span><span class=3D"o">(</span><span class=3D"n">b=
ackup</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"nd">@ResourceLock</span><span class=3D"o">(</span><span =
class=3D"n">value</span> <span class=3D"o">=3D</span> <span class=3D"no">SY=
STEM_PROPERTIES</span><span class=3D"o">,</span> <span class=3D"n">mode</sp=
an> <span class=3D"o">=3D</span> <span class=3D"no">READ</span><span class=
=3D"o">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">customPropertyIsNotSe=
tByDefault</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">assertNull</span><span class=3D"o">(</span><span =
class=3D"nc">System</span><span class=3D"o">.</span><span class=3D"na">getP=
roperty</span><span class=3D"o">(</span><span class=3D"s">"my.prop"</span><=
span class=3D"o">));</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"nd">@ResourceLock</span><span class=3D"o">(</span><span =
class=3D"n">value</span> <span class=3D"o">=3D</span> <span class=3D"no">SY=
STEM_PROPERTIES</span><span class=3D"o">,</span> <span class=3D"n">mode</sp=
an> <span class=3D"o">=3D</span> <span class=3D"no">READ_WRITE</span><span =
class=3D"o">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">canSetCustomPropertyT=
oApple</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"nc">System</span><span class=3D"o">.</span><span cla=
ss=3D"na">setProperty</span><span class=3D"o">(</span><span class=3D"s">"my=
.prop"</span><span class=3D"o">,</span> <span class=3D"s">"apple"</span><sp=
an class=3D"o">);</span>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"s">"apple"</span><span class=3D"o">,</span> <span class=3D"nc">S=
ystem</span><span class=3D"o">.</span><span class=3D"na">getProperty</span>=
<span class=3D"o">(</span><span class=3D"s">"my.prop"</span><span class=3D"=
o">));</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"nd">@ResourceLock</span><span class=3D"o">(</span><span =
class=3D"n">value</span> <span class=3D"o">=3D</span> <span class=3D"no">SY=
STEM_PROPERTIES</span><span class=3D"o">,</span> <span class=3D"n">mode</sp=
an> <span class=3D"o">=3D</span> <span class=3D"no">READ_WRITE</span><span =
class=3D"o">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">canSetCustomPropertyT=
oBanana</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"nc">System</span><span class=3D"o">.</span><span cla=
ss=3D"na">setProperty</span><span class=3D"o">(</span><span class=3D"s">"my=
.prop"</span><span class=3D"o">,</span> <span class=3D"s">"banana"</span><s=
pan class=3D"o">);</span>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"s">"banana"</span><span class=3D"o">,</span> <span class=3D"nc">=
System</span><span class=3D"o">.</span><span class=3D"na">getProperty</span=
><span class=3D"o">(</span><span class=3D"s">"my.prop"</span><span class=3D=
"o">));</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"writing-tests-built-in-extensions"><a class=3D"anchor" href=3D"ht=
tps://junit.org/junit5/docs/current/user-guide/#writing-tests-built-in-exte=
nsions"></a>2.20. Built-in Extensions</h3>
<div class=3D"paragraph">
<p>While the JUnit team encourages reusable extensions to be packaged and m=
aintained in
separate libraries, the JUnit Jupiter API artifact includes a few user-faci=
ng extension
implementations that are considered so generally useful that users shouldn=
=E2=80=99t have to add
another dependency.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-tests-built-in-extensions-TempDirectory"><a class=3D"anch=
or" href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests=
-built-in-extensions-TempDirectory"></a>2.20.1. The TempDirectory Extension=
</h4>
<div class=3D"admonitionblock warning">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-warning" title=3D"Warning"></i>
</td>
<td class=3D"content">
<div class=3D"title"><code>@TempDir</code> is an experimental feature</div>
You=E2=80=99re invited to give it a try and provide feedback to the JUnit t=
eam so they
can improve and eventually <a href=3D"https://junit.org/junit5/docs/current=
/user-guide/#api-evolution">promote</a> this feature.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>The built-in <code><a href=3D"https://github.com/junit-team/junit5/tree/=
r5.8.2/junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/extensio=
n/TempDirectory.java">TempDirectory</a></code> extension is used to create =
and clean up a temporary
directory for an individual test or all tests in a test class. It is regist=
ered by
default. To use it, annotate a field of type <code>java.nio.file.Path</code=
> or <code>java.io.File</code> with
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupite=
r.api/org/junit/jupiter/api/io/TempDir.html">@TempDir</a></code> or add a p=
arameter of type <code>java.nio.file.Path</code> or <code>java.io.File</cod=
e> annotated
with <code>@TempDir</code> to a lifecycle method or test method.</p>
</div>
<div class=3D"paragraph">
<p>For example, the following test declares a parameter annotated with <cod=
e>@TempDir</code> for a
single test method, creates and writes to a file in the temporary directory=
, and checks
its content.</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">A test method that requires a temporary directory</div=
>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@Test</span>
<span class=3D"kt">void</span> <span class=3D"nf">writeItemsToFile</span><s=
pan class=3D"o">(</span><span class=3D"nd">@TempDir</span> <span class=3D"n=
c">Path</span> <span class=3D"n">tempDir</span><span class=3D"o">)</span> <=
span class=3D"kd">throws</span> <span class=3D"nc">IOException</span> <span=
 class=3D"o">{</span>
    <span class=3D"nc">Path</span> <span class=3D"n">file</span> <span clas=
s=3D"o">=3D</span> <span class=3D"n">tempDir</span><span class=3D"o">.</spa=
n><span class=3D"na">resolve</span><span class=3D"o">(</span><span class=3D=
"s">"test.txt"</span><span class=3D"o">);</span>

    <span class=3D"k">new</span> <span class=3D"nf">ListWriter</span><span =
class=3D"o">(</span><span class=3D"n">file</span><span class=3D"o">).</span=
><span class=3D"na">write</span><span class=3D"o">(</span><span class=3D"s"=
>"a"</span><span class=3D"o">,</span> <span class=3D"s">"b"</span><span cla=
ss=3D"o">,</span> <span class=3D"s">"c"</span><span class=3D"o">);</span>

    <span class=3D"n">assertEquals</span><span class=3D"o">(</span><span cl=
ass=3D"n">singletonList</span><span class=3D"o">(</span><span class=3D"s">"=
a,b,c"</span><span class=3D"o">),</span> <span class=3D"nc">Files</span><sp=
an class=3D"o">.</span><span class=3D"na">readAllLines</span><span class=3D=
"o">(</span><span class=3D"n">file</span><span class=3D"o">));</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You can inject multiple temporary directories by specifying multiple ann=
otated parameters.</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">A test method that requires multiple temporary directo=
ries</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@Test</span>
<span class=3D"kt">void</span> <span class=3D"nf">copyFileFromSourceToTarge=
t</span><span class=3D"o">(</span><span class=3D"nd">@TempDir</span> <span =
class=3D"nc">Path</span> <span class=3D"n">source</span><span class=3D"o">,=
</span> <span class=3D"nd">@TempDir</span> <span class=3D"nc">Path</span> <=
span class=3D"n">target</span><span class=3D"o">)</span> <span class=3D"kd"=
>throws</span> <span class=3D"nc">IOException</span> <span class=3D"o">{</s=
pan>
    <span class=3D"nc">Path</span> <span class=3D"n">sourceFile</span> <spa=
n class=3D"o">=3D</span> <span class=3D"n">source</span><span class=3D"o">.=
</span><span class=3D"na">resolve</span><span class=3D"o">(</span><span cla=
ss=3D"s">"test.txt"</span><span class=3D"o">);</span>
    <span class=3D"k">new</span> <span class=3D"nf">ListWriter</span><span =
class=3D"o">(</span><span class=3D"n">sourceFile</span><span class=3D"o">).=
</span><span class=3D"na">write</span><span class=3D"o">(</span><span class=
=3D"s">"a"</span><span class=3D"o">,</span> <span class=3D"s">"b"</span><sp=
an class=3D"o">,</span> <span class=3D"s">"c"</span><span class=3D"o">);</s=
pan>

    <span class=3D"nc">Path</span> <span class=3D"n">targetFile</span> <spa=
n class=3D"o">=3D</span> <span class=3D"nc">Files</span><span class=3D"o">.=
</span><span class=3D"na">copy</span><span class=3D"o">(</span><span class=
=3D"n">sourceFile</span><span class=3D"o">,</span> <span class=3D"n">target=
</span><span class=3D"o">.</span><span class=3D"na">resolve</span><span cla=
ss=3D"o">(</span><span class=3D"s">"test.txt"</span><span class=3D"o">));</=
span>

    <span class=3D"n">assertNotEquals</span><span class=3D"o">(</span><span=
 class=3D"n">sourceFile</span><span class=3D"o">,</span> <span class=3D"n">=
targetFile</span><span class=3D"o">);</span>
    <span class=3D"n">assertEquals</span><span class=3D"o">(</span><span cl=
ass=3D"n">singletonList</span><span class=3D"o">(</span><span class=3D"s">"=
a,b,c"</span><span class=3D"o">),</span> <span class=3D"nc">Files</span><sp=
an class=3D"o">.</span><span class=3D"na">readAllLines</span><span class=3D=
"o">(</span><span class=3D"n">targetFile</span><span class=3D"o">));</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"admonitionblock warning">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-warning" title=3D"Warning"></i>
</td>
<td class=3D"content">
To revert to the old behavior of using a single temporary directory for the
entire test class or method (depending on which level the annotation is use=
d), you can set
the <code>junit.jupiter.tempdir.scope</code> configuration parameter to <co=
de>per_context</code>. However,
please note that this option is deprecated and will be removed in a future =
release.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p><code>@TempDir</code> is not supported on constructor parameters. If you=
 wish to retain a single
reference to a temp directory across lifecycle methods and the current test=
 method, please
use field injection by annotating an instance field with <code>@TempDir</co=
de>.</p>
</div>
<div class=3D"paragraph">
<p>The following example stores a <em>shared</em> temporary directory in a =
<code>static</code> field. This
allows the same <code>sharedTempDir</code> to be used in all lifecycle meth=
ods and test methods of
the test class. For better isolation, you should use an instance field so t=
hat each test
method uses a separate directory.</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">A test class that shares a temporary directory across =
test methods</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kd">=
class</span> <span class=3D"nc">SharedTempDirectoryDemo</span> <span class=
=3D"o">{</span>

    <span class=3D"nd">@TempDir</span>
    <span class=3D"kd">static</span> <span class=3D"nc">Path</span> <span c=
lass=3D"n">sharedTempDir</span><span class=3D"o">;</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">writeItemsToFile</spa=
n><span class=3D"o">()</span> <span class=3D"kd">throws</span> <span class=
=3D"nc">IOException</span> <span class=3D"o">{</span>
        <span class=3D"nc">Path</span> <span class=3D"n">file</span> <span =
class=3D"o">=3D</span> <span class=3D"n">sharedTempDir</span><span class=3D=
"o">.</span><span class=3D"na">resolve</span><span class=3D"o">(</span><spa=
n class=3D"s">"test.txt"</span><span class=3D"o">);</span>

        <span class=3D"k">new</span> <span class=3D"nf">ListWriter</span><s=
pan class=3D"o">(</span><span class=3D"n">file</span><span class=3D"o">).</=
span><span class=3D"na">write</span><span class=3D"o">(</span><span class=
=3D"s">"a"</span><span class=3D"o">,</span> <span class=3D"s">"b"</span><sp=
an class=3D"o">,</span> <span class=3D"s">"c"</span><span class=3D"o">);</s=
pan>

        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"n">singletonList</span><span class=3D"o">(</span><span class=3D"=
s">"a,b,c"</span><span class=3D"o">),</span> <span class=3D"nc">Files</span=
><span class=3D"o">.</span><span class=3D"na">readAllLines</span><span clas=
s=3D"o">(</span><span class=3D"n">file</span><span class=3D"o">));</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">anotherTestThatUsesTh=
eSameTempDir</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"c1">// use sharedTempDir</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"migrating-from-junit4"><a class=3D"anchor" href=3D"https://junit.=
org/junit5/docs/current/user-guide/#migrating-from-junit4"></a>3. Migrating=
 from JUnit 4</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>Although the JUnit Jupiter programming model and extension model will no=
t support JUnit 4
features such as <code>Rules</code> and <code>Runners</code> natively, it i=
s not expected that source code
maintainers will need to update all of their existing tests, test extension=
s, and custom
build test infrastructure to migrate to JUnit Jupiter.</p>
</div>
<div class=3D"paragraph">
<p>Instead, JUnit provides a gentle migration path via a <em>JUnit Vintage =
test engine</em> which
allows existing tests based on JUnit 3 and JUnit 4 to be executed using the=
 JUnit
Platform infrastructure. Since all classes and annotations specific to JUni=
t Jupiter
reside under a new <code>org.junit.jupiter</code> base package, having both=
 JUnit 4 and JUnit
Jupiter in the classpath does not lead to any conflicts. It is therefore sa=
fe to maintain
existing JUnit 4 tests alongside JUnit Jupiter tests. Furthermore, since th=
e JUnit team
will continue to provide maintenance and bug fix releases for the JUnit 4.x=
 baseline,
developers have plenty of time to migrate to JUnit Jupiter on their own sch=
edule.</p>
</div>
<div class=3D"sect2">
<h3 id=3D"migrating-from-junit4-running"><a class=3D"anchor" href=3D"https:=
//junit.org/junit5/docs/current/user-guide/#migrating-from-junit4-running">=
</a>3.1. Running JUnit 4 Tests on the JUnit Platform</h3>
<div class=3D"paragraph">
<p>Just make sure that the <code>junit-vintage-engine</code> artifact is in=
 your test runtime path. In
that case JUnit 3 and JUnit 4 tests will automatically be picked up by the =
JUnit Platform
launcher.</p>
</div>
<div class=3D"paragraph">
<p>See the example projects in the <a href=3D"https://github.com/junit-team=
/junit5-samples"><code>junit5-samples</code></a> repository to
find out how this is done with Gradle and Maven.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"migrating-from-junit4-categories-support"><a class=3D"anchor" hre=
f=3D"https://junit.org/junit5/docs/current/user-guide/#migrating-from-junit=
4-categories-support"></a>3.1.1. Categories Support</h4>
<div class=3D"paragraph">
<p>For test classes or methods that are annotated with <code>@Category</cod=
e>, the <em>JUnit Vintage test
engine</em> exposes the category=E2=80=99s fully qualified class name as a =
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-=
tags">tag</a>
of the corresponding test identifier. For example, if a test method is anno=
tated with
<code>@Category(Example.class)</code>, it will be tagged with <code>"com.ac=
me.Example"</code>. Similar to the
<code>Categories</code> runner in JUnit 4, this information can be used to =
filter the discovered
tests before executing them (see <a href=3D"https://junit.org/junit5/docs/c=
urrent/user-guide/#running-tests">Running Tests</a> for details).</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"migrating-from-junit4-tips"><a class=3D"anchor" href=3D"https://j=
unit.org/junit5/docs/current/user-guide/#migrating-from-junit4-tips"></a>3.=
2. Migration Tips</h3>
<div class=3D"paragraph">
<p>The following are topics that you should be aware of when migrating exis=
ting JUnit 4
tests to JUnit Jupiter.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Annotations reside in the <code>org.junit.jupiter.api</code> package.</p=
>
</li>
<li>
<p>Assertions reside in <code>org.junit.jupiter.api.Assertions</code>.</p>
<div class=3D"ulist">
<ul>
<li>
<p>Note that you may continue to use assertion methods from <code>org.junit=
.Assert</code> or any
other assertion library such as <a href=3D"https://joel-costigliola.github.=
io/assertj/">AssertJ</a>, <a href=3D"https://hamcrest.org/JavaHamcrest/">Ha=
mcrest</a>, <a href=3D"https://truth.dev/">Truth</a>, etc.</p>
</li>
</ul>
</div>
</li>
<li>
<p>Assumptions reside in <code>org.junit.jupiter.api.Assumptions</code>.</p=
>
<div class=3D"ulist">
<ul>
<li>
<p>Note that JUnit Jupiter 5.4 and later versions support methods from JUni=
t 4=E2=80=99s
<code>org.junit.Assume</code> class for assumptions. Specifically, JUnit Ju=
piter supports JUnit
4=E2=80=99s <code>AssumptionViolatedException</code> to signal that a test =
should be aborted instead of
marked as a failure.</p>
</li>
</ul>
</div>
</li>
<li>
<p><code>@Before</code> and <code>@After</code> no longer exist; use <code>=
@BeforeEach</code> and <code>@AfterEach</code> instead.</p>
</li>
<li>
<p><code>@BeforeClass</code> and <code>@AfterClass</code> no longer exist; =
use <code>@BeforeAll</code> and <code>@AfterAll</code>
instead.</p>
</li>
<li>
<p><code>@Ignore</code> no longer exists: use <code>@Disabled</code> or one=
 of the other built-in
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-=
conditional-execution">execution conditions</a> instead</p>
<div class=3D"ulist">
<ul>
<li>
<p>See also <a href=3D"https://junit.org/junit5/docs/current/user-guide/#mi=
grating-from-junit4-ignore-annotation-support">JUnit 4 @Ignore Support</a>.=
</p>
</li>
</ul>
</div>
</li>
<li>
<p><code>@Category</code> no longer exists; use <code>@Tag</code> instead.<=
/p>
</li>
<li>
<p><code>@RunWith</code> no longer exists; superseded by <code>@ExtendWith<=
/code>.</p>
</li>
<li>
<p><code>@Rule</code> and <code>@ClassRule</code> no longer exist; supersed=
ed by <code>@ExtendWith</code> and
<code>@RegisterExtension</code></p>
<div class=3D"ulist">
<ul>
<li>
<p>See also <a href=3D"https://junit.org/junit5/docs/current/user-guide/#mi=
grating-from-junit4-rule-support">Limited JUnit 4 Rule Support</a>.</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"migrating-from-junit4-rule-support"><a class=3D"anchor" href=3D"h=
ttps://junit.org/junit5/docs/current/user-guide/#migrating-from-junit4-rule=
-support"></a>3.3. Limited JUnit 4 Rule Support</h3>
<div class=3D"paragraph">
<p>As stated above, JUnit Jupiter does not and will not support JUnit 4 rul=
es natively. The
JUnit team realizes, however, that many organizations, especially large one=
s, are likely
to have large JUnit 4 code bases that make use of custom rules. To serve th=
ese
organizations and enable a gradual migration path the JUnit team has decide=
d to support a
selection of JUnit 4 rules verbatim within JUnit Jupiter. This support is b=
ased on
adapters and is limited to those rules that are semantically compatible to =
the JUnit
Jupiter extension model, i.e. those that do not completely change the overa=
ll execution
flow of the test.</p>
</div>
<div class=3D"paragraph">
<p>The <code>junit-jupiter-migrationsupport</code> module from JUnit Jupite=
r currently supports the
following three <code>Rule</code> types including subclasses of these types=
:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code>org.junit.rules.ExternalResource</code> (including <code>org.junit=
.rules.TemporaryFolder</code>)</p>
</li>
<li>
<p><code>org.junit.rules.Verifier</code> (including <code>org.junit.rules.E=
rrorCollector</code>)</p>
</li>
<li>
<p><code>org.junit.rules.ExpectedException</code></p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>As in JUnit 4, Rule-annotated fields as well as methods are supported. B=
y using these
class-level extensions on a test class such <code>Rule</code> implementatio=
ns in legacy code bases
can be <em>left unchanged</em> including the JUnit 4 rule import statements=
.</p>
</div>
<div class=3D"paragraph">
<p>This limited form of <code>Rule</code> support can be switched on by the=
 class-level annotation
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupite=
r.migrationsupport/org/junit/jupiter/migrationsupport/rules/EnableRuleMigra=
tionSupport.html">@EnableRuleMigrationSupport</a></code>. This annotation i=
s a <em>composed annotation</em> which enables
all rule migration support extensions: <code>VerifierSupport</code>, <code>=
ExternalResourceSupport</code>, and
<code>ExpectedExceptionSupport</code>. You may alternatively choose to anno=
tate your test class with
<code>@EnableJUnit4MigrationSupport</code> which registers migration suppor=
t for rules <em>and</em> JUnit
4=E2=80=99s <code>@Ignore</code> annotation (see <a href=3D"https://junit.o=
rg/junit5/docs/current/user-guide/#migrating-from-junit4-ignore-annotation-=
support">JUnit 4 @Ignore Support</a>).</p>
</div>
<div class=3D"paragraph">
<p>However, if you intend to develop a new extension for JUnit 5 please use=
 the new
extension model of JUnit Jupiter instead of the rule-based model of JUnit 4=
.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"migrating-from-junit4-ignore-annotation-support"><a class=3D"anch=
or" href=3D"https://junit.org/junit5/docs/current/user-guide/#migrating-fro=
m-junit4-ignore-annotation-support"></a>3.4. JUnit 4 @Ignore Support</h3>
<div class=3D"paragraph">
<p>In order to provide a smooth migration path from JUnit 4 to JUnit Jupite=
r, the
<code>junit-jupiter-migrationsupport</code> module provides support for JUn=
it 4=E2=80=99s <code>@Ignore</code>
annotation analogous to Jupiter=E2=80=99s <code><a href=3D"https://junit.or=
g/junit5/docs/current/api/org.junit.jupiter.api/org/junit/jupiter/api/Disab=
led.html">@Disabled</a></code> annotation.</p>
</div>
<div class=3D"paragraph">
<p>To use <code>@Ignore</code> with JUnit Jupiter based tests, configure a =
<em>test</em> dependency on the
<code>junit-jupiter-migrationsupport</code> module in your build and then a=
nnotate your test class
with <code>@ExtendWith(IgnoreCondition.class)</code> or <code><a href=3D"ht=
tps://junit.org/junit5/docs/current/api/org.junit.jupiter.migrationsupport/=
org/junit/jupiter/migrationsupport/EnableJUnit4MigrationSupport.html">@Enab=
leJUnit4MigrationSupport</a></code> (which
automatically registers the <code>IgnoreCondition</code> along with
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#migrating-from=
-junit4-rule-support">Limited JUnit 4 Rule Support</a>). The <code>IgnoreCo=
ndition</code> is an
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupite=
r.api/org/junit/jupiter/api/extension/ExecutionCondition.html">ExecutionCon=
dition</a></code> that disables test classes or test methods that are annot=
ated with
<code>@Ignore</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">org.junit.Ignore</span><span class=3D"o">;=
</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.migra=
tionsupport.EnableJUnit4MigrationSupport</span><span class=3D"o">;</span>

<span class=3D"c1">// @ExtendWith(IgnoreCondition.class)</span>
<span class=3D"nd">@EnableJUnit4MigrationSupport</span>
<span class=3D"kd">class</span> <span class=3D"nc">IgnoredTestsDemo</span> =
<span class=3D"o">{</span>

    <span class=3D"nd">@Ignore</span>
    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">testWillBeIgnored</sp=
an><span class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">testWillBeExecuted</s=
pan><span class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"o">}</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"running-tests"><a class=3D"anchor" href=3D"https://junit.org/juni=
t5/docs/current/user-guide/#running-tests"></a>4. Running Tests</h2>
<div class=3D"sectionbody">
<div class=3D"sect2">
<h3 id=3D"running-tests-ide"><a class=3D"anchor" href=3D"https://junit.org/=
junit5/docs/current/user-guide/#running-tests-ide"></a>4.1. IDE Support</h3=
>
<div class=3D"sect3">
<h4 id=3D"running-tests-ide-intellij-idea"><a class=3D"anchor" href=3D"http=
s://junit.org/junit5/docs/current/user-guide/#running-tests-ide-intellij-id=
ea"></a>4.1.1. IntelliJ IDEA</h4>
<div class=3D"paragraph">
<p>IntelliJ IDEA supports running tests on the JUnit Platform since version=
 2016.2. For
details please see the
<a href=3D"https://blog.jetbrains.com/idea/2016/08/using-junit-5-in-intelli=
j-idea/">post on the
IntelliJ IDEA blog</a>. Note, however, that it is recommended to use IDEA 2=
017.3 or newer
since these newer versions of IDEA will download the following JARs automat=
ically based
on the API version used in the project: <code>junit-platform-launcher</code=
>,
<code>junit-jupiter-engine</code>, and <code>junit-vintage-engine</code>.</=
p>
</div>
<div class=3D"admonitionblock warning">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-warning" title=3D"Warning"></i>
</td>
<td class=3D"content">
IntelliJ IDEA releases prior to IDEA 2017.3 bundle specific versions of JUn=
it 5.
Thus, if you want to use a newer version of JUnit Jupiter, execution of tes=
ts within the
IDE might fail due to version conflicts. In such cases, please follow the i=
nstructions
below to use a newer version of JUnit 5 than the one bundled with IntelliJ =
IDEA.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>In order to use a different JUnit 5 version (e.g., 5.8.2), you may need =
to
include the corresponding versions of the <code>junit-platform-launcher</co=
de>,
<code>junit-jupiter-engine</code>, and <code>junit-vintage-engine</code> JA=
Rs in the classpath.</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">Additional Gradle Dependencies</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"groovy"><span class=3D"n"=
>testImplementation</span><span class=3D"o">(</span><span class=3D"n">platf=
orm</span><span class=3D"o">(</span><span class=3D"s2">"org.junit:junit-bom=
:5.8.2"</span><span class=3D"o">))</span>
<span class=3D"n">testRuntimeOnly</span><span class=3D"o">(</span><span cla=
ss=3D"s2">"org.junit.platform:junit-platform-launcher"</span><span class=3D=
"o">)</span> <span class=3D"o">{</span>
  <span class=3D"n">because</span><span class=3D"o">(</span><span class=3D"=
s2">"Only needed to run tests in a version of IntelliJ IDEA that bundles ol=
der versions"</span><span class=3D"o">)</span>
<span class=3D"o">}</span>
<span class=3D"n">testRuntimeOnly</span><span class=3D"o">(</span><span cla=
ss=3D"s2">"org.junit.jupiter:junit-jupiter-engine"</span><span class=3D"o">=
)</span>
<span class=3D"n">testRuntimeOnly</span><span class=3D"o">(</span><span cla=
ss=3D"s2">"org.junit.vintage:junit-vintage-engine"</span><span class=3D"o">=
)</span></code></pre>
</div>
</div>
<div class=3D"listingblock">
<div class=3D"title">Additional Maven Dependencies</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"xml"><span class=3D"c">&l=
t;!-- ... --&gt;</span>
<span class=3D"nt">&lt;dependencies&gt;</span>
    <span class=3D"c">&lt;!-- Only needed to run tests in a version of Inte=
lliJ IDEA that bundles older versions --&gt;</span>
    <span class=3D"nt">&lt;dependency&gt;</span>
        <span class=3D"nt">&lt;groupId&gt;</span>org.junit.platform<span cl=
ass=3D"nt">&lt;/groupId&gt;</span>
        <span class=3D"nt">&lt;artifactId&gt;</span>junit-platform-launcher=
<span class=3D"nt">&lt;/artifactId&gt;</span>
        <span class=3D"nt">&lt;scope&gt;</span>test<span class=3D"nt">&lt;/=
scope&gt;</span>
    <span class=3D"nt">&lt;/dependency&gt;</span>
    <span class=3D"nt">&lt;dependency&gt;</span>
        <span class=3D"nt">&lt;groupId&gt;</span>org.junit.jupiter<span cla=
ss=3D"nt">&lt;/groupId&gt;</span>
        <span class=3D"nt">&lt;artifactId&gt;</span>junit-jupiter-engine<sp=
an class=3D"nt">&lt;/artifactId&gt;</span>
        <span class=3D"nt">&lt;scope&gt;</span>test<span class=3D"nt">&lt;/=
scope&gt;</span>
    <span class=3D"nt">&lt;/dependency&gt;</span>
    <span class=3D"nt">&lt;dependency&gt;</span>
        <span class=3D"nt">&lt;groupId&gt;</span>org.junit.vintage<span cla=
ss=3D"nt">&lt;/groupId&gt;</span>
        <span class=3D"nt">&lt;artifactId&gt;</span>junit-vintage-engine<sp=
an class=3D"nt">&lt;/artifactId&gt;</span>
        <span class=3D"nt">&lt;scope&gt;</span>test<span class=3D"nt">&lt;/=
scope&gt;</span>
    <span class=3D"nt">&lt;/dependency&gt;</span>
<span class=3D"nt">&lt;/dependencies&gt;</span>
<span class=3D"nt">&lt;dependencyManagement&gt;</span>
    <span class=3D"nt">&lt;dependencies&gt;</span>
        <span class=3D"nt">&lt;dependency&gt;</span>
            <span class=3D"nt">&lt;groupId&gt;</span>org.junit<span class=
=3D"nt">&lt;/groupId&gt;</span>
            <span class=3D"nt">&lt;artifactId&gt;</span>junit-bom<span clas=
s=3D"nt">&lt;/artifactId&gt;</span>
            <span class=3D"nt">&lt;version&gt;</span>5.8.2<span class=3D"nt=
">&lt;/version&gt;</span>
            <span class=3D"nt">&lt;type&gt;</span>pom<span class=3D"nt">&lt=
;/type&gt;</span>
            <span class=3D"nt">&lt;scope&gt;</span>import<span class=3D"nt"=
>&lt;/scope&gt;</span>
        <span class=3D"nt">&lt;/dependency&gt;</span>
    <span class=3D"nt">&lt;/dependencies&gt;</span>
<span class=3D"nt">&lt;/dependencyManagement&gt;</span></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"running-tests-ide-eclipse"><a class=3D"anchor" href=3D"https://ju=
nit.org/junit5/docs/current/user-guide/#running-tests-ide-eclipse"></a>4.1.=
2. Eclipse</h4>
<div class=3D"paragraph">
<p>Eclipse IDE offers support for the JUnit Platform since the Eclipse Oxyg=
en.1a (4.7.1a)
release.</p>
</div>
<div class=3D"paragraph">
<p>For more information on using JUnit 5 in Eclipse consult the official <e=
m>Eclipse support
for JUnit 5</em> section of the
<a href=3D"https://www.eclipse.org/eclipse/news/4.7.1a/#junit-5-support">Ec=
lipse Project Oxygen.1a
(4.7.1a) - New and Noteworthy</a> documentation.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"running-tests-ide-netbeans"><a class=3D"anchor" href=3D"https://j=
unit.org/junit5/docs/current/user-guide/#running-tests-ide-netbeans"></a>4.=
1.3. NetBeans</h4>
<div class=3D"paragraph">
<p>NetBeans offers support for JUnit Jupiter and the JUnit Platform since t=
he
<a href=3D"https://netbeans.apache.org/download/nb100/nb100.html">Apache Ne=
tBeans 10.0 release</a>.</p>
</div>
<div class=3D"paragraph">
<p>For more information consult the JUnit 5 section of the
<a href=3D"https://netbeans.apache.org/download/nb100/index.html#_junit_5">=
Apache NetBeans 10.0
release notes</a>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"running-tests-ide-vscode"><a class=3D"anchor" href=3D"https://jun=
it.org/junit5/docs/current/user-guide/#running-tests-ide-vscode"></a>4.1.4.=
 Visual Studio Code</h4>
<div class=3D"paragraph">
<p><a href=3D"https://code.visualstudio.com/">Visual Studio Code</a> suppor=
ts JUnit Jupiter and the JUnit
Platform via the
<a href=3D"https://marketplace.visualstudio.com/items?itemName=3Dvscjava.vs=
code-java-test">Java Test
Runner</a> extension which is installed by default as part of the
<a href=3D"https://marketplace.visualstudio.com/items?itemName=3Dvscjava.vs=
code-java-pack">Java
Extension Pack</a>.</p>
</div>
<div class=3D"paragraph">
<p>For more information consult the <em>Testing</em> section of the
<a href=3D"https://code.visualstudio.com/docs/languages/java#_testing">Java=
 in Visual Studio Code</a>
documentation.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"running-tests-ide-other"><a class=3D"anchor" href=3D"https://juni=
t.org/junit5/docs/current/user-guide/#running-tests-ide-other"></a>4.1.5. O=
ther IDEs</h4>
<div class=3D"paragraph">
<p>If you are using an editor or IDE other than one of those listed in the =
previous sections,
the JUnit team provides two alternative solutions to assist you in using JU=
nit 5. You can
use the <a href=3D"https://junit.org/junit5/docs/current/user-guide/#runnin=
g-tests-console-launcher">Console Launcher</a> manually=E2=80=89=E2=80=94=
=E2=80=89for example, from the command line=E2=80=89=E2=80=94=E2=80=89or ex=
ecute tests with a <a href=3D"https://junit.org/junit5/docs/current/user-gu=
ide/#running-tests-junit-platform-runner">JUnit 4 based Runner</a> if
your IDE has built-in support for JUnit 4.</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"running-tests-build"><a class=3D"anchor" href=3D"https://junit.or=
g/junit5/docs/current/user-guide/#running-tests-build"></a>4.2. Build Suppo=
rt</h3>
<div class=3D"sect3">
<h4 id=3D"running-tests-build-gradle"><a class=3D"anchor" href=3D"https://j=
unit.org/junit5/docs/current/user-guide/#running-tests-build-gradle"></a>4.=
2.1. Gradle</h4>
<div class=3D"admonitionblock warning">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-warning" title=3D"Warning"></i>
</td>
<td class=3D"content">
<div class=3D"title">The JUnit Platform Gradle Plugin has been discontinued=
</div>
<div class=3D"paragraph">
<p>The <code>junit-platform-gradle-plugin</code> developed by the JUnit tea=
m was deprecated in JUnit
Platform 1.2 and discontinued in 1.3. Please switch to Gradle=E2=80=99s sta=
ndard <code>test</code> task.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>Starting with <a href=3D"https://docs.gradle.org/4.6/release-notes.html"=
>version 4.6</a>, Gradle provides
<a href=3D"https://docs.gradle.org/current/userguide/java_testing.html#usin=
g_junit5">native support</a>
for executing tests on the JUnit Platform. To enable it, you just need to s=
pecify
<code>useJUnitPlatform()</code> within a <code>test</code> task declaration=
 in <code>build.gradle</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"groovy"><span class=3D"n"=
>test</span> <span class=3D"o">{</span>
    <span class=3D"n">useJUnitPlatform</span><span class=3D"o">()</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Filtering by <a href=3D"https://junit.org/junit5/docs/current/user-guide=
/#running-tests-tags">tags</a>,
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-=
tag-expressions">tag expressions</a>, or engines is also supported:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"groovy"><span class=3D"n"=
>test</span> <span class=3D"o">{</span>
    <span class=3D"n">useJUnitPlatform</span> <span class=3D"o">{</span>
        <span class=3D"n">includeTags</span><span class=3D"o">(</span><span=
 class=3D"s2">"fast"</span><span class=3D"o">,</span> <span class=3D"s2">"s=
moke &amp; feature-a"</span><span class=3D"o">)</span>
        <span class=3D"c1">// excludeTags("slow", "ci")</span>
        <span class=3D"n">includeEngines</span><span class=3D"o">(</span><s=
pan class=3D"s2">"junit-jupiter"</span><span class=3D"o">)</span>
        <span class=3D"c1">// excludeEngines("junit-vintage")</span>
    <span class=3D"o">}</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Please refer to the
<a href=3D"https://docs.gradle.org/current/userguide/java_plugin.html#sec:j=
ava_test">official Gradle documentation</a>
for a comprehensive list of options.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"running-tests-build-gradle-config-params"><a class=3D"anchor" hre=
f=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-build-=
gradle-config-params"></a>Configuration Parameters</h5>
<div class=3D"paragraph">
<p>The standard Gradle <code>test</code> task currently does not provide a =
dedicated DSL to set JUnit
Platform <a href=3D"https://junit.org/junit5/docs/current/user-guide/#runni=
ng-tests-config-params">configuration parameters</a> to influence test
discovery and execution. However, you can provide configuration parameters =
within the
build script via system properties (as shown below) or via the
<code>junit-platform.properties</code> file.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"groovy"><span class=3D"n"=
>test</span> <span class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
    <span class=3D"n">systemProperty</span><span class=3D"o">(</span><span =
class=3D"s2">"junit.jupiter.conditions.deactivate"</span><span class=3D"o">=
,</span> <span class=3D"s2">"*"</span><span class=3D"o">)</span>
    <span class=3D"n">systemProperty</span><span class=3D"o">(</span><span =
class=3D"s2">"junit.jupiter.extensions.autodetection.enabled"</span><span c=
lass=3D"o">,</span> <span class=3D"kc">true</span><span class=3D"o">)</span=
>
    <span class=3D"n">systemProperty</span><span class=3D"o">(</span><span =
class=3D"s2">"junit.jupiter.testinstance.lifecycle.default"</span><span cla=
ss=3D"o">,</span> <span class=3D"s2">"per_class"</span><span class=3D"o">)<=
/span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"running-tests-build-gradle-engines-configure"><a class=3D"anchor"=
 href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-bu=
ild-gradle-engines-configure"></a>Configuring Test Engines</h5>
<div class=3D"paragraph">
<p>In order to run any tests at all, a <code>TestEngine</code> implementati=
on must be on the classpath.</p>
</div>
<div class=3D"paragraph">
<p>To configure support for JUnit Jupiter based tests, configure a <code>te=
stImplementation</code> dependency
on the dependency-aggregating JUnit Jupiter artifact similar to the followi=
ng.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"groovy"><span class=3D"n"=
>dependencies</span> <span class=3D"o">{</span>
    <span class=3D"n">testImplementation</span><span class=3D"o">(</span><s=
pan class=3D"s2">"org.junit.jupiter:junit-jupiter:5.8.2"</span><span class=
=3D"o">)</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The JUnit Platform can run JUnit 4 based tests as long as you configure =
a <code>testImplementation</code>
dependency on JUnit 4 and a <code>testRuntimeOnly</code> dependency on the =
JUnit Vintage <code>TestEngine</code>
implementation similar to the following.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"groovy"><span class=3D"n"=
>dependencies</span> <span class=3D"o">{</span>
    <span class=3D"n">testImplementation</span><span class=3D"o">(</span><s=
pan class=3D"s2">"junit:junit:4.13.2"</span><span class=3D"o">)</span>
    <span class=3D"n">testRuntimeOnly</span><span class=3D"o">(</span><span=
 class=3D"s2">"org.junit.vintage:junit-vintage-engine:5.8.2"</span><span cl=
ass=3D"o">)</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"running-tests-build-gradle-logging"><a class=3D"anchor" href=3D"h=
ttps://junit.org/junit5/docs/current/user-guide/#running-tests-build-gradle=
-logging"></a>Configuring Logging (optional)</h5>
<div class=3D"paragraph">
<p>JUnit uses the Java Logging APIs in the <code>java.util.logging</code> p=
ackage (a.k.a. <em>JUL</em>) to
emit warnings and debug information. Please refer to the official documenta=
tion of
<code><a href=3D"https://docs.oracle.com/javase/8/docs/api/java/util/loggin=
g/LogManager.html">LogManager</a></code> for configuration options.</p>
</div>
<div class=3D"paragraph">
<p>Alternatively, it=E2=80=99s possible to redirect log messages to other l=
ogging frameworks such as
<a href=3D"https://logging.apache.org/log4j/2.x/">Log4j</a> or <a href=3D"h=
ttps://logback.qos.ch/">Logback</a>. To use a logging framework that provid=
es a custom implementation of
<code><a href=3D"https://docs.oracle.com/javase/8/docs/api/java/util/loggin=
g/LogManager.html">LogManager</a></code>, set the <code>java.util.logging.m=
anager</code> system property to the <em>fully
qualified class name</em> of the <code><a href=3D"https://docs.oracle.com/j=
avase/8/docs/api/java/util/logging/LogManager.html">LogManager</a></code> i=
mplementation to use. The example below
demonstrates how to configure Log4j&nbsp;2.x (see <a href=3D"https://loggin=
g.apache.org/log4j/2.x/log4j-jul/index.html">Log4j JDK Logging Adapter</a> =
for
details).</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"groovy"><span class=3D"n"=
>test</span> <span class=3D"o">{</span>
    <span class=3D"n">systemProperty</span><span class=3D"o">(</span><span =
class=3D"s2">"java.util.logging.manager"</span><span class=3D"o">,</span> <=
span class=3D"s2">"org.apache.logging.log4j.jul.LogManager"</span><span cla=
ss=3D"o">)</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Other logging frameworks provide different means to redirect messages lo=
gged using
<code>java.util.logging</code>. For example, for <a href=3D"https://logback=
.qos.ch/">Logback</a> you can use the
<a href=3D"https://www.slf4j.org/legacy.html#jul-to-slf4j">JUL to SLF4J Bri=
dge</a> by adding an
additional dependency to the runtime classpath.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"running-tests-build-maven"><a class=3D"anchor" href=3D"https://ju=
nit.org/junit5/docs/current/user-guide/#running-tests-build-maven"></a>4.2.=
2. Maven</h4>
<div class=3D"admonitionblock warning">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-warning" title=3D"Warning"></i>
</td>
<td class=3D"content">
<div class=3D"title">The JUnit Platform Maven Surefire Provider has been di=
scontinued</div>
<div class=3D"paragraph">
<p>The <code>junit-platform-surefire-provider</code>, which was originally =
developed by the JUnit team,
was deprecated in JUnit Platform 1.3 and discontinued in 1.4. Please use Ma=
ven Surefire=E2=80=99s
native support instead.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>Starting with <a href=3D"https://issues.apache.org/jira/browse/SUREFIRE-=
1330">version 2.22.0</a>, Maven
Surefire and Maven Failsafe provide
<a href=3D"https://maven.apache.org/surefire/maven-surefire-plugin/examples=
/junit-platform.html">native support</a>
for executing tests on the JUnit Platform. The <code>pom.xml</code> file in=
 the
<code><a href=3D"https://github.com/junit-team/junit5-samples/tree/r5.8.2/j=
unit5-jupiter-starter-maven">junit5-jupiter-starter-maven</a></code> projec=
t demonstrates how to use the Maven Surefire plugin
and can serve as a starting point for configuring your Maven build.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"running-tests-build-maven-engines-configure"><a class=3D"anchor" =
href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-bui=
ld-maven-engines-configure"></a>Configuring Test Engines</h5>
<div class=3D"paragraph">
<p>In order to have Maven Surefire or Maven Failsafe run any tests at all, =
at least one
<code>TestEngine</code> implementation must be added to the test classpath.=
</p>
</div>
<div class=3D"paragraph">
<p>To configure support for JUnit Jupiter based tests, configure <code>test=
</code> scoped dependencies
on the JUnit Jupiter API and the JUnit Jupiter <code>TestEngine</code> impl=
ementation similar to the
following.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"xml"><span class=3D"c">&l=
t;!-- ... --&gt;</span>
<span class=3D"nt">&lt;dependencies&gt;</span>
    <span class=3D"c">&lt;!-- ... --&gt;</span>
    <span class=3D"nt">&lt;dependency&gt;</span>
        <span class=3D"nt">&lt;groupId&gt;</span>org.junit.jupiter<span cla=
ss=3D"nt">&lt;/groupId&gt;</span>
        <span class=3D"nt">&lt;artifactId&gt;</span>junit-jupiter<span clas=
s=3D"nt">&lt;/artifactId&gt;</span>
        <span class=3D"nt">&lt;version&gt;</span>5.8.2<span class=3D"nt">&l=
t;/version&gt;</span>
        <span class=3D"nt">&lt;scope&gt;</span>test<span class=3D"nt">&lt;/=
scope&gt;</span>
    <span class=3D"nt">&lt;/dependency&gt;</span>
    <span class=3D"c">&lt;!-- ... --&gt;</span>
<span class=3D"nt">&lt;/dependencies&gt;</span>
<span class=3D"nt">&lt;build&gt;</span>
    <span class=3D"nt">&lt;plugins&gt;</span>
        <span class=3D"nt">&lt;plugin&gt;</span>
            <span class=3D"nt">&lt;artifactId&gt;</span>maven-surefire-plug=
in<span class=3D"nt">&lt;/artifactId&gt;</span>
            <span class=3D"nt">&lt;version&gt;</span>2.22.2<span class=3D"n=
t">&lt;/version&gt;</span>
        <span class=3D"nt">&lt;/plugin&gt;</span>
        <span class=3D"nt">&lt;plugin&gt;</span>
            <span class=3D"nt">&lt;artifactId&gt;</span>maven-failsafe-plug=
in<span class=3D"nt">&lt;/artifactId&gt;</span>
            <span class=3D"nt">&lt;version&gt;</span>2.22.2<span class=3D"n=
t">&lt;/version&gt;</span>
        <span class=3D"nt">&lt;/plugin&gt;</span>
    <span class=3D"nt">&lt;/plugins&gt;</span>
<span class=3D"nt">&lt;/build&gt;</span>
<span class=3D"c">&lt;!-- ... --&gt;</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Maven Surefire and Maven Failsafe can run JUnit 4 based tests alongside =
Jupiter tests as
long as you configure <code>test</code> scoped dependencies on JUnit 4 and =
the JUnit Vintage
<code>TestEngine</code> implementation similar to the following.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"xml"><span class=3D"c">&l=
t;!-- ... --&gt;</span>
<span class=3D"nt">&lt;dependencies&gt;</span>
    <span class=3D"c">&lt;!-- ... --&gt;</span>
    <span class=3D"nt">&lt;dependency&gt;</span>
        <span class=3D"nt">&lt;groupId&gt;</span>junit<span class=3D"nt">&l=
t;/groupId&gt;</span>
        <span class=3D"nt">&lt;artifactId&gt;</span>junit<span class=3D"nt"=
>&lt;/artifactId&gt;</span>
        <span class=3D"nt">&lt;version&gt;</span>4.13.2<span class=3D"nt">&=
lt;/version&gt;</span>
        <span class=3D"nt">&lt;scope&gt;</span>test<span class=3D"nt">&lt;/=
scope&gt;</span>
    <span class=3D"nt">&lt;/dependency&gt;</span>
    <span class=3D"nt">&lt;dependency&gt;</span>
        <span class=3D"nt">&lt;groupId&gt;</span>org.junit.vintage<span cla=
ss=3D"nt">&lt;/groupId&gt;</span>
        <span class=3D"nt">&lt;artifactId&gt;</span>junit-vintage-engine<sp=
an class=3D"nt">&lt;/artifactId&gt;</span>
        <span class=3D"nt">&lt;version&gt;</span>5.8.2<span class=3D"nt">&l=
t;/version&gt;</span>
        <span class=3D"nt">&lt;scope&gt;</span>test<span class=3D"nt">&lt;/=
scope&gt;</span>
    <span class=3D"nt">&lt;/dependency&gt;</span>
    <span class=3D"c">&lt;!-- ... --&gt;</span>
<span class=3D"nt">&lt;/dependencies&gt;</span>
<span class=3D"c">&lt;!-- ... --&gt;</span>
<span class=3D"nt">&lt;build&gt;</span>
    <span class=3D"nt">&lt;plugins&gt;</span>
        <span class=3D"nt">&lt;plugin&gt;</span>
            <span class=3D"nt">&lt;artifactId&gt;</span>maven-surefire-plug=
in<span class=3D"nt">&lt;/artifactId&gt;</span>
            <span class=3D"nt">&lt;version&gt;</span>2.22.2<span class=3D"n=
t">&lt;/version&gt;</span>
        <span class=3D"nt">&lt;/plugin&gt;</span>
        <span class=3D"nt">&lt;plugin&gt;</span>
            <span class=3D"nt">&lt;artifactId&gt;</span>maven-failsafe-plug=
in<span class=3D"nt">&lt;/artifactId&gt;</span>
            <span class=3D"nt">&lt;version&gt;</span>2.22.2<span class=3D"n=
t">&lt;/version&gt;</span>
        <span class=3D"nt">&lt;/plugin&gt;</span>
    <span class=3D"nt">&lt;/plugins&gt;</span>
<span class=3D"nt">&lt;/build&gt;</span>
<span class=3D"c">&lt;!-- ... --&gt;</span></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"running-tests-build-maven-filter-test-class-names"><a class=3D"an=
chor" href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tes=
ts-build-maven-filter-test-class-names"></a>Filtering by Test Class Names</=
h5>
<div class=3D"paragraph">
<p>The Maven Surefire Plugin will scan for test classes whose fully qualifi=
ed names match
the following patterns.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code>**/Test*.java</code></p>
</li>
<li>
<p><code>**/*Test.java</code></p>
</li>
<li>
<p><code>**/*Tests.java</code></p>
</li>
<li>
<p><code>**/*TestCase.java</code></p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Moreover, it will exclude all nested classes (including static member cl=
asses) by default.</p>
</div>
<div class=3D"paragraph">
<p>Note, however, that you can override this default behavior by configurin=
g explicit
<code>include</code> and <code>exclude</code> rules in your <code>pom.xml</=
code> file. For example, to keep Maven Surefire
from excluding static member classes, you can override its exclude rules as=
 follows.</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">Overriding exclude rules of Maven Surefire</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"xml"><span class=3D"c">&l=
t;!-- ... --&gt;</span>
<span class=3D"nt">&lt;build&gt;</span>
    <span class=3D"nt">&lt;plugins&gt;</span>
        <span class=3D"nt">&lt;plugin&gt;</span>
            <span class=3D"nt">&lt;artifactId&gt;</span>maven-surefire-plug=
in<span class=3D"nt">&lt;/artifactId&gt;</span>
            <span class=3D"nt">&lt;version&gt;</span>2.22.2<span class=3D"n=
t">&lt;/version&gt;</span>
            <span class=3D"nt">&lt;configuration&gt;</span>
                <span class=3D"nt">&lt;excludes&gt;</span>
                    <span class=3D"nt">&lt;exclude/&gt;</span>
                <span class=3D"nt">&lt;/excludes&gt;</span>
            <span class=3D"nt">&lt;/configuration&gt;</span>
        <span class=3D"nt">&lt;/plugin&gt;</span>
    <span class=3D"nt">&lt;/plugins&gt;</span>
<span class=3D"nt">&lt;/build&gt;</span>
<span class=3D"c">&lt;!-- ... --&gt;</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Please see the
<a href=3D"https://maven.apache.org/surefire/maven-surefire-plugin/examples=
/inclusion-exclusion.html">Inclusions and Exclusions of Tests</a>
documentation for Maven Surefire for details.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"running-tests-build-maven-filter-tags"><a class=3D"anchor" href=
=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-build-m=
aven-filter-tags"></a>Filtering by Tags</h5>
<div class=3D"paragraph">
<p>You can filter tests by <a href=3D"https://junit.org/junit5/docs/current=
/user-guide/#running-tests-tags">tags</a> or
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-=
tag-expressions">tag expressions</a> using the following configuration
properties.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>to include <em>tags</em> or <em>tag expressions</em>, use <code>groups</=
code>.</p>
</li>
<li>
<p>to exclude <em>tags</em> or <em>tag expressions</em>, use <code>excluded=
Groups</code>.</p>
</li>
</ul>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"xml"><span class=3D"c">&l=
t;!-- ... --&gt;</span>
<span class=3D"nt">&lt;build&gt;</span>
    <span class=3D"nt">&lt;plugins&gt;</span>
        <span class=3D"nt">&lt;plugin&gt;</span>
            <span class=3D"nt">&lt;artifactId&gt;</span>maven-surefire-plug=
in<span class=3D"nt">&lt;/artifactId&gt;</span>
            <span class=3D"nt">&lt;version&gt;</span>2.22.2<span class=3D"n=
t">&lt;/version&gt;</span>
            <span class=3D"nt">&lt;configuration&gt;</span>
                <span class=3D"nt">&lt;groups&gt;</span>acceptance | !featu=
re-a<span class=3D"nt">&lt;/groups&gt;</span>
                <span class=3D"nt">&lt;excludedGroups&gt;</span>integration=
, regression<span class=3D"nt">&lt;/excludedGroups&gt;</span>
            <span class=3D"nt">&lt;/configuration&gt;</span>
        <span class=3D"nt">&lt;/plugin&gt;</span>
    <span class=3D"nt">&lt;/plugins&gt;</span>
<span class=3D"nt">&lt;/build&gt;</span>
<span class=3D"c">&lt;!-- ... --&gt;</span></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"running-tests-build-maven-config-params"><a class=3D"anchor" href=
=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-build-m=
aven-config-params"></a>Configuration Parameters</h5>
<div class=3D"paragraph">
<p>You can set JUnit Platform <a href=3D"https://junit.org/junit5/docs/curr=
ent/user-guide/#running-tests-config-params">configuration parameters</a> t=
o
influence test discovery and execution by declaring the <code>configuration=
Parameters</code>
property and providing key-value pairs using the Java <code>Properties</cod=
e> file syntax (as shown
below) or via the <code>junit-platform.properties</code> file.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"xml"><span class=3D"c">&l=
t;!-- ... --&gt;</span>
<span class=3D"nt">&lt;build&gt;</span>
    <span class=3D"nt">&lt;plugins&gt;</span>
        <span class=3D"nt">&lt;plugin&gt;</span>
            <span class=3D"nt">&lt;artifactId&gt;</span>maven-surefire-plug=
in<span class=3D"nt">&lt;/artifactId&gt;</span>
            <span class=3D"nt">&lt;version&gt;</span>2.22.2<span class=3D"n=
t">&lt;/version&gt;</span>
            <span class=3D"nt">&lt;configuration&gt;</span>
                <span class=3D"nt">&lt;properties&gt;</span>
                    <span class=3D"nt">&lt;configurationParameters&gt;</spa=
n>
                        junit.jupiter.conditions.deactivate =3D *
                        junit.jupiter.extensions.autodetection.enabled =3D =
true
                        junit.jupiter.testinstance.lifecycle.default =3D pe=
r_class
                    <span class=3D"nt">&lt;/configurationParameters&gt;</sp=
an>
                <span class=3D"nt">&lt;/properties&gt;</span>
            <span class=3D"nt">&lt;/configuration&gt;</span>
        <span class=3D"nt">&lt;/plugin&gt;</span>
    <span class=3D"nt">&lt;/plugins&gt;</span>
<span class=3D"nt">&lt;/build&gt;</span>
<span class=3D"c">&lt;!-- ... --&gt;</span></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"running-tests-build-ant"><a class=3D"anchor" href=3D"https://juni=
t.org/junit5/docs/current/user-guide/#running-tests-build-ant"></a>4.2.3. A=
nt</h4>
<div class=3D"paragraph">
<p>Starting with version <code>1.10.3</code> of <a href=3D"https://ant.apac=
he.org/">Ant</a>, a new
<a href=3D"https://ant.apache.org/manual/Tasks/junitlauncher.html"><code>ju=
nitlauncher</code></a> task has
been introduced to provide native support for launching tests on the JUnit =
Platform. The
<code>junitlauncher</code> task is solely responsible for launching the JUn=
it Platform and passing
it the selected collection of tests. The JUnit Platform then delegates to r=
egistered test
engines to discover and execute the tests.</p>
</div>
<div class=3D"paragraph">
<p>The <code>junitlauncher</code> task attempts to align as close as possib=
le with native Ant
constructs such as
<a href=3D"https://ant.apache.org/manual/Types/resources.html#collection">r=
esource collections</a>
for allowing users to select the tests that they want executed by test engi=
nes. This
gives the task a consistent and natural feel when compared to many other co=
re Ant tasks.</p>
</div>
<div class=3D"paragraph">
<p>Starting with version <code>1.10.6</code> of Ant, the <code>junitlaunche=
r</code> task supports
<a href=3D"https://ant.apache.org/manual/Tasks/junitlauncher.html#fork">for=
king the tests in a separate JVM</a>.</p>
</div>
<div class=3D"paragraph">
<p>The <code>build.xml</code> file in the <code><a href=3D"https://github.c=
om/junit-team/junit5-samples/tree/r5.8.2/junit5-jupiter-starter-ant">junit5=
-jupiter-starter-ant</a></code> project demonstrates how to use
the task and can serve as a starting point.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"basic-usage"><a class=3D"anchor" href=3D"https://junit.org/junit5=
/docs/current/user-guide/#basic-usage"></a>Basic Usage</h5>
<div class=3D"paragraph">
<p>The following example demonstrates how to configure the <code>junitlaunc=
her</code> task to select a
single test class (i.e., <code>org.myapp.test.MyFirstJUnit5Test</code>).</p=
>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"xml"><span class=3D"nt">&=
lt;path</span> <span class=3D"na">id=3D</span><span class=3D"s">"test.class=
path"</span><span class=3D"nt">&gt;</span>
    <span class=3D"c">&lt;!-- The location where you have your compiled cla=
sses --&gt;</span>
    <span class=3D"nt">&lt;pathelement</span> <span class=3D"na">location=
=3D</span><span class=3D"s">"${build.classes.dir}"</span> <span class=3D"nt=
">/&gt;</span>
<span class=3D"nt">&lt;/path&gt;</span>

<span class=3D"c">&lt;!-- ... --&gt;</span>

<span class=3D"nt">&lt;junitlauncher&gt;</span>
    <span class=3D"nt">&lt;classpath</span> <span class=3D"na">refid=3D</sp=
an><span class=3D"s">"test.classpath"</span> <span class=3D"nt">/&gt;</span=
>
    <span class=3D"nt">&lt;test</span> <span class=3D"na">name=3D</span><sp=
an class=3D"s">"org.myapp.test.MyFirstJUnit5Test"</span> <span class=3D"nt"=
>/&gt;</span>
<span class=3D"nt">&lt;/junitlauncher&gt;</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The <code>test</code> element allows you to specify a single test class =
that you want to be selected
and executed. The <code>classpath</code> element allows you to specify the =
classpath to be used to
launch the JUnit Platform. This classpath will also be used to locate test =
classes that
are part of the execution.</p>
</div>
<div class=3D"paragraph">
<p>The following example demonstrates how to configure the <code>junitlaunc=
her</code> task to select
test classes from multiple locations.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"xml"><span class=3D"nt">&=
lt;path</span> <span class=3D"na">id=3D</span><span class=3D"s">"test.class=
path"</span><span class=3D"nt">&gt;</span>
    <span class=3D"c">&lt;!-- The location where you have your compiled cla=
sses --&gt;</span>
    <span class=3D"nt">&lt;pathelement</span> <span class=3D"na">location=
=3D</span><span class=3D"s">"${build.classes.dir}"</span> <span class=3D"nt=
">/&gt;</span>
<span class=3D"nt">&lt;/path&gt;</span>
<span class=3D"c">&lt;!-- ... --&gt;</span>
<span class=3D"nt">&lt;junitlauncher&gt;</span>
    <span class=3D"nt">&lt;classpath</span> <span class=3D"na">refid=3D</sp=
an><span class=3D"s">"test.classpath"</span> <span class=3D"nt">/&gt;</span=
>
    <span class=3D"nt">&lt;testclasses</span> <span class=3D"na">outputdir=
=3D</span><span class=3D"s">"${output.dir}"</span><span class=3D"nt">&gt;</=
span>
        <span class=3D"nt">&lt;fileset</span> <span class=3D"na">dir=3D</sp=
an><span class=3D"s">"${build.classes.dir}"</span><span class=3D"nt">&gt;</=
span>
            <span class=3D"nt">&lt;include</span> <span class=3D"na">name=
=3D</span><span class=3D"s">"org/example/**/demo/**/"</span> <span class=3D=
"nt">/&gt;</span>
        <span class=3D"nt">&lt;/fileset&gt;</span>
        <span class=3D"nt">&lt;fileset</span> <span class=3D"na">dir=3D</sp=
an><span class=3D"s">"${some.other.dir}"</span><span class=3D"nt">&gt;</spa=
n>
            <span class=3D"nt">&lt;include</span> <span class=3D"na">name=
=3D</span><span class=3D"s">"org/myapp/**/"</span> <span class=3D"nt">/&gt;=
</span>
        <span class=3D"nt">&lt;/fileset&gt;</span>
    <span class=3D"nt">&lt;/testclasses&gt;</span>
<span class=3D"nt">&lt;/junitlauncher&gt;</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>In the above example, the <code>testclasses</code> element allows you to=
 select multiple test
classes that reside in different locations.</p>
</div>
<div class=3D"paragraph">
<p>For further details on usage and configuration options please refer to t=
he official Ant
documentation for the
<a href=3D"https://ant.apache.org/manual/Tasks/junitlauncher.html"><code>ju=
nitlauncher</code> task</a>.</p>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"running-tests-console-launcher"><a class=3D"anchor" href=3D"https=
://junit.org/junit5/docs/current/user-guide/#running-tests-console-launcher=
"></a>4.3. Console Launcher</h3>
<div class=3D"paragraph">
<p>The <code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit=
.platform.console/org/junit/platform/console/ConsoleLauncher.html">ConsoleL=
auncher</a></code> is a command-line Java application that lets you launch =
the JUnit
Platform from the console. For example, it can be used to run JUnit Vintage=
 and JUnit
Jupiter tests and print test execution results to the console.</p>
</div>
<div class=3D"paragraph">
<p>An executable <code>junit-platform-console-standalone-1.8.2.jar</code> w=
ith all
dependencies included is published in the <a href=3D"https://search.maven.o=
rg/">Maven Central</a> repository under the
<a href=3D"https://repo1.maven.org/maven2/org/junit/platform/junit-platform=
-console-standalone">junit-platform-console-standalone</a>
directory. You can <a href=3D"https://docs.oracle.com/javase/tutorial/deplo=
yment/jar/run.html">run</a>
the standalone <code>ConsoleLauncher</code> as shown below.</p>
</div>
<div class=3D"paragraph">
<p><code>java -jar junit-platform-console-standalone-1.8.2.jar &lt;<a href=
=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-console=
-launcher-options">Options</a>&gt;</code></p>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s an example of its output:</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>=E2=94=9C=E2=94=80 JUnit Vintage
=E2=94=82  =E2=94=94=E2=94=80 example.JUnit4Tests
=E2=94=82     =E2=94=94=E2=94=80 standardJUnit4Test =E2=9C=94
=E2=94=94=E2=94=80 JUnit Jupiter
   =E2=94=9C=E2=94=80 StandardTests
   =E2=94=82  =E2=94=9C=E2=94=80 succeedingTest() =E2=9C=94
   =E2=94=82  =E2=94=94=E2=94=80 skippedTest() =E2=86=B7 for demonstration =
purposes
   =E2=94=94=E2=94=80 A special test case
      =E2=94=9C=E2=94=80 Custom test name containing spaces =E2=9C=94
      =E2=94=9C=E2=94=80 =E2=95=AF=C2=B0=E2=96=A1=C2=B0)=E2=95=AF =E2=9C=94
      =E2=94=94=E2=94=80 =F0=9F=98=B1 =E2=9C=94

Test run finished after 64 ms
[         5 containers found      ]
[         0 containers skipped    ]
[         5 containers started    ]
[         0 containers aborted    ]
[         5 containers successful ]
[         0 containers failed     ]
[         6 tests found           ]
[         1 tests skipped         ]
[         5 tests started         ]
[         0 tests aborted         ]
[         5 tests successful      ]
[         0 tests failed          ]</pre>
</div>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
<div class=3D"title">Exit Code</div>
The <code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.pl=
atform.console/org/junit/platform/console/ConsoleLauncher.html">ConsoleLaun=
cher</a></code> exits with a status code of <code>1</code> if any container=
s or tests
failed. If no tests are discovered and the <code>--fail-if-no-tests</code> =
command-line option is
supplied, the <code>ConsoleLauncher</code> exits with a status code of <cod=
e>2</code>. Otherwise the exit code
is <code>0</code>.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"sect3">
<h4 id=3D"running-tests-console-launcher-options"><a class=3D"anchor" href=
=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-console=
-launcher-options"></a>4.3.1. Options</h4>
<div class=3D"listingblock">
<div class=3D"content">
<pre>Usage: ConsoleLauncher [-h] [--disable-ansi-colors] [--disable-banner]
                       [--fail-if-no-tests] [--scan-modules] [--scan-classp=
ath[=3DPATH[;|:
                       PATH...]]]... [--details=3DMODE] [--details-theme=3D=
THEME]
                       [--reports-dir=3DDIR] [-c=3DCLASS]... [--config=3DKE=
Y=3DVALUE]... [-cp=3DPATH
                       [;|:PATH...]]... [-d=3DDIR]... [-e=3DID]... [-E=3DID=
]...
                       [--exclude-package=3DPKG]... [-f=3DFILE]... [--inclu=
de-package=3DPKG]...
                       [-m=3DNAME]... [-n=3DPATTERN]... [-N=3DPATTERN]... [=
-o=3DNAME]...
                       [-p=3DPKG]... [-r=3DRESOURCE]... [-t=3DTAG]... [-T=
=3DTAG]... [-u=3DURI]...
Launches the JUnit Platform from the console.
  -h, --help                 Display help information.
      --disable-ansi-colors  Disable ANSI colors in output (not supported b=
y all
                               terminals).
      --disable-banner       Disable print out of the welcome message.
      --details=3DMODE         Select an output details mode for when tests=
 are executed.
                               Use one of: none, summary, flat, tree, verbo=
se. If 'none'
                               is selected, then only the summary and test =
failures are
                               shown. Default: tree.
      --details-theme=3DTHEME  Select an output details tree theme for when=
 tests are
                               executed. Use one of: ascii, unicode. Defaul=
t: unicode.
      -cp, --classpath, --class-path=3DPATH[;|:PATH...]
                             Provide additional classpath entries -- for ex=
ample, for
                               adding engines and their dependencies. This =
option can be
                               repeated.
      --fail-if-no-tests     Fail and return exit status code 2 if no tests=
 are found.
      --reports-dir=3DDIR      Enable report output into a specified local =
directory (will
                               be created if it does not exist).
      --scan-modules         EXPERIMENTAL: Scan all resolved modules for te=
st discovery.
  -o, --select-module=3DNAME   EXPERIMENTAL: Select single module for test =
discovery. This
                               option can be repeated.
      --scan-classpath, --scan-class-path[=3DPATH[;|:PATH...]]
                             Scan all directories on the classpath or expli=
cit classpath
                               roots. Without arguments, only directories o=
n the system
                               classpath as well as additional classpath en=
tries supplied
                               via -cp (directories and JAR files) are scan=
ned. Explicit
                               classpath roots that are not on the classpat=
h will be
                               silently ignored. This option can be repeate=
d.
  -u, --select-uri=3DURI       Select a URI for test discovery. This option=
 can be repeated.
  -f, --select-file=3DFILE     Select a file for test discovery. This optio=
n can be
                               repeated.
  -d, --select-directory=3DDIR Select a directory for test discovery. This =
option can be
                               repeated.
  -p, --select-package=3DPKG   Select a package for test discovery. This op=
tion can be
                               repeated.
  -c, --select-class=3DCLASS   Select a class for test discovery. This opti=
on can be
                               repeated.
  -m, --select-method=3DNAME   Select a method for test discovery. This opt=
ion can be
                               repeated.
  -r, --select-resource=3DRESOURCE
                             Select a classpath resource for test discovery=
. This option
                               can be repeated.
  -n, --include-classname=3DPATTERN
                             Provide a regular expression to include only c=
lasses whose
                               fully qualified names match. To avoid loadin=
g classes
                               unnecessarily, the default pattern only incl=
udes class
                               names that begin with "Test" or end with "Te=
st" or
                               "Tests". When this option is repeated, all p=
atterns will
                               be combined using OR semantics. Default: [^(=
Test.*|.+[.$]
                               Test.*|.*Tests?)$]
  -N, --exclude-classname=3DPATTERN
                             Provide a regular expression to exclude those =
classes whose
                               fully qualified names match. When this optio=
n is repeated,
                               all patterns will be combined using OR seman=
tics.
      --include-package=3DPKG  Provide a package to be included in the test=
 run. This
                               option can be repeated.
      --exclude-package=3DPKG  Provide a package to be excluded from the te=
st run. This
                               option can be repeated.
  -t, --include-tag=3DTAG      Provide a tag or tag expression to include o=
nly tests whose
                               tags match. When this option is repeated, al=
l patterns
                               will be combined using OR semantics.
  -T, --exclude-tag=3DTAG      Provide a tag or tag expression to exclude t=
hose tests whose
                               tags match. When this option is repeated, al=
l patterns
                               will be combined using OR semantics.
  -e, --include-engine=3DID    Provide the ID of an engine to be included i=
n the test run.
                               This option can be repeated.
  -E, --exclude-engine=3DID    Provide the ID of an engine to be excluded f=
rom the test
                               run. This option can be repeated.
      --config=3DKEY=3DVALUE     Set a configuration parameter for test dis=
covery and
                               execution. This option can be repeated.</pre=
>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"running-tests-console-launcher-argument-files"><a class=3D"anchor=
" href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-c=
onsole-launcher-argument-files"></a>4.3.2. Argument Files (@-files)</h4>
<div class=3D"paragraph">
<p>On some platforms you may run into system limitations on the length of a=
 command line
when creating a command line with lots of options or with long arguments.</=
p>
</div>
<div class=3D"paragraph">
<p>Since version 1.3, the <code>ConsoleLauncher</code> supports <em>argumen=
t files</em>, also known as
<em>@-files</em>. Argument files are files that themselves contain argument=
s to be passed to the
command. When the underlying <a href=3D"https://github.com/remkop/picocli">=
picocli</a> command line
parser encounters an argument beginning with the character <code>@</code>, =
it expands the contents
of that file into the argument list.</p>
</div>
<div class=3D"paragraph">
<p>The arguments within a file can be separated by spaces or newlines. If a=
n argument
contains embedded whitespace, the whole argument should be wrapped in doubl=
e or single
quotes=E2=80=89=E2=80=94=E2=80=89for example, <code>"-f=3DMy Files/Stuff.ja=
va"</code>.</p>
</div>
<div class=3D"paragraph">
<p>If the argument file does not exist or cannot be read, the argument will=
 be treated
literally and will not be removed. This will likely result in an "unmatched=
 argument"
error message. You can troubleshoot such errors by executing the command wi=
th the
<code>picocli.trace</code> system property set to <code>DEBUG</code>.</p>
</div>
<div class=3D"paragraph">
<p>Multiple <em>@-files</em> may be specified on the command line. The spec=
ified path may be
relative to the current directory or absolute.</p>
</div>
<div class=3D"paragraph">
<p>You can pass a real parameter with an initial <code>@</code> character b=
y escaping it with an
additional <code>@</code> symbol. For example, <code>@@somearg</code> will =
become <code>@somearg</code> and will not be
subject to expansion.</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"running-tests-junit-platform-runner"><a class=3D"anchor" href=3D"=
https://junit.org/junit5/docs/current/user-guide/#running-tests-junit-platf=
orm-runner"></a>4.4. Using JUnit 4 to run the JUnit Platform</h3>
<div class=3D"admonitionblock warning">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-warning" title=3D"Warning"></i>
</td>
<td class=3D"content">
<div class=3D"title">The <code>JUnitPlatform</code> runner has been depreca=
ted</div>
<div class=3D"paragraph">
<p>The <code>JUnitPlatform</code> runner was developed by the JUnit team as=
 an interim solution for
running test suites and tests on the JUnit Platform in a JUnit 4 environmen=
t.</p>
</div>
<div class=3D"paragraph">
<p>In recent years, all mainstream build tools and IDEs provide built-in su=
pport for running
tests directly on the JUnit Platform.</p>
</div>
<div class=3D"paragraph">
<p>In addition, the introduction of <code>@Suite</code> support provided by=
 the
<code>junit-platform-suite-engine</code> module makes the <code>JUnitPlatfo=
rm</code> runner obsolete. See
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#junit-platform=
-suite-engine">JUnit Platform Suite Engine</a> for details.</p>
</div>
<div class=3D"paragraph">
<p>The <code>JUnitPlatform</code> runner and <code>@UseTechnicalNames</code=
> annotation have therefore been
deprecated in JUnit Platform 1.8 and will be removed in JUnit Platform 2.0.=
</p>
</div>
<div class=3D"paragraph">
<p>If you are using the <code>JUnitPlatform</code> runner, please migrate t=
o the <code>@Suite</code> support.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>The <code>JUnitPlatform</code> runner is a JUnit 4 based <code>Runner</c=
ode> which enables you to run any test
whose programming model is supported on the JUnit Platform in a JUnit 4 env=
ironment=E2=80=89=E2=80=94=E2=80=89for example, a JUnit Jupiter test class.=
</p>
</div>
<div class=3D"paragraph">
<p>Annotating a class with <code>@RunWith(JUnitPlatform.class)</code> allow=
s it to be run with IDEs and
build systems that support JUnit 4 but do not yet support the JUnit Platfor=
m directly.</p>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
Since the JUnit Platform has features that JUnit 4 does not have, the runne=
r is
only able to support a subset of the JUnit Platform functionality, especial=
ly with regard
to reporting (see <a href=3D"https://junit.org/junit5/docs/current/user-gui=
de/#running-tests-junit-platform-runner-technical-names">Display Names vs. =
Technical Names</a>).
</td>
</tr>
</tbody></table>
</div>
<div class=3D"sect3">
<h4 id=3D"running-tests-junit-platform-runner-setup"><a class=3D"anchor" hr=
ef=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-junit=
-platform-runner-setup"></a>4.4.1. Setup</h4>
<div class=3D"paragraph">
<p>You need the following artifacts and their dependencies on the classpath=
. See
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#dependency-met=
adata">Dependency Metadata</a> for details regarding group IDs, artifact ID=
s, and versions.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"running-tests-junit-platform-runner-setup-explicit-dependencies">=
<a class=3D"anchor" href=3D"https://junit.org/junit5/docs/current/user-guid=
e/#running-tests-junit-platform-runner-setup-explicit-dependencies"></a>Exp=
licit Dependencies</h5>
<div class=3D"ulist">
<ul>
<li>
<p><code>junit-platform-runner</code> in <em>test</em> scope: location of t=
he <code>JUnitPlatform</code> runner</p>
</li>
<li>
<p><code>junit-4.13.2.jar</code> in <em>test</em> scope: to run tests using=
 JUnit 4</p>
</li>
<li>
<p><code>junit-jupiter-api</code> in <em>test</em> scope: API for writing t=
ests using JUnit Jupiter,
including <code>@Test</code>, etc.</p>
</li>
<li>
<p><code>junit-jupiter-engine</code> in <em>test runtime</em> scope: implem=
entation of the <code>TestEngine</code> API
for JUnit Jupiter</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"running-tests-junit-platform-runner-setup-transitive-dependencies=
"><a class=3D"anchor" href=3D"https://junit.org/junit5/docs/current/user-gu=
ide/#running-tests-junit-platform-runner-setup-transitive-dependencies"></a=
>Transitive Dependencies</h5>
<div class=3D"ulist">
<ul>
<li>
<p><code>junit-platform-suite-api</code> in <em>test</em> scope</p>
</li>
<li>
<p><code>junit-platform-suite-commons</code> in <em>test</em> scope</p>
</li>
<li>
<p><code>junit-platform-launcher</code> in <em>test</em> scope</p>
</li>
<li>
<p><code>junit-platform-engine</code> in <em>test</em> scope</p>
</li>
<li>
<p><code>junit-platform-commons</code> in <em>test</em> scope</p>
</li>
<li>
<p><code>opentest4j</code> in <em>test</em> scope</p>
</li>
</ul>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"running-tests-junit-platform-runner-technical-names"><a class=3D"=
anchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#running-t=
ests-junit-platform-runner-technical-names"></a>4.4.2. Display Names vs. Te=
chnical Names</h4>
<div class=3D"paragraph">
<p>To define a custom <em>display name</em> for the class run via <code>@Ru=
nWith(JUnitPlatform.class)</code>
annotate the class with <code>@SuiteDisplayName</code> and provide a custom=
 value.</p>
</div>
<div class=3D"paragraph">
<p>By default, <em>display names</em> will be used for test artifacts; howe=
ver, when the
<code>JUnitPlatform</code> runner is used to execute tests with a build too=
l such as Gradle or
Maven, the generated test report often needs to include the <em>technical n=
ames</em> of test
artifacts =E2=80=94 for example, fully qualified class names =E2=80=94 inst=
ead of shorter display names
like the simple name of a test class or a custom display name containing sp=
ecial
characters. To enable technical names for reporting purposes, declare the
<code>@UseTechnicalNames</code> annotation alongside <code>@RunWith(JUnitPl=
atform.class)</code>.</p>
</div>
<div class=3D"paragraph">
<p>Note that the presence of <code>@UseTechnicalNames</code> overrides any =
custom display name
configured via <code>@SuiteDisplayName</code>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"running-tests-junit-platform-runner-single-test"><a class=3D"anch=
or" href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests=
-junit-platform-runner-single-test"></a>4.4.3. Single Test Class</h4>
<div class=3D"paragraph">
<p>One way to use the <code>JUnitPlatform</code> runner is to annotate a te=
st class with
<code>@RunWith(JUnitPlatform.class)</code> directly. Please note that the t=
est methods in the
following example are annotated with <code>org.junit.jupiter.api.Test</code=
> (JUnit Jupiter), not
<code>org.junit.Test</code> (JUnit 4). Moreover, in this case the test clas=
s must be <code>public</code>;
otherwise, some IDEs and build tools might not recognize it as a JUnit 4 te=
st class.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">static</span> <span class=3D"n">org</span>=
<span class=3D"o">.</span><span class=3D"na">junit</span><span class=3D"o">=
.</span><span class=3D"na">jupiter</span><span class=3D"o">.</span><span cl=
ass=3D"na">api</span><span class=3D"o">.</span><span class=3D"na">Assertion=
s</span><span class=3D"o">.</span><span class=3D"na">fail</span><span class=
=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.runner.RunWit=
h</span><span class=3D"o">;</span>

<span class=3D"nd">@RunWith</span><span class=3D"o">(</span><span class=3D"=
n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span><span=
 class=3D"o">.</span><span class=3D"na">platform</span><span class=3D"o">.<=
/span><span class=3D"na">runner</span><span class=3D"o">.</span><span class=
=3D"na">JUnitPlatform</span><span class=3D"o">.</span><span class=3D"na">cl=
ass</span><span class=3D"o">)</span>
<span class=3D"kd">public</span> <span class=3D"kd">class</span> <span clas=
s=3D"nc">JUnitPlatformClassDemo</span> <span class=3D"o">{</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">succeedingTest</span>=
<span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"cm">/* no-op */</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">failingTest</span><sp=
an class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">fail</span><span class=3D"o">(</span><span class=
=3D"s">"Failing for failing's sake."</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"running-tests-junit-platform-runner-test-suite"><a class=3D"ancho=
r" href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-=
junit-platform-runner-test-suite"></a>4.4.4. Test Suite</h4>
<div class=3D"paragraph">
<p>If you have multiple test classes you can create a test suite as can be =
seen in the
following example.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">org.junit.platform.suite.api.SelectPackage=
s</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.suit=
e.api.SuiteDisplayName</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.runner.RunWit=
h</span><span class=3D"o">;</span>

<span class=3D"nd">@RunWith</span><span class=3D"o">(</span><span class=3D"=
n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span><span=
 class=3D"o">.</span><span class=3D"na">platform</span><span class=3D"o">.<=
/span><span class=3D"na">runner</span><span class=3D"o">.</span><span class=
=3D"na">JUnitPlatform</span><span class=3D"o">.</span><span class=3D"na">cl=
ass</span><span class=3D"o">)</span>
<span class=3D"nd">@SuiteDisplayName</span><span class=3D"o">(</span><span =
class=3D"s">"JUnit Platform Suite Demo"</span><span class=3D"o">)</span>
<span class=3D"nd">@SelectPackages</span><span class=3D"o">(</span><span cl=
ass=3D"s">"example"</span><span class=3D"o">)</span>
<span class=3D"kd">public</span> <span class=3D"kd">class</span> <span clas=
s=3D"nc">JUnitPlatformSuiteDemo</span> <span class=3D"o">{</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The <code>JUnitPlatformSuiteDemo</code> will discover and run all tests =
in the <code>example</code> package and
its subpackages. By default, it will only include test classes whose names =
either begin
with <code>Test</code> or end with <code>Test</code> or <code>Tests</code>.=
</p>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
<div class=3D"title">Additional Configuration Options</div>
There are more configuration options for discovering and filtering tests th=
an just
<code>@SelectPackages</code>. Please consult the Javadoc of the <code><a hr=
ef=3D"https://junit.org/junit5/docs/current/api/org.junit.platform.suite.ap=
i/org/junit/platform/suite/api/package-summary.html">org.junit.platform.sui=
te.api</a></code> package for
further details.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"admonitionblock warning">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-warning" title=3D"Warning"></i>
</td>
<td class=3D"content">
Test classes and suites annotated with <code>@RunWith(JUnitPlatform.class)<=
/code>
<strong>cannot</strong> be executed directly on the JUnit Platform (or as a=
 "JUnit 5" test as
documented in some IDEs). Such classes and suites can only be executed usin=
g JUnit 4
infrastructure.
</td>
</tr>
</tbody></table>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"running-tests-config-params"><a class=3D"anchor" href=3D"https://=
junit.org/junit5/docs/current/user-guide/#running-tests-config-params"></a>=
4.5. Configuration Parameters</h3>
<div class=3D"paragraph">
<p>In addition to instructing the platform which test classes and test engi=
nes to include,
which packages to scan, etc., it is sometimes necessary to provide addition=
al custom
configuration parameters that are specific to a particular test engine, lis=
tener, or
registered extension. For example, the JUnit Jupiter <code>TestEngine</code=
> supports <em>configuration
parameters</em> for the following use cases.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tes=
ts-test-instance-lifecycle-changing-default">Changing the Default Test Inst=
ance Lifecycle</a></p>
</li>
<li>
<p><a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-=
registration-automatic-enabling">Enabling Automatic Extension Detection</a>=
</p>
</li>
<li>
<p><a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-=
conditions-deactivation">Deactivating Conditions</a></p>
</li>
<li>
<p><a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tes=
ts-display-name-generator-default">Setting the Default Display Name Generat=
or</a></p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p><em>Configuration Parameters</em> are text-based key-value pairs that ca=
n be supplied to test
engines running on the JUnit Platform via one of the following mechanisms.<=
/p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>The <code>configurationParameter()</code> and <code>configurationParamet=
ers()</code> methods in the
<code>LauncherDiscoveryRequestBuilder</code> which is used to build a reque=
st supplied to the
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#launcher-api">=
<code>Launcher</code> API</a>. When running tests via one of the tools prov=
ided
by the JUnit Platform you can specify configuration parameters as follows:<=
/p>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tes=
ts-console-launcher">Console Launcher</a>: use the <code>--config</code>
command-line option.</p>
</li>
<li>
<p><a href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tes=
ts-build-gradle-config-params">Gradle</a>: use the
<code>systemProperty</code> or <code>systemProperties</code> DSL.</p>
</li>
<li>
<p><a href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tes=
ts-build-maven-config-params">Maven Surefire provider</a>: use the
<code>configurationParameters</code> property.</p>
</li>
</ul>
</div>
</li>
<li>
<p>JVM system properties.</p>
</li>
<li>
<p>The JUnit Platform configuration file: a file named <code>junit-platform=
.properties</code> in the
root of the class path that follows the syntax rules for a Java <code>Prope=
rties</code> file.</p>
</li>
</ol>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
Configuration parameters are looked up in the exact order defined above.
Consequently, configuration parameters supplied directly to the <code>Launc=
her</code> take
precedence over those supplied via system properties and the configuration =
file.
Similarly, configuration parameters supplied via system properties take pre=
cedence over
those supplied via the configuration file.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"sect3">
<h4 id=3D"running-tests-config-params-deactivation-pattern"><a class=3D"anc=
hor" href=3D"https://junit.org/junit5/docs/current/user-guide/#running-test=
s-config-params-deactivation-pattern"></a>4.5.1. Pattern Matching Syntax</h=
4>
<div class=3D"paragraph">
<p>This section describes the pattern matching syntax that is applied to th=
e <em>configuration
parameters</em> used for the following features.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-=
conditions-deactivation">Deactivating Conditions</a></p>
</li>
<li>
<p><a href=3D"https://junit.org/junit5/docs/current/user-guide/#launcher-ap=
i-listeners-custom-deactivation">Deactivating a TestExecutionListener</a></=
p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>If the value for the given <em>configuration parameter</em> consists sol=
ely of an asterisk
(<code>*</code>), the pattern will match against all candidate classes. Oth=
erwise, the value will
be treated as a comma-separated list of patterns where each pattern will be=
 matched
against the fully qualified class name (<em>FQCN</em>) of each candidate cl=
ass. Any dot (<code>.</code>) in
a pattern will match against a dot (<code>.</code>) or a dollar sign (<code=
>$</code>) in a FQCN. Any asterisk
(<code>*</code>) will match against one or more characters in a FQCN. All o=
ther characters in a
pattern will be matched one-to-one against a FQCN.</p>
</div>
<div class=3D"paragraph">
<p>Examples:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code>*</code>: matches all candidate classes.</p>
</li>
<li>
<p><code>org.junit.*</code>: matches all candidate classes under the <code>=
org.junit</code> base package and
any of its subpackages.</p>
</li>
<li>
<p><code>*.MyCustomImpl</code>: matches every candidate class whose simple =
class name is exactly
<code>MyCustomImpl</code>.</p>
</li>
<li>
<p><code>*System*</code>: matches every candidate class whose FQCN contains=
 <code>System</code>.</p>
</li>
<li>
<p><code>*System*+, +*Unit*</code>: matches every candidate class whose FQC=
N contains <code>System</code> or
<code>Unit</code>.</p>
</li>
<li>
<p><code>org.example.MyCustomImpl</code>: matches the candidate class whose=
 FQCN is exactly
<code>org.example.MyCustomImpl</code>.</p>
</li>
<li>
<p><code>org.example.MyCustomImpl, org.example.TheirCustomImpl</code>: matc=
hes candidate classes whose
FQCN is exactly <code>org.example.MyCustomImpl</code> or <code>org.example.=
TheirCustomImpl</code>.</p>
</li>
</ul>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"running-tests-tags"><a class=3D"anchor" href=3D"https://junit.org=
/junit5/docs/current/user-guide/#running-tests-tags"></a>4.6. Tags</h3>
<div class=3D"paragraph">
<p>Tags are a JUnit Platform concept for marking and filtering tests. The p=
rogramming model
for adding tags to containers and tests is defined by the testing framework=
. For example,
in JUnit Jupiter based tests, the <code>@Tag</code> annotation (see
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-=
tagging-and-filtering">Tagging and Filtering</a>) should be used. For JUnit=
 4 based tests, the
Vintage engine maps <code>@Category</code> annotations to tags (see
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#migrating-from=
-junit4-categories-support">Categories Support</a>). Other testing framewor=
ks may define their
own annotation or other means for users to specify tags.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"running-tests-tag-syntax-rules"><a class=3D"anchor" href=3D"https=
://junit.org/junit5/docs/current/user-guide/#running-tests-tag-syntax-rules=
"></a>4.6.1. Syntax Rules for Tags</h4>
<div class=3D"paragraph">
<p>Regardless how a tag is specified, the JUnit Platform enforces the follo=
wing rules:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>A tag must not be <code>null</code> or <em>blank</em>.</p>
</li>
<li>
<p>A <em>trimmed</em> tag must not contain whitespace.</p>
</li>
<li>
<p>A <em>trimmed</em> tag must not contain ISO control characters.</p>
</li>
<li>
<p>A <em>trimmed</em> tag must not contain any of the following <em>reserve=
d characters</em>.</p>
<div class=3D"ulist">
<ul>
<li>
<p><code>,</code>: <em>comma</em></p>
</li>
<li>
<p><code>(</code>: <em>left parenthesis</em></p>
</li>
<li>
<p><code>)</code>: <em>right parenthesis</em></p>
</li>
<li>
<p><code>&amp;</code>: <em>ampersand</em></p>
</li>
<li>
<p><code>|</code>: <em>vertical bar</em></p>
</li>
<li>
<p><code>!</code>: <em>exclamation point</em></p>
</li>
</ul>
</div>
</li>
</ul>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
In the above context, "trimmed" means that leading and trailing whitespace
characters have been removed.
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"running-tests-tag-expressions"><a class=3D"anchor" href=3D"https:=
//junit.org/junit5/docs/current/user-guide/#running-tests-tag-expressions">=
</a>4.6.2. Tag Expressions</h4>
<div class=3D"paragraph">
<p>Tag expressions are boolean expressions with the operators <code>!</code=
>, <code>&amp;</code> and <code>|</code>. In addition,
<code>(</code> and <code>)</code> can be used to adjust for operator preced=
ence.</p>
</div>
<div class=3D"paragraph">
<p>Two special expressions are supported, <code>any()</code> and <code>none=
()</code>, which select all tests <em>with</em>
any tags at all, and all tests <em>without</em> any tags, respectively.
These special expressions may be combined with other expressions just like =
normal tags.</p>
</div>
<table class=3D"tableblock frame-all grid-all stretch">
<caption class=3D"title">Table 2. Operators (in descending order of precede=
nce)</caption>
<colgroup>
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3334%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Operator</th>
<th class=3D"tableblock halign-left valign-top">Meaning</th>
<th class=3D"tableblock halign-left valign-top">Associativity</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>!</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">not=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">rig=
ht</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>&amp;</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">and=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">lef=
t</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>|</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">or<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">lef=
t</p></td>
</tr>
</tbody>
</table>
<div class=3D"paragraph">
<p>If you are tagging your tests across multiple dimensions, tag expression=
s help you to
select which tests to execute. When tagging by test type (e.g., <em>micro</=
em>, <em>integration</em>,
<em>end-to-end</em>) and feature (e.g., <strong>product</strong>, <strong>c=
atalog</strong>, <strong>shipping</strong>), the following tag
expressions can be useful.</p>
</div>
<table class=3D"tableblock frame-all grid-all stretch">
<colgroup>
<col style=3D"width: 40%;">
<col style=3D"width: 60%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Tag Expression</th>
<th class=3D"tableblock halign-left valign-top">Selection</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">pro=
duct</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">all=
 tests for <strong>product</strong></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">cat=
alog | shipping</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">all=
 tests for <strong>catalog</strong> plus all tests for <strong>shipping</st=
rong></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">cat=
alog &amp; shipping</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">all=
 tests for the intersection between <strong>catalog</strong> and <strong>sh=
ipping</strong></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">pro=
duct &amp; !end-to-end</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">all=
 tests for <strong>product</strong>, but not the <em>end-to-end</em> tests<=
/p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">(mi=
cro | integration) &amp; (product | shipping)</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">all=
 <em>micro</em> or <em>integration</em> tests for <strong>product</strong> =
or <strong>shipping</strong></p></td>
</tr>
</tbody>
</table>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"running-tests-capturing-output"><a class=3D"anchor" href=3D"https=
://junit.org/junit5/docs/current/user-guide/#running-tests-capturing-output=
"></a>4.7. Capturing Standard Output/Error</h3>
<div class=3D"paragraph">
<p>Since version 1.3, the JUnit Platform provides opt-in support for captur=
ing output
printed to <code>System.out</code> and <code>System.err</code>. To enable i=
t, set the
<code>junit.platform.output.capture.stdout</code> and/or <code>junit.platfo=
rm.output.capture.stderr</code>
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-=
config-params">configuration parameter</a> to <code>true</code>. In additio=
n, you may
configure the maximum number of buffered bytes to be used per executed test=
 or container
using <code>junit.platform.output.capture.maxBuffer</code>.</p>
</div>
<div class=3D"paragraph">
<p>If enabled, the JUnit Platform captures the corresponding output and pub=
lishes it as a
report entry using the <code>stdout</code> or <code>stderr</code> keys to a=
ll registered
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.platfo=
rm.launcher/org/junit/platform/launcher/TestExecutionListener.html">TestExe=
cutionListener</a></code> instances immediately before reporting the test o=
r container as
finished.</p>
</div>
<div class=3D"paragraph">
<p>Please note that the captured output will only contain output emitted by=
 the thread that
was used to execute a container or test. Any output by other threads will b=
e omitted
because particularly when
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-=
parallel-execution">executing tests in parallel</a> it would be impossible
to attribute it to a specific test or container.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"running-tests-listeners"><a class=3D"anchor" href=3D"https://juni=
t.org/junit5/docs/current/user-guide/#running-tests-listeners"></a>4.8. Usi=
ng Listeners</h3>
<div class=3D"paragraph">
<p>The JUnit Platform provides the following listener APIs that allow JUnit=
, third parties,
and custom user code to react to events fired at various points during the =
discovery and
execution of a <code>TestPlan</code>.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.pla=
tform.launcher/org/junit/platform/launcher/LauncherSessionListener.html">La=
uncherSessionListener</a></code>: receives events when a <code><a href=3D"h=
ttps://junit.org/junit5/docs/current/api/org.junit.platform.launcher/org/ju=
nit/platform/launcher/LauncherSession.html">LauncherSession</a></code> is o=
pened and
closed.</p>
</li>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.pla=
tform.launcher/org/junit/platform/launcher/LauncherDiscoveryListener.html">=
LauncherDiscoveryListener</a></code>: receives events that occur during tes=
t discovery.</p>
</li>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.pla=
tform.launcher/org/junit/platform/launcher/TestExecutionListener.html">Test=
ExecutionListener</a></code>: receives events that occur during test execut=
ion.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>The <code>LauncherSessionListener</code> API is typically implemented by=
 build tools or IDEs and
registered automatically for you in order to support some feature of the bu=
ild tool or IDE.</p>
</div>
<div class=3D"paragraph">
<p>The <code>LauncherDiscoveryListener</code> and <code>TestExecutionListen=
er</code> APIs are often implemented in
order to produce some form of report or to display a graphical representati=
on of the test
plan in an IDE. Such listeners may be implemented and automatically registe=
red by a build
tool or IDE, or they may be included in a third-party library =E2=80=93 pot=
entially registered
for you automatically. You can also implement and register your own listene=
rs.</p>
</div>
<div class=3D"paragraph">
<p>For details on registering and configuring listeners, see the following =
sections of this
guide.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"https://junit.org/junit5/docs/current/user-guide/#launcher-ap=
i-launcher-session-listeners-custom">Registering a LauncherSessionListener<=
/a></p>
</li>
<li>
<p><a href=3D"https://junit.org/junit5/docs/current/user-guide/#launcher-ap=
i-launcher-discovery-listeners-custom">Registering a LauncherDiscoveryListe=
ner</a></p>
</li>
<li>
<p><a href=3D"https://junit.org/junit5/docs/current/user-guide/#launcher-ap=
i-listeners-custom">Registering a TestExecutionListener</a></p>
</li>
<li>
<p><a href=3D"https://junit.org/junit5/docs/current/user-guide/#launcher-ap=
i-listeners-config">Configuring a TestExecutionListener</a></p>
</li>
<li>
<p><a href=3D"https://junit.org/junit5/docs/current/user-guide/#launcher-ap=
i-listeners-custom-deactivation">Deactivating a TestExecutionListener</a></=
p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>The JUnit Platform provides the following listeners which you may wish t=
o use with your
test suite.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><a href=3D"https://junit.org/junit5/docs/current/user=
-guide/#running-tests-listeners-flight-recorder">Flight Recorder Support</a=
> </dt>
<dd>
<p><code>FlightRecordingExecutionListener</code> and <code>FlightRecordingD=
iscoveryListener</code> that generate
Java Flight Recorder events during test discovery and execution.</p>
</dd>
<dt class=3D"hdlist1"><code><a href=3D"https://junit.org/junit5/docs/curren=
t/api/org.junit.platform.reporting/org/junit/platform/reporting/legacy/xml/=
LegacyXmlReportGeneratingListener.html">LegacyXmlReportGeneratingListener</=
a></code> </dt>
<dd>
<p><code>TestExecutionListener</code> that generates XML reports compatible=
 with the de facto
standard for JUnit 4 based test reports. See <a href=3D"https://junit.org/j=
unit5/docs/current/user-guide/#junit-platform-reporting">JUnit Platform Rep=
orting</a> for
details.</p>
</dd>
<dt class=3D"hdlist1"><code><a href=3D"https://junit.org/junit5/docs/curren=
t/api/org.junit.platform.launcher/org/junit/platform/launcher/listeners/Log=
gingListener.html">LoggingListener</a></code> </dt>
<dd>
<p><code>TestExecutionListener</code> for logging informational messages fo=
r all events via a
<code>BiConsumer</code> that consumes <code>Throwable</code> and <code>Supp=
lier&lt;String&gt;</code>.</p>
</dd>
<dt class=3D"hdlist1"><code><a href=3D"https://junit.org/junit5/docs/curren=
t/api/org.junit.platform.launcher/org/junit/platform/launcher/listeners/Sum=
maryGeneratingListener.html">SummaryGeneratingListener</a></code> </dt>
<dd>
<p><code>TestExecutionListener</code> that generates a summary of the test =
execution which can be
printed via a <code>PrintWriter</code>.</p>
</dd>
<dt class=3D"hdlist1"><code><a href=3D"https://junit.org/junit5/docs/curren=
t/api/org.junit.platform.launcher/org/junit/platform/launcher/listeners/Uni=
queIdTrackingListener.html">UniqueIdTrackingListener</a></code> </dt>
<dd>
<p><code>TestExecutionListener</code> that that tracks the unique IDs of al=
l tests that were skipped
or executed during the execution of the <code>TestPlan</code> and generates=
 a file containing the
unique IDs once execution of the <code>TestPlan</code> has finished.</p>
</dd>
</dl>
</div>
<div class=3D"sect3">
<h4 id=3D"running-tests-listeners-flight-recorder"><a class=3D"anchor" href=
=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-listene=
rs-flight-recorder"></a>4.8.1. Flight Recorder Support</h4>
<div class=3D"paragraph">
<p>Since version 1.7, the JUnit Platform provides opt-in support for genera=
ting Flight
Recorder events. <a href=3D"https://openjdk.java.net/jeps/328">JEP 328</a> =
describes the Java Flight
Recorder (JFR) as:</p>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
Flight Recorder records events originating from applications, the JVM and t=
he OS.
Events are stored in a single file that can be attached to bug reports and =
examined by
support engineers, allowing after-the-fact analysis of issues in the period=
 leading up
to a problem.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>In order to record Flight Recorder events generated while running tests,=
 you need to:</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>Ensure that you are using either Java 8 Update 262 or higher or Java 11 =
or later.</p>
</li>
<li>
<p>Provide the <code>org.junit.platform.jfr</code> module (<code>junit-plat=
form-jfr-1.8.2.jar</code>)
on the class-path or module-path at test runtime.</p>
</li>
<li>
<p>Start flight recording when launching a test run. Flight Recorder can be=
 started via
java command line option:</p>
<div class=3D"literalblock">
<div class=3D"content">
<pre>-XX:StartFlightRecording:filename=3D...</pre>
</div>
</div>
</li>
</ol>
</div>
<div class=3D"paragraph">
<p>Please consult the manual of your build tool for the appropriate command=
s.</p>
</div>
<div class=3D"paragraph">
<p>To analyze the recorded events, use the
<a href=3D"https://docs.oracle.com/en/java/javase/14/docs/specs/man/jfr.htm=
l">jfr</a>
command line tool shipped with recent JDKs or open the recording file with
<a href=3D"https://jdk.java.net/jmc/">JDK Mission Control</a>.</p>
</div>
<div class=3D"admonitionblock warning">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-warning" title=3D"Warning"></i>
</td>
<td class=3D"content">
Flight Recorder support is currently an <em>experimental</em> feature. You=
=E2=80=99re invited to
give it a try and provide feedback to the JUnit team so they can improve an=
d eventually
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#api-evolution"=
>promote</a> this feature.
</td>
</tr>
</tbody></table>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"extensions"><a class=3D"anchor" href=3D"https://junit.org/junit5/=
docs/current/user-guide/#extensions"></a>5. Extension Model</h2>
<div class=3D"sectionbody">
<div class=3D"sect2">
<h3 id=3D"extensions-overview"><a class=3D"anchor" href=3D"https://junit.or=
g/junit5/docs/current/user-guide/#extensions-overview"></a>5.1. Overview</h=
3>
<div class=3D"paragraph">
<p>In contrast to the competing <code>Runner</code>, <code>TestRule</code>,=
 and <code>MethodRule</code> extension points in
JUnit 4, the JUnit Jupiter extension model consists of a single, coherent c=
oncept: the
<code>Extension</code> API. Note, however, that <code>Extension</code> itse=
lf is just a marker interface.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"extensions-registration"><a class=3D"anchor" href=3D"https://juni=
t.org/junit5/docs/current/user-guide/#extensions-registration"></a>5.2. Reg=
istering Extensions</h3>
<div class=3D"paragraph">
<p>Extensions can be registered <em>declaratively</em> via
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-reg=
istration-declarative"><code>@ExtendWith</code></a>, <em>programmatically</=
em> via
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-reg=
istration-programmatic"><code>@RegisterExtension</code></a>, or <em>automat=
ically</em> via
Java=E2=80=99s <a href=3D"https://junit.org/junit5/docs/current/user-guide/=
#extensions-registration-automatic"><code>ServiceLoader</code></a> mechanis=
m.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"extensions-registration-declarative"><a class=3D"anchor" href=3D"=
https://junit.org/junit5/docs/current/user-guide/#extensions-registration-d=
eclarative"></a>5.2.1. Declarative Extension Registration</h4>
<div class=3D"paragraph">
<p>Developers can register one or more extensions <em>declaratively</em> by=
 annotating a test
interface, test class, test method, or custom <em><a href=3D"https://junit.=
org/junit5/docs/current/user-guide/#writing-tests-meta-annotations">compose=
d
annotation</a></em> with <code>@ExtendWith(=E2=80=A6=E2=80=8B)</code> and s=
upplying class references for the extensions to
register. As of JUnit Jupiter 5.8, <code>@ExtendWith</code> may also be dec=
lared on fields or on
parameters in test class constructors, in test methods, and in <code>@Befor=
eAll</code>, <code>@AfterAll</code>,
<code>@BeforeEach</code>, and <code>@AfterEach</code> lifecycle methods.</p=
>
</div>
<div class=3D"paragraph">
<p>For example, to register a <code>WebServerExtension</code> for a particu=
lar test method, you would
annotate the test method as follows. We assume the <code>WebServerExtension=
</code> starts a local web
server and injects the server=E2=80=99s URL into parameters annotated with =
<code>@WebServerUrl</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@Test</span>
<span class=3D"nd">@ExtendWith</span><span class=3D"o">(</span><span class=
=3D"nc">WebServerExtension</span><span class=3D"o">.</span><span class=3D"n=
a">class</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">getProductList</span><spa=
n class=3D"o">(</span><span class=3D"nd">@WebServerUrl</span> <span class=
=3D"nc">String</span> <span class=3D"n">serverUrl</span><span class=3D"o">)=
</span> <span class=3D"o">{</span>
    <span class=3D"nc">WebClient</span> <span class=3D"n">webClient</span> =
<span class=3D"o">=3D</span> <span class=3D"k">new</span> <span class=3D"nc=
">WebClient</span><span class=3D"o">();</span>
    <span class=3D"c1">// Use WebClient to connect to web server using serv=
erUrl and verify response</span>
    <span class=3D"n">assertEquals</span><span class=3D"o">(</span><span cl=
ass=3D"mi">200</span><span class=3D"o">,</span> <span class=3D"n">webClient=
</span><span class=3D"o">.</span><span class=3D"na">get</span><span class=
=3D"o">(</span><span class=3D"n">serverUrl</span> <span class=3D"o">+</span=
> <span class=3D"s">"/products"</span><span class=3D"o">).</span><span clas=
s=3D"na">getResponseStatus</span><span class=3D"o">());</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>To register the <code>WebServerExtension</code> for all tests in a parti=
cular class and its
subclasses, you would annotate the test class as follows.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ExtendWith</span><span class=3D"o">(</span><span class=3D"nc">WebServerExt=
ension</span><span class=3D"o">.</span><span class=3D"na">class</span><span=
 class=3D"o">)</span>
<span class=3D"kd">class</span> <span class=3D"nc">MyTests</span> <span cla=
ss=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Multiple extensions can be registered together like this:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ExtendWith</span><span class=3D"o">({</span> <span class=3D"nc">DatabaseEx=
tension</span><span class=3D"o">.</span><span class=3D"na">class</span><spa=
n class=3D"o">,</span> <span class=3D"nc">WebServerExtension</span><span cl=
ass=3D"o">.</span><span class=3D"na">class</span> <span class=3D"o">})</spa=
n>
<span class=3D"kd">class</span> <span class=3D"nc">MyFirstTests</span> <spa=
n class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>As an alternative, multiple extensions can be registered separately like=
 this:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ExtendWith</span><span class=3D"o">(</span><span class=3D"nc">DatabaseExte=
nsion</span><span class=3D"o">.</span><span class=3D"na">class</span><span =
class=3D"o">)</span>
<span class=3D"nd">@ExtendWith</span><span class=3D"o">(</span><span class=
=3D"nc">WebServerExtension</span><span class=3D"o">.</span><span class=3D"n=
a">class</span><span class=3D"o">)</span>
<span class=3D"kd">class</span> <span class=3D"nc">MySecondTests</span> <sp=
an class=3D"o">{</span>
    <span class=3D"c1">// ...</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-tip" title=3D"Tip"></i>
</td>
<td class=3D"content">
<div class=3D"title">Extension Registration Order</div>
<div class=3D"paragraph">
<p>Extensions registered declaratively via <code>@ExtendWith</code> at the =
class level, method level, or
parameter level will be executed in the order in which they are declared in=
 the source
code. For example, the execution of tests in both <code>MyFirstTests</code>=
 and <code>MySecondTests</code> will
be extended by the <code>DatabaseExtension</code> and <code>WebServerExtens=
ion</code>, <strong>in exactly that order</strong>.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>If you wish to combine multiple extensions in a reusable way, you can de=
fine a custom
<em><a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-te=
sts-meta-annotations">composed annotation</a></em> and use <code>@ExtendWit=
h</code> as a
<em>meta-annotation</em> as in the following code listing. Then <code>@Data=
baseAndWebServerExtension</code>
can be used in place of <code>@ExtendWith({ DatabaseExtension.class, WebSer=
verExtension.class })</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@Target</span><span class=3D"o">({</span> <span class=3D"nc">ElementType</s=
pan><span class=3D"o">.</span><span class=3D"na">TYPE</span><span class=3D"=
o">,</span> <span class=3D"nc">ElementType</span><span class=3D"o">.</span>=
<span class=3D"na">METHOD</span> <span class=3D"o">})</span>
<span class=3D"nd">@Retention</span><span class=3D"o">(</span><span class=
=3D"nc">RetentionPolicy</span><span class=3D"o">.</span><span class=3D"na">=
RUNTIME</span><span class=3D"o">)</span>
<span class=3D"nd">@ExtendWith</span><span class=3D"o">({</span> <span clas=
s=3D"nc">DatabaseExtension</span><span class=3D"o">.</span><span class=3D"n=
a">class</span><span class=3D"o">,</span> <span class=3D"nc">WebServerExten=
sion</span><span class=3D"o">.</span><span class=3D"na">class</span> <span =
class=3D"o">})</span>
<span class=3D"kd">public</span> <span class=3D"nd">@interface</span> <span=
 class=3D"nc">DatabaseAndWebServerExtension</span> <span class=3D"o">{</spa=
n>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The above examples demonstrate how <code>@ExtendWith</code> can be appli=
ed at the class level or at
the method level; however, for certain use cases it makes sense for an exte=
nsion to be
registered declaratively at the field or parameter level. Consider a
<code>RandomNumberExtension</code> that generates random numbers that can b=
e injected into a field or
via a parameter in a constructor, test method, or lifecycle method. If the =
extension
provides a <code>@Random</code> annotation that is meta-annotated with
<code>@ExtendWith(RandomNumberExtension.class)</code> (see listing below), =
the extension can be used
transparently as in the following <code>RandomNumberDemo</code> example.</p=
>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@Target</span><span class=3D"o">({</span> <span class=3D"nc">ElementType</s=
pan><span class=3D"o">.</span><span class=3D"na">FIELD</span><span class=3D=
"o">,</span> <span class=3D"nc">ElementType</span><span class=3D"o">.</span=
><span class=3D"na">PARAMETER</span> <span class=3D"o">})</span>
<span class=3D"nd">@Retention</span><span class=3D"o">(</span><span class=
=3D"nc">RetentionPolicy</span><span class=3D"o">.</span><span class=3D"na">=
RUNTIME</span><span class=3D"o">)</span>
<span class=3D"nd">@ExtendWith</span><span class=3D"o">(</span><span class=
=3D"nc">RandomNumberExtension</span><span class=3D"o">.</span><span class=
=3D"na">class</span><span class=3D"o">)</span>
<span class=3D"kd">public</span> <span class=3D"nd">@interface</span> <span=
 class=3D"nc">Random</span> <span class=3D"o">{</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kd">=
class</span> <span class=3D"nc">RandomNumberDemo</span> <span class=3D"o">{=
</span>

    <span class=3D"c1">// use random number field in test methods and @Befo=
reEach</span>
    <span class=3D"c1">// or @AfterEach lifecycle methods</span>
    <span class=3D"nd">@Random</span>
    <span class=3D"kd">private</span> <span class=3D"kt">int</span> <span c=
lass=3D"n">randomNumber1</span><span class=3D"o">;</span>

    <span class=3D"nc">RandomNumberDemo</span><span class=3D"o">(</span><sp=
an class=3D"nd">@Random</span> <span class=3D"kt">int</span> <span class=3D=
"n">randomNumber2</span><span class=3D"o">)</span> <span class=3D"o">{</spa=
n>
        <span class=3D"c1">// use random number in constructor</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@BeforeEach</span>
    <span class=3D"kt">void</span> <span class=3D"nf">beforeEach</span><spa=
n class=3D"o">(</span><span class=3D"nd">@Random</span> <span class=3D"kt">=
int</span> <span class=3D"n">randomNumber3</span><span class=3D"o">)</span>=
 <span class=3D"o">{</span>
        <span class=3D"c1">// use random number in @BeforeEach method</span=
>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">test</span><span clas=
s=3D"o">(</span><span class=3D"nd">@Random</span> <span class=3D"kt">int</s=
pan> <span class=3D"n">randomNumber4</span><span class=3D"o">)</span> <span=
 class=3D"o">{</span>
        <span class=3D"c1">// use random number in test method</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-tip" title=3D"Tip"></i>
</td>
<td class=3D"content">
<div class=3D"title">Extension Registration Order for <code>@ExtendWith</co=
de> on Fields</div>
<div class=3D"paragraph">
<p>Extensions registered declaratively via <code>@ExtendWith</code> on fiel=
ds will be ordered relative
to <code>@RegisterExtension</code> fields and other <code>@ExtendWith</code=
> fields using an algorithm that is
deterministic but intentionally nonobvious. However, <code>@ExtendWith</cod=
e> fields can be ordered
using the <code>@Order</code> annotation. See the <a href=3D"https://junit.=
org/junit5/docs/current/user-guide/#extensions-registration-programmatic-or=
der">Extension Registration Order</a> tip for <code>@RegisterExtension</cod=
e> fields for details.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
<code>@ExtendWith</code> fields may be either <code>static</code> or non-st=
atic. The documentation on
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-reg=
istration-programmatic-static-fields">Static Fields</a> and
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-reg=
istration-programmatic-instance-fields">Instance Fields</a> for
<code>@RegisterExtension</code> fields also applies to <code>@ExtendWith</c=
ode> fields.
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"extensions-registration-programmatic"><a class=3D"anchor" href=3D=
"https://junit.org/junit5/docs/current/user-guide/#extensions-registration-=
programmatic"></a>5.2.2. Programmatic Extension Registration</h4>
<div class=3D"paragraph">
<p>Developers can register extensions <em>programmatically</em> by annotati=
ng fields in test classes
with <code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.j=
upiter.api/org/junit/jupiter/api/extension/RegisterExtension.html">@Registe=
rExtension</a></code>.</p>
</div>
<div class=3D"paragraph">
<p>When an extension is registered <em>declaratively</em> via
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-reg=
istration-declarative"><code>@ExtendWith</code></a>, it can typically only =
be configured
via annotations. In contrast, when an extension is registered via <code>@Re=
gisterExtension</code>, it
can be configured <em>programmatically</em>=E2=80=89=E2=80=94=E2=80=89for e=
xample, in order to pass arguments to the
extension=E2=80=99s constructor, a static factory method, or a builder API.=
</p>
</div>
<div id=3D"extensions-registration-programmatic-order" class=3D"admonitionb=
lock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-tip" title=3D"Tip"></i>
</td>
<td class=3D"content">
<div class=3D"title">Extension Registration Order</div>
<div class=3D"paragraph">
<p>By default, extensions registered programmatically via <code>@RegisterEx=
tension</code> or
declaratively via <code>@ExtendWith</code> on fields will be ordered using =
an algorithm that is
deterministic but intentionally nonobvious. This ensures that subsequent ru=
ns of a test
suite execute extensions in the same order, thereby allowing for repeatable=
 builds.
However, there are times when extensions need to be registered in an explic=
it order. To
achieve that, annotate <code>@RegisterExtension</code> fields or <code>@Ext=
endWith</code> fields with <code><a href=3D"https://junit.org/junit5/docs/c=
urrent/api/org.junit.jupiter.api/org/junit/jupiter/api/Order.html">@Order</=
a></code>.</p>
</div>
<div class=3D"paragraph">
<p>Any <code>@RegisterExtension</code> field or <code>@ExtendWith</code> fi=
eld not annotated with <code>@Order</code> will be
ordered using the <em>default</em> order which has a value of <code>Integer=
.MAX_VALUE / 2</code>. This
allows <code>@Order</code> annotated extension fields to be explicitly orde=
red before or after
non-annotated extension fields. Extensions with an explicit order value les=
s than the
default order value will be registered before non-annotated extensions. Sim=
ilarly,
extensions with an explicit order value greater than the default order valu=
e will be
registered after non-annotated extensions. For example, assigning an extens=
ion an explicit
order value that is greater than the default order value allows <em>before<=
/em> callback
extensions to be registered last and <em>after</em> callback extensions to =
be registered first,
relative to other programmatically registered extensions.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
<code>@RegisterExtension</code> fields must not be <code>null</code> (at ev=
aluation time) but may be
either <code>static</code> or non-static.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"sect4">
<h5 id=3D"extensions-registration-programmatic-static-fields"><a class=3D"a=
nchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions=
-registration-programmatic-static-fields"></a>Static Fields</h5>
<div class=3D"paragraph">
<p>If a <code>@RegisterExtension</code> field is <code>static</code>, the e=
xtension will be registered after
extensions that are registered at the class level via <code>@ExtendWith</co=
de>. Such <em>static
extensions</em> are not limited in which extension APIs they can implement.=
 Extensions
registered via static fields may therefore implement class-level and instan=
ce-level
extension APIs such as <code>BeforeAllCallback</code>, <code>AfterAllCallba=
ck</code>,
<code>TestInstancePostProcessor</code>, and <code>TestInstancePreDestroyCal=
lback</code> as well as method-level
extension APIs such as <code>BeforeEachCallback</code>, etc.</p>
</div>
<div class=3D"paragraph">
<p>In the following example, the <code>server</code> field in the test clas=
s is initialized
programmatically by using a builder pattern supported by the <code>WebServe=
rExtension</code>. The
configured <code>WebServerExtension</code> will be automatically registered=
 as an extension at the
class level=E2=80=89=E2=80=94=E2=80=89for example, in order to start the se=
rver before all tests in the class
and then stop the server after all tests in the class have completed. In ad=
dition, static
lifecycle methods annotated with <code>@BeforeAll</code> or <code>@AfterAll=
</code> as well as <code>@BeforeEach</code>,
<code>@AfterEach</code>, and <code>@Test</code> methods can access the inst=
ance of the extension via the
<code>server</code> field if necessary.</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">Registering an extension via a static field in Java</d=
iv>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kd">=
class</span> <span class=3D"nc">WebServerDemo</span> <span class=3D"o">{</s=
pan>

    <span class=3D"nd">@RegisterExtension</span>
    <span class=3D"kd">static</span> <span class=3D"nc">WebServerExtension<=
/span> <span class=3D"n">server</span> <span class=3D"o">=3D</span> <span c=
lass=3D"nc">WebServerExtension</span><span class=3D"o">.</span><span class=
=3D"na">builder</span><span class=3D"o">()</span>
        <span class=3D"o">.</span><span class=3D"na">enableSecurity</span><=
span class=3D"o">(</span><span class=3D"kc">false</span><span class=3D"o">)=
</span>
        <span class=3D"o">.</span><span class=3D"na">build</span><span clas=
s=3D"o">();</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">getProductList</span>=
<span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"nc">WebClient</span> <span class=3D"n">webClient</sp=
an> <span class=3D"o">=3D</span> <span class=3D"k">new</span> <span class=
=3D"nc">WebClient</span><span class=3D"o">();</span>
        <span class=3D"nc">String</span> <span class=3D"n">serverUrl</span>=
 <span class=3D"o">=3D</span> <span class=3D"n">server</span><span class=3D=
"o">.</span><span class=3D"na">getServerUrl</span><span class=3D"o">();</sp=
an>
        <span class=3D"c1">// Use WebClient to connect to web server using =
serverUrl and verify response</span>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"mi">200</span><span class=3D"o">,</span> <span class=3D"n">webCl=
ient</span><span class=3D"o">.</span><span class=3D"na">get</span><span cla=
ss=3D"o">(</span><span class=3D"n">serverUrl</span> <span class=3D"o">+</sp=
an> <span class=3D"s">"/products"</span><span class=3D"o">).</span><span cl=
ass=3D"na">getResponseStatus</span><span class=3D"o">());</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"extensions-registration-programmatic-static-fields-kotlin"><a cla=
ss=3D"anchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#ext=
ensions-registration-programmatic-static-fields-kotlin"></a>Static Fields i=
n Kotlin</h6>
<div class=3D"paragraph">
<p>The Kotlin programming language does not have the concept of a <code>sta=
tic</code> field. However,
the compiler can be instructed to generate a <code>private static</code> fi=
eld using the <code>@JvmStatic</code>
annotation in Kotlin. If you want the Kotlin compiler to generate a <code>p=
ublic static</code> field,
you can use the <code>@JvmField</code> annotation instead.</p>
</div>
<div class=3D"paragraph">
<p>The following example is a version of the <code>WebServerDemo</code> fro=
m the previous section that
has been ported to Kotlin.</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">Registering an extension via a static field in Kotlin<=
/div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"kotlin"><span class=3D"kd=
">class</span> <span class=3D"nc">KotlinWebServerDemo</span> <span class=3D=
"p">{</span>

    <span class=3D"k">companion</span> <span class=3D"k">object</span> <spa=
n class=3D"p">{</span>
        <span class=3D"nd">@JvmStatic</span>
        <span class=3D"nd">@RegisterExtension</span>
        <span class=3D"kd">val</span> <span class=3D"py">server</span> <spa=
n class=3D"p">=3D</span> <span class=3D"nc">WebServerExtension</span><span =
class=3D"p">.</span><span class=3D"nf">builder</span><span class=3D"p">()</=
span>
                <span class=3D"p">.</span><span class=3D"nf">enableSecurity=
</span><span class=3D"p">(</span><span class=3D"k">false</span><span class=
=3D"p">)</span>
                <span class=3D"p">.</span><span class=3D"nf">build</span><s=
pan class=3D"p">()</span>
    <span class=3D"p">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"k">fun</span> <span class=3D"nf">getProductList</span><s=
pan class=3D"p">()</span> <span class=3D"p">{</span>
        <span class=3D"c1">// Use WebClient to connect to web server using =
serverUrl and verify response</span>
        <span class=3D"kd">val</span> <span class=3D"py">webClient</span> <=
span class=3D"p">=3D</span> <span class=3D"nc">WebClient</span><span class=
=3D"p">()</span>
        <span class=3D"kd">val</span> <span class=3D"py">serverUrl</span> <=
span class=3D"p">=3D</span> <span class=3D"n">server</span><span class=3D"p=
">.</span><span class=3D"n">serverUrl</span>
        <span class=3D"nf">assertEquals</span><span class=3D"p">(</span><sp=
an class=3D"mi">200</span><span class=3D"p">,</span> <span class=3D"n">webC=
lient</span><span class=3D"p">.</span><span class=3D"k">get</span><span cla=
ss=3D"p">(</span><span class=3D"s">"$serverUrl/products"</span><span class=
=3D"p">).</span><span class=3D"n">responseStatus</span><span class=3D"p">)<=
/span>
    <span class=3D"p">}</span>
<span class=3D"p">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"extensions-registration-programmatic-instance-fields"><a class=3D=
"anchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#extensio=
ns-registration-programmatic-instance-fields"></a>Instance Fields</h5>
<div class=3D"paragraph">
<p>If a <code>@RegisterExtension</code> field is non-static (i.e., an insta=
nce field), the extension
will be registered after the test class has been instantiated and after eac=
h registered
<code>TestInstancePostProcessor</code> has been given a chance to post-proc=
ess the test instance
(potentially injecting the instance of the extension to be used into the an=
notated
field). Thus, if such an <em>instance extension</em> implements class-level=
 or instance-level
extension APIs such as <code>BeforeAllCallback</code>, <code>AfterAllCallba=
ck</code>, or
<code>TestInstancePostProcessor</code>, those APIs will not be honored. By =
default, an instance
extension will be registered <em>after</em> extensions that are registered =
at the method level
via <code>@ExtendWith</code>; however, if the test class is configured with
<code>@TestInstance(Lifecycle.PER_CLASS)</code> semantics, an instance exte=
nsion will be registered
<em>before</em> extensions that are registered at the method level via <cod=
e>@ExtendWith</code>.</p>
</div>
<div class=3D"paragraph">
<p>In the following example, the <code>docs</code> field in the test class =
is initialized
programmatically by invoking a custom <code>lookUpDocsDir()</code> method a=
nd supplying the result
to the static <code>forPath()</code> factory method in the <code>Documentat=
ionExtension</code>. The configured
<code>DocumentationExtension</code> will be automatically registered as an =
extension at the method
level. In addition, <code>@BeforeEach</code>, <code>@AfterEach</code>, and =
<code>@Test</code> methods can access the
instance of the extension via the <code>docs</code> field if necessary.</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">An extension registered via an instance field</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kd">=
class</span> <span class=3D"nc">DocumentationDemo</span> <span class=3D"o">=
{</span>

    <span class=3D"kd">static</span> <span class=3D"nc">Path</span> <span c=
lass=3D"nf">lookUpDocsDir</span><span class=3D"o">()</span> <span class=3D"=
o">{</span>
        <span class=3D"c1">// return path to docs dir</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@RegisterExtension</span>
    <span class=3D"nc">DocumentationExtension</span> <span class=3D"n">docs=
</span> <span class=3D"o">=3D</span> <span class=3D"nc">DocumentationExtens=
ion</span><span class=3D"o">.</span><span class=3D"na">forPath</span><span =
class=3D"o">(</span><span class=3D"n">lookUpDocsDir</span><span class=3D"o"=
>());</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">generateDocumentation=
</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"c1">// use this.docs ...</span>
    <span class=3D"o">}</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"extensions-registration-automatic"><a class=3D"anchor" href=3D"ht=
tps://junit.org/junit5/docs/current/user-guide/#extensions-registration-aut=
omatic"></a>5.2.3. Automatic Extension Registration</h4>
<div class=3D"paragraph">
<p>In addition to <a href=3D"https://junit.org/junit5/docs/current/user-gui=
de/#extensions-registration-declarative">declarative extension registration=
</a>
and <a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions=
-registration-programmatic">programmatic extension registration</a> support
using annotations, JUnit Jupiter also supports <em>global extension registr=
ation</em> via Java=E2=80=99s
<code><a href=3D"https://docs.oracle.com/en/java/javase/11/docs/api/java.ba=
se/java/util/ServiceLoader.html">ServiceLoader</a></code> mechanism, allowi=
ng third-party extensions to be auto-detected and
automatically registered based on what is available in the classpath.</p>
</div>
<div class=3D"paragraph">
<p>Specifically, a custom extension can be registered by supplying its full=
y qualified class
name in a file named <code>org.junit.jupiter.api.extension.Extension</code>=
 within the
<code>/META-INF/services</code> folder in its enclosing JAR file.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"extensions-registration-automatic-enabling"><a class=3D"anchor" h=
ref=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-registr=
ation-automatic-enabling"></a>Enabling Automatic Extension Detection</h5>
<div class=3D"paragraph">
<p>Auto-detection is an advanced feature and is therefore not enabled by de=
fault. To enable
it, set the <code>junit.jupiter.extensions.autodetection.enabled</code> <em=
>configuration parameter</em> to
<code>true</code>. This can be supplied as a JVM system property, as a <em>=
configuration parameter</em> in
the <code>LauncherDiscoveryRequest</code> that is passed to the <code>Launc=
her</code>, or via the JUnit Platform
configuration file (see <a href=3D"https://junit.org/junit5/docs/current/us=
er-guide/#running-tests-config-params">Configuration Parameters</a> for det=
ails).</p>
</div>
<div class=3D"paragraph">
<p>For example, to enable auto-detection of extensions, you can start your =
JVM with the
following system property.</p>
</div>
<div class=3D"paragraph">
<p><code>-Djunit.jupiter.extensions.autodetection.enabled=3Dtrue</code></p>
</div>
<div class=3D"paragraph">
<p>When auto-detection is enabled, extensions discovered via the <code><a h=
ref=3D"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/ut=
il/ServiceLoader.html">ServiceLoader</a></code> mechanism
will be added to the extension registry after JUnit Jupiter=E2=80=99s globa=
l extensions (e.g.,
support for <code>TestInfo</code>, <code>TestReporter</code>, etc.).</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"extensions-registration-inheritance"><a class=3D"anchor" href=3D"=
https://junit.org/junit5/docs/current/user-guide/#extensions-registration-i=
nheritance"></a>5.2.4. Extension Inheritance</h4>
<div class=3D"paragraph">
<p>Registered extensions are inherited within test class hierarchies with t=
op-down
semantics. Similarly, extensions registered at the class-level are inherite=
d at the
method-level. Furthermore, a specific extension implementation can only be =
registered
once for a given extension context and its parent contexts. Consequently, a=
ny attempt to
register a duplicate extension implementation will be ignored.</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"extensions-conditions"><a class=3D"anchor" href=3D"https://junit.=
org/junit5/docs/current/user-guide/#extensions-conditions"></a>5.3. Conditi=
onal Test Execution</h3>
<div class=3D"paragraph">
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/extension/ExecutionCondition.html">Execution=
Condition</a></code> defines the <code>Extension</code> API for programmati=
c, <em>conditional test
execution</em>.</p>
</div>
<div class=3D"paragraph">
<p>An <code>ExecutionCondition</code> is <em>evaluated</em> for each contai=
ner (e.g., a test class) to
determine if all the tests it contains should be executed based on the supp=
lied
<code>ExtensionContext</code>. Similarly, an <code>ExecutionCondition</code=
> is <em>evaluated</em> for each test to
determine if a given test method should be executed based on the supplied
<code>ExtensionContext</code>.</p>
</div>
<div class=3D"paragraph">
<p>When multiple <code>ExecutionCondition</code> extensions are registered,=
 a container or test is
disabled as soon as one of the conditions returns <em>disabled</em>. Thus, =
there is no guarantee
that a condition is evaluated because another extension might have already =
caused a
container or test to be disabled. In other words, the evaluation works like=
 the
short-circuiting boolean OR operator.</p>
</div>
<div class=3D"paragraph">
<p>See the source code of <code><a href=3D"https://github.com/junit-team/ju=
nit5/tree/r5.8.2/junit-jupiter-engine/src/main/java/org/junit/jupiter/engin=
e/extension/DisabledCondition.java">DisabledCondition</a></code> and <code>=
<a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupiter.api/=
org/junit/jupiter/api/Disabled.html">@Disabled</a></code> for concrete exam=
ples.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"extensions-conditions-deactivation"><a class=3D"anchor" href=3D"h=
ttps://junit.org/junit5/docs/current/user-guide/#extensions-conditions-deac=
tivation"></a>5.3.1. Deactivating Conditions</h4>
<div class=3D"paragraph">
<p>Sometimes it can be useful to run a test suite <em>without</em> certain =
conditions being active.
For example, you may wish to run tests even if they are annotated with <cod=
e>@Disabled</code> in
order to see if they are still <em>broken</em>. To do this, provide a patte=
rn for the
<code>junit.jupiter.conditions.deactivate</code> <em>configuration paramete=
r</em> to specify which
conditions should be deactivated (i.e., not evaluated) for the current test=
 run. The
pattern can be supplied as a JVM system property, as a <em>configuration pa=
rameter</em> in the
<code>LauncherDiscoveryRequest</code> that is passed to the <code>Launcher<=
/code>, or via the JUnit Platform
configuration file (see <a href=3D"https://junit.org/junit5/docs/current/us=
er-guide/#running-tests-config-params">Configuration Parameters</a> for det=
ails).</p>
</div>
<div class=3D"paragraph">
<p>For example, to deactivate JUnit=E2=80=99s <code>@Disabled</code> condit=
ion, you can start your JVM with the
following system property.</p>
</div>
<div class=3D"paragraph">
<p><code>-Djunit.jupiter.conditions.deactivate=3Dorg.junit.*DisabledConditi=
on</code></p>
</div>
<div class=3D"sect4">
<h5 id=3D"extensions-conditions-deactivation-patterns"><a class=3D"anchor" =
href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-condit=
ions-deactivation-patterns"></a>Pattern Matching Syntax</h5>
<div class=3D"paragraph">
<p>Refer to <a href=3D"https://junit.org/junit5/docs/current/user-guide/#ru=
nning-tests-config-params-deactivation-pattern">Pattern Matching Syntax</a>=
 for details.</p>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"extensions-test-instance-factories"><a class=3D"anchor" href=3D"h=
ttps://junit.org/junit5/docs/current/user-guide/#extensions-test-instance-f=
actories"></a>5.4. Test Instance Factories</h3>
<div class=3D"paragraph">
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/extension/TestInstanceFactory.html">TestInst=
anceFactory</a></code> defines the API for <code>Extensions</code> that wis=
h to <em>create</em> test class
instances.</p>
</div>
<div class=3D"paragraph">
<p>Common use cases include acquiring the test instance from a dependency i=
njection
framework or invoking a static factory method to create the test class inst=
ance.</p>
</div>
<div class=3D"paragraph">
<p>If no <code>TestInstanceFactory</code> is registered, the framework will=
 invoke the <em>sole</em>
constructor for the test class to instantiate it, potentially resolving con=
structor
arguments via registered <code>ParameterResolver</code> extensions.</p>
</div>
<div class=3D"paragraph">
<p>Extensions that implement <code>TestInstanceFactory</code> can be regist=
ered on test interfaces,
top-level test classes, or <code>@Nested</code> test classes.</p>
</div>
<div class=3D"admonitionblock warning">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-warning" title=3D"Warning"></i>
</td>
<td class=3D"content">
<div class=3D"paragraph">
<p>Registering multiple extensions that implement <code>TestInstanceFactory=
</code> for any single class
will result in an exception being thrown for all tests in that class, in an=
y subclass,
and in any nested class. Note that any <code>TestInstanceFactory</code> reg=
istered in a superclass
or <em>enclosing</em> class (i.e., in the case of a <code>@Nested</code> te=
st class) is <em>inherited</em>. It is
the user=E2=80=99s responsibility to ensure that only a single <code>TestIn=
stanceFactory</code> is
registered for any specific test class.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"extensions-test-instance-post-processing"><a class=3D"anchor" hre=
f=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-test-inst=
ance-post-processing"></a>5.5. Test Instance Post-processing</h3>
<div class=3D"paragraph">
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/extension/TestInstancePostProcessor.html">Te=
stInstancePostProcessor</a></code> defines the API for <code>Extensions</co=
de> that wish to <em>post
process</em> test instances.</p>
</div>
<div class=3D"paragraph">
<p>Common use cases include injecting dependencies into the test instance, =
invoking custom
initialization methods on the test instance, etc.</p>
</div>
<div class=3D"paragraph">
<p>For a concrete example, consult the source code for the <code><a href=3D=
"https://github.com/mockito/mockito/blob/release/2.x/subprojects/junit-jupi=
ter/src/main/java/org/mockito/junit/jupiter/MockitoExtension.java">MockitoE=
xtension</a></code> and the
<code><a href=3D"https://github.com/spring-projects/spring-framework/tree/H=
EAD/spring-test/src/main/java/org/springframework/test/context/junit/jupite=
r/SpringExtension.java">SpringExtension</a></code>.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"extensions-test-instance-pre-destroy-callback"><a class=3D"anchor=
" href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-test=
-instance-pre-destroy-callback"></a>5.6. Test Instance Pre-destroy Callback=
</h3>
<div class=3D"paragraph">
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/extension/TestInstancePreDestroyCallback.htm=
l">TestInstancePreDestroyCallback</a></code> defines the API for <code>Exte=
nsions</code> that wish to process
test instances <em>after</em> they have been used in tests and <em>before</=
em> they are destroyed.</p>
</div>
<div class=3D"paragraph">
<p>Common use cases include cleaning dependencies that have been injected i=
nto the
test instance, invoking custom de-initialization methods on the test instan=
ce, etc.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"extensions-parameter-resolution"><a class=3D"anchor" href=3D"http=
s://junit.org/junit5/docs/current/user-guide/#extensions-parameter-resoluti=
on"></a>5.7. Parameter Resolution</h3>
<div class=3D"paragraph">
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/extension/ParameterResolver.html">ParameterR=
esolver</a></code> defines the <code>Extension</code> API for dynamically r=
esolving parameters at
runtime.</p>
</div>
<div class=3D"paragraph">
<p>If a <em>test class</em> constructor, <em>test method</em>, or <em>lifec=
ycle method</em> (see
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-=
classes-and-methods">Test Classes and Methods</a>) declares a parameter, th=
e parameter must be
<em>resolved</em> at runtime by a <code>ParameterResolver</code>. A <code>P=
arameterResolver</code> can either be
built-in (see <code><a href=3D"https://github.com/junit-team/junit5/tree/r5=
.8.2/junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/extension/=
TestInfoParameterResolver.java">TestInfoParameterResolver</a></code>) or <a=
 href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-regis=
tration">registered by
the user</a>. Generally speaking, parameters may be resolved by <em>name</e=
m>, <em>type</em>,
<em>annotation</em>, or any combination thereof.</p>
</div>
<div class=3D"paragraph">
<p>If you wish to implement a custom <code><a href=3D"https://junit.org/jun=
it5/docs/current/api/org.junit.jupiter.api/org/junit/jupiter/api/extension/=
ParameterResolver.html">ParameterResolver</a></code> that resolves paramete=
rs based
solely on the type of the parameter, you may find it convenient to extend t=
he
<code><a href=3D"https://github.com/junit-team/junit5/tree/r5.8.2/junit-jup=
iter-api/src/main/java/org/junit/jupiter/api/extension/support/TypeBasedPar=
ameterResolver.java">TypeBasedParameterResolver</a></code> which serves as =
a generic adapter for such use cases.</p>
</div>
<div class=3D"paragraph">
<p>For concrete examples, consult the source code for <code><a href=3D"http=
s://github.com/junit-team/junit5/tree/r5.8.2/junit-jupiter-engine/src/test/=
java/org/junit/jupiter/engine/execution/injection/sample/CustomTypeParamete=
rResolver.java">CustomTypeParameterResolver</a></code>,
<code><a href=3D"https://github.com/junit-team/junit5/tree/r5.8.2/junit-jup=
iter-engine/src/test/java/org/junit/jupiter/engine/execution/injection/samp=
le/CustomAnnotationParameterResolver.java">CustomAnnotationParameterResolve=
r</a></code>, and <code><a href=3D"https://github.com/junit-team/junit5/tre=
e/r5.8.2/junit-jupiter-engine/src/test/java/org/junit/jupiter/engine/execut=
ion/injection/sample/MapOfListsTypeBasedParameterResolver.java">MapOfListsT=
ypeBasedParameterResolver</a></code>.</p>
</div>
<div class=3D"admonitionblock warning">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-warning" title=3D"Warning"></i>
</td>
<td class=3D"content">
<div class=3D"paragraph">
<p>Due to a bug in the byte code generated by <code>javac</code> on JDK ver=
sions prior to JDK 9,
looking up annotations on parameters directly via the core <code>java.lang.=
reflect.Parameter</code>
API will always fail for <em>inner class</em> constructors (e.g., a constru=
ctor in a <code>@Nested</code>
test class).</p>
</div>
<div class=3D"paragraph">
<p>The <code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit=
.jupiter.api/org/junit/jupiter/api/extension/ParameterContext.html">Paramet=
erContext</a></code> API supplied to <code>ParameterResolver</code> impleme=
ntations therefore
includes the following convenience methods for correctly looking up annotat=
ions on
parameters. Extension authors are strongly encouraged to use these methods =
instead of
those provided in <code>java.lang.reflect.Parameter</code> in order to avoi=
d this bug in the JDK.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code>boolean isAnnotated(Class&lt;? extends Annotation&gt; annotationTy=
pe)</code></p>
</li>
<li>
<p><code>Optional&lt;A&gt; findAnnotation(Class&lt;A&gt; annotationType)</c=
ode></p>
</li>
<li>
<p><code>List&lt;A&gt; findRepeatableAnnotations(Class&lt;A&gt; annotationT=
ype)</code></p>
</li>
</ul>
</div>
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"extensions-test-result-processing"><a class=3D"anchor" href=3D"ht=
tps://junit.org/junit5/docs/current/user-guide/#extensions-test-result-proc=
essing"></a>5.8. Test Result Processing</h3>
<div class=3D"paragraph">
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/extension/TestWatcher.html">TestWatcher</a><=
/code> defines the API for extensions that wish to process the results of <=
em>test
method</em> executions. Specifically, a <code>TestWatcher</code> will be in=
voked with contextual
information for the following events.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code>testDisabled</code>: invoked after a disabled <em>test method</em>=
 has been skipped</p>
</li>
<li>
<p><code>testSuccessful</code>: invoked after a <em>test method</em> has co=
mpleted successfully</p>
</li>
<li>
<p><code>testAborted</code>: invoked after a <em>test method</em> has been =
aborted</p>
</li>
<li>
<p><code>testFailed</code>: invoked after a <em>test method</em> has failed=
</p>
</li>
</ul>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
In contrast to the definition of "test method" presented in
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-=
classes-and-methods">Test Classes and Methods</a>, in this context <em>test=
 method</em> refers to any
<code>@Test</code> method or <code>@TestTemplate</code> method (for example=
, a <code>@RepeatedTest</code> or
<code>@ParameterizedTest</code>).
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>Extensions implementing this interface can be registered at the method l=
evel or at the
class level. In the latter case they will be invoked for any contained <em>=
test method</em>
including those in <code>@Nested</code> classes.</p>
</div>
<div class=3D"admonitionblock warning">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-warning" title=3D"Warning"></i>
</td>
<td class=3D"content">
<div class=3D"paragraph">
<p>Any instances of <code>ExtensionContext.Store.CloseableResource</code> s=
tored in the <code>Store</code> of the
provided <code><a href=3D"https://junit.org/junit5/docs/current/api/org.jun=
it.jupiter.api/org/junit/jupiter/api/extension/ExtensionContext.html">Exten=
sionContext</a></code> will be closed <em>before</em> methods in this API a=
re invoked (see
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-kee=
ping-state">Keeping State in Extensions</a>). You can use the parent contex=
t=E2=80=99s <code>Store</code> to work with such
resources.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"extensions-lifecycle-callbacks"><a class=3D"anchor" href=3D"https=
://junit.org/junit5/docs/current/user-guide/#extensions-lifecycle-callbacks=
"></a>5.9. Test Lifecycle Callbacks</h3>
<div class=3D"paragraph">
<p>The following interfaces define the APIs for extending tests at various =
points in the
test execution lifecycle. Consult the following sections for examples and t=
he Javadoc for
each of these interfaces in the <code><a href=3D"https://junit.org/junit5/d=
ocs/current/api/org.junit.jupiter.api/org/junit/jupiter/api/extension/packa=
ge-summary.html">org.junit.jupiter.api.extension</a></code> package for fur=
ther details.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/extension/BeforeAllCallback.html">BeforeAllC=
allback</a></code></p>
<div class=3D"ulist">
<ul>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/extension/BeforeEachCallback.html">BeforeEac=
hCallback</a></code></p>
<div class=3D"ulist">
<ul>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/extension/BeforeTestExecutionCallback.html">=
BeforeTestExecutionCallback</a></code></p>
</li>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/extension/AfterTestExecutionCallback.html">A=
fterTestExecutionCallback</a></code></p>
</li>
</ul>
</div>
</li>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/extension/AfterEachCallback.html">AfterEachC=
allback</a></code></p>
</li>
</ul>
</div>
</li>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/extension/AfterAllCallback.html">AfterAllCal=
lback</a></code></p>
</li>
</ul>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
<div class=3D"title">Implementing Multiple Extension APIs</div>
Extension developers may choose to implement any number of these interfaces
within a single extension. Consult the source code of the <code><a href=3D"=
https://github.com/spring-projects/spring-framework/tree/HEAD/spring-test/s=
rc/main/java/org/springframework/test/context/junit/jupiter/SpringExtension=
.java">SpringExtension</a></code> for a
concrete example.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"sect3">
<h4 id=3D"extensions-lifecycle-callbacks-before-after-execution"><a class=
=3D"anchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#exten=
sions-lifecycle-callbacks-before-after-execution"></a>5.9.1. Before and Aft=
er Test Execution Callbacks</h4>
<div class=3D"paragraph">
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/extension/BeforeTestExecutionCallback.html">=
BeforeTestExecutionCallback</a></code> and <code><a href=3D"https://junit.o=
rg/junit5/docs/current/api/org.junit.jupiter.api/org/junit/jupiter/api/exte=
nsion/AfterTestExecutionCallback.html">AfterTestExecutionCallback</a></code=
> define the APIs for
<code>Extensions</code> that wish to add behavior that will be executed <em=
>immediately before</em> and
<em>immediately after</em> a test method is executed, respectively. As such=
, these callbacks are
well suited for timing, tracing, and similar use cases. If you need to impl=
ement
callbacks that are invoked <em>around</em> <code>@BeforeEach</code> and <co=
de>@AfterEach</code> methods, implement
<code>BeforeEachCallback</code> and <code>AfterEachCallback</code> instead.=
</p>
</div>
<div class=3D"paragraph">
<p>The following example shows how to use these callbacks to calculate and =
log the execution
time of a test method. <code>TimingExtension</code> implements both <code>B=
eforeTestExecutionCallback</code>
and <code>AfterTestExecutionCallback</code> in order to time and log the te=
st execution.</p>
</div>
<div id=3D"extensions-lifecycle-callbacks-timing-extension" class=3D"listin=
gblock">
<div class=3D"title">An extension that times and logs the execution of test=
 methods</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">java.lang.reflect.Method</span><span class=
=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.util.logging.Logge=
r</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.e=
xtension.AfterTestExecutionCallback</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.e=
xtension.BeforeTestExecutionCallback</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.e=
xtension.ExtensionContext</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.e=
xtension.ExtensionContext.Namespace</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.e=
xtension.ExtensionContext.Store</span><span class=3D"o">;</span>

<span class=3D"kd">public</span> <span class=3D"kd">class</span> <span clas=
s=3D"nc">TimingExtension</span> <span class=3D"kd">implements</span> <span =
class=3D"nc">BeforeTestExecutionCallback</span><span class=3D"o">,</span> <=
span class=3D"nc">AfterTestExecutionCallback</span> <span class=3D"o">{</sp=
an>

    <span class=3D"kd">private</span> <span class=3D"kd">static</span> <spa=
n class=3D"kd">final</span> <span class=3D"nc">Logger</span> <span class=3D=
"n">logger</span> <span class=3D"o">=3D</span> <span class=3D"nc">Logger</s=
pan><span class=3D"o">.</span><span class=3D"na">getLogger</span><span clas=
s=3D"o">(</span><span class=3D"nc">TimingExtension</span><span class=3D"o">=
.</span><span class=3D"na">class</span><span class=3D"o">.</span><span clas=
s=3D"na">getName</span><span class=3D"o">());</span>

    <span class=3D"kd">private</span> <span class=3D"kd">static</span> <spa=
n class=3D"kd">final</span> <span class=3D"nc">String</span> <span class=3D=
"no">START_TIME</span> <span class=3D"o">=3D</span> <span class=3D"s">"star=
t time"</span><span class=3D"o">;</span>

    <span class=3D"nd">@Override</span>
    <span class=3D"kd">public</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">beforeTestExecution</span><span class=3D"o">(</span><span class=
=3D"nc">ExtensionContext</span> <span class=3D"n">context</span><span class=
=3D"o">)</span> <span class=3D"kd">throws</span> <span class=3D"nc">Excepti=
on</span> <span class=3D"o">{</span>
        <span class=3D"n">getStore</span><span class=3D"o">(</span><span cl=
ass=3D"n">context</span><span class=3D"o">).</span><span class=3D"na">put</=
span><span class=3D"o">(</span><span class=3D"no">START_TIME</span><span cl=
ass=3D"o">,</span> <span class=3D"nc">System</span><span class=3D"o">.</spa=
n><span class=3D"na">currentTimeMillis</span><span class=3D"o">());</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Override</span>
    <span class=3D"kd">public</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">afterTestExecution</span><span class=3D"o">(</span><span class=
=3D"nc">ExtensionContext</span> <span class=3D"n">context</span><span class=
=3D"o">)</span> <span class=3D"kd">throws</span> <span class=3D"nc">Excepti=
on</span> <span class=3D"o">{</span>
        <span class=3D"nc">Method</span> <span class=3D"n">testMethod</span=
> <span class=3D"o">=3D</span> <span class=3D"n">context</span><span class=
=3D"o">.</span><span class=3D"na">getRequiredTestMethod</span><span class=
=3D"o">();</span>
        <span class=3D"kt">long</span> <span class=3D"n">startTime</span> <=
span class=3D"o">=3D</span> <span class=3D"n">getStore</span><span class=3D=
"o">(</span><span class=3D"n">context</span><span class=3D"o">).</span><spa=
n class=3D"na">remove</span><span class=3D"o">(</span><span class=3D"no">ST=
ART_TIME</span><span class=3D"o">,</span> <span class=3D"kt">long</span><sp=
an class=3D"o">.</span><span class=3D"na">class</span><span class=3D"o">);<=
/span>
        <span class=3D"kt">long</span> <span class=3D"n">duration</span> <s=
pan class=3D"o">=3D</span> <span class=3D"nc">System</span><span class=3D"o=
">.</span><span class=3D"na">currentTimeMillis</span><span class=3D"o">()</=
span> <span class=3D"o">-</span> <span class=3D"n">startTime</span><span cl=
ass=3D"o">;</span>

        <span class=3D"n">logger</span><span class=3D"o">.</span><span clas=
s=3D"na">info</span><span class=3D"o">(()</span> <span class=3D"o">-&gt;</s=
pan>
            <span class=3D"nc">String</span><span class=3D"o">.</span><span=
 class=3D"na">format</span><span class=3D"o">(</span><span class=3D"s">"Met=
hod [%s] took %s ms."</span><span class=3D"o">,</span> <span class=3D"n">te=
stMethod</span><span class=3D"o">.</span><span class=3D"na">getName</span><=
span class=3D"o">(),</span> <span class=3D"n">duration</span><span class=3D=
"o">));</span>
    <span class=3D"o">}</span>

    <span class=3D"kd">private</span> <span class=3D"nc">Store</span> <span=
 class=3D"nf">getStore</span><span class=3D"o">(</span><span class=3D"nc">E=
xtensionContext</span> <span class=3D"n">context</span><span class=3D"o">)<=
/span> <span class=3D"o">{</span>
        <span class=3D"k">return</span> <span class=3D"n">context</span><sp=
an class=3D"o">.</span><span class=3D"na">getStore</span><span class=3D"o">=
(</span><span class=3D"nc">Namespace</span><span class=3D"o">.</span><span =
class=3D"na">create</span><span class=3D"o">(</span><span class=3D"n">getCl=
ass</span><span class=3D"o">(),</span> <span class=3D"n">context</span><spa=
n class=3D"o">.</span><span class=3D"na">getRequiredTestMethod</span><span =
class=3D"o">()));</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Since the <code>TimingExtensionTests</code> class registers the <code>Ti=
mingExtension</code> via <code>@ExtendWith</code>,
its tests will have this timing applied when they execute.</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">A test class that uses the example TimingExtension</di=
v>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nd">=
@ExtendWith</span><span class=3D"o">(</span><span class=3D"nc">TimingExtens=
ion</span><span class=3D"o">.</span><span class=3D"na">class</span><span cl=
ass=3D"o">)</span>
<span class=3D"kd">class</span> <span class=3D"nc">TimingExtensionTests</sp=
an> <span class=3D"o">{</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">sleep20ms</span><span=
 class=3D"o">()</span> <span class=3D"kd">throws</span> <span class=3D"nc">=
Exception</span> <span class=3D"o">{</span>
        <span class=3D"nc">Thread</span><span class=3D"o">.</span><span cla=
ss=3D"na">sleep</span><span class=3D"o">(</span><span class=3D"mi">20</span=
><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">sleep50ms</span><span=
 class=3D"o">()</span> <span class=3D"kd">throws</span> <span class=3D"nc">=
Exception</span> <span class=3D"o">{</span>
        <span class=3D"nc">Thread</span><span class=3D"o">.</span><span cla=
ss=3D"na">sleep</span><span class=3D"o">(</span><span class=3D"mi">50</span=
><span class=3D"o">);</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The following is an example of the logging produced when <code>TimingExt=
ensionTests</code> is run.</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>INFO: Method [sleep20ms] took 24 ms.
INFO: Method [sleep50ms] took 53 ms.</pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"extensions-exception-handling"><a class=3D"anchor" href=3D"https:=
//junit.org/junit5/docs/current/user-guide/#extensions-exception-handling">=
</a>5.10. Exception Handling</h3>
<div class=3D"paragraph">
<p>Exceptions thrown during the test execution may be intercepted and handl=
ed accordingly
before propagating further, so that certain actions like error logging or r=
esource releasing
may be defined in specialized <code>Extensions</code>. JUnit Jupiter offers=
 API for <code>Extensions</code> that
wish to handle exceptions thrown during <code>@Test</code> methods via <cod=
e><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupiter.ap=
i/org/junit/jupiter/api/extension/TestExecutionExceptionHandler.html">TestE=
xecutionExceptionHandler</a></code>
and for those thrown during one of test lifecycle methods (<code>@BeforeAll=
</code>, <code>@BeforeEach</code>,
<code>@AfterEach</code> and <code>@AfterAll</code>) via <code><a href=3D"ht=
tps://junit.org/junit5/docs/current/api/org.junit.jupiter.api/org/junit/jup=
iter/api/extension/LifecycleMethodExecutionExceptionHandler.html">Lifecycle=
MethodExecutionExceptionHandler</a></code>.</p>
</div>
<div class=3D"paragraph">
<p>The following example shows an extension which will swallow all instance=
s of <code>IOException</code>
but rethrow any other type of exception.</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">An exception handling extension that filters IOExcepti=
ons in test execution</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kd">=
public</span> <span class=3D"kd">class</span> <span class=3D"nc">IgnoreIOEx=
ceptionExtension</span> <span class=3D"kd">implements</span> <span class=3D=
"nc">TestExecutionExceptionHandler</span> <span class=3D"o">{</span>

    <span class=3D"nd">@Override</span>
    <span class=3D"kd">public</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">handleTestExecutionException</span><span class=3D"o">(</span><s=
pan class=3D"nc">ExtensionContext</span> <span class=3D"n">context</span><s=
pan class=3D"o">,</span> <span class=3D"nc">Throwable</span> <span class=3D=
"n">throwable</span><span class=3D"o">)</span>
            <span class=3D"kd">throws</span> <span class=3D"nc">Throwable</=
span> <span class=3D"o">{</span>

        <span class=3D"k">if</span> <span class=3D"o">(</span><span class=
=3D"n">throwable</span> <span class=3D"k">instanceof</span> <span class=3D"=
nc">IOException</span><span class=3D"o">)</span> <span class=3D"o">{</span>
            <span class=3D"k">return</span><span class=3D"o">;</span>
        <span class=3D"o">}</span>
        <span class=3D"k">throw</span> <span class=3D"n">throwable</span><s=
pan class=3D"o">;</span>
    <span class=3D"o">}</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Another example shows how to record the state of an application under te=
st exactly at
the point of unexpected exception being thrown during setup and cleanup. No=
te that unlike
relying on lifecycle callbacks, which may or may not be executed depending =
on the test
status, this solution guarantees execution immediately after failing <code>=
@BeforeAll</code>,
<code>@BeforeEach</code>, <code>@AfterEach</code> or <code>@AfterAll</code>=
.</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">An exception handling extension that records applicati=
on state on error</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kd">=
class</span> <span class=3D"nc">RecordStateOnErrorExtension</span> <span cl=
ass=3D"kd">implements</span> <span class=3D"nc">LifecycleMethodExecutionExc=
eptionHandler</span> <span class=3D"o">{</span>

    <span class=3D"nd">@Override</span>
    <span class=3D"kd">public</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">handleBeforeAllMethodExecutionException</span><span class=3D"o"=
>(</span><span class=3D"nc">ExtensionContext</span> <span class=3D"n">conte=
xt</span><span class=3D"o">,</span> <span class=3D"nc">Throwable</span> <sp=
an class=3D"n">ex</span><span class=3D"o">)</span>
            <span class=3D"kd">throws</span> <span class=3D"nc">Throwable</=
span> <span class=3D"o">{</span>
        <span class=3D"n">memoryDumpForFurtherInvestigation</span><span cla=
ss=3D"o">(</span><span class=3D"s">"Failure recorded during class setup"</s=
pan><span class=3D"o">);</span>
        <span class=3D"k">throw</span> <span class=3D"n">ex</span><span cla=
ss=3D"o">;</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Override</span>
    <span class=3D"kd">public</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">handleBeforeEachMethodExecutionException</span><span class=3D"o=
">(</span><span class=3D"nc">ExtensionContext</span> <span class=3D"n">cont=
ext</span><span class=3D"o">,</span> <span class=3D"nc">Throwable</span> <s=
pan class=3D"n">ex</span><span class=3D"o">)</span>
            <span class=3D"kd">throws</span> <span class=3D"nc">Throwable</=
span> <span class=3D"o">{</span>
        <span class=3D"n">memoryDumpForFurtherInvestigation</span><span cla=
ss=3D"o">(</span><span class=3D"s">"Failure recorded during test setup"</sp=
an><span class=3D"o">);</span>
        <span class=3D"k">throw</span> <span class=3D"n">ex</span><span cla=
ss=3D"o">;</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Override</span>
    <span class=3D"kd">public</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">handleAfterEachMethodExecutionException</span><span class=3D"o"=
>(</span><span class=3D"nc">ExtensionContext</span> <span class=3D"n">conte=
xt</span><span class=3D"o">,</span> <span class=3D"nc">Throwable</span> <sp=
an class=3D"n">ex</span><span class=3D"o">)</span>
            <span class=3D"kd">throws</span> <span class=3D"nc">Throwable</=
span> <span class=3D"o">{</span>
        <span class=3D"n">memoryDumpForFurtherInvestigation</span><span cla=
ss=3D"o">(</span><span class=3D"s">"Failure recorded during test cleanup"</=
span><span class=3D"o">);</span>
        <span class=3D"k">throw</span> <span class=3D"n">ex</span><span cla=
ss=3D"o">;</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Override</span>
    <span class=3D"kd">public</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">handleAfterAllMethodExecutionException</span><span class=3D"o">=
(</span><span class=3D"nc">ExtensionContext</span> <span class=3D"n">contex=
t</span><span class=3D"o">,</span> <span class=3D"nc">Throwable</span> <spa=
n class=3D"n">ex</span><span class=3D"o">)</span>
            <span class=3D"kd">throws</span> <span class=3D"nc">Throwable</=
span> <span class=3D"o">{</span>
        <span class=3D"n">memoryDumpForFurtherInvestigation</span><span cla=
ss=3D"o">(</span><span class=3D"s">"Failure recorded during class cleanup"<=
/span><span class=3D"o">);</span>
        <span class=3D"k">throw</span> <span class=3D"n">ex</span><span cla=
ss=3D"o">;</span>
    <span class=3D"o">}</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Multiple execution exception handlers may be invoked for the same lifecy=
cle method in
order of declaration. If one of the handlers swallows the handled exception=
, subsequent
ones will not be executed, and no failure will be propagated to JUnit engin=
e, as if the
exception was never thrown. Handlers may also choose to rethrow the excepti=
on or throw
a different one, potentially wrapping the original.</p>
</div>
<div class=3D"paragraph">
<p>Extensions implementing <code><a href=3D"https://junit.org/junit5/docs/c=
urrent/api/org.junit.jupiter.api/org/junit/jupiter/api/extension/LifecycleM=
ethodExecutionExceptionHandler.html">LifecycleMethodExecutionExceptionHandl=
er</a></code> that wish to handle
exceptions thrown during <code>@BeforeAll</code> or <code>@AfterAll</code> =
need to be registered on a class level,
while handlers for <code>BeforeEach</code> and <code>AfterEach</code> may b=
e also registered for individual
test methods.</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">Registering multiple exception handling extensions</di=
v>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"c1">=
// Register handlers for @Test, @BeforeEach, @AfterEach as well as @BeforeA=
ll and @AfterAll</span>
<span class=3D"nd">@ExtendWith</span><span class=3D"o">(</span><span class=
=3D"nc">ThirdExecutedHandler</span><span class=3D"o">.</span><span class=3D=
"na">class</span><span class=3D"o">)</span>
<span class=3D"kd">class</span> <span class=3D"nc">MultipleHandlersTestCase=
</span> <span class=3D"o">{</span>

    <span class=3D"c1">// Register handlers for @Test, @BeforeEach, @AfterE=
ach only</span>
    <span class=3D"nd">@ExtendWith</span><span class=3D"o">(</span><span cl=
ass=3D"nc">SecondExecutedHandler</span><span class=3D"o">.</span><span clas=
s=3D"na">class</span><span class=3D"o">)</span>
    <span class=3D"nd">@ExtendWith</span><span class=3D"o">(</span><span cl=
ass=3D"nc">FirstExecutedHandler</span><span class=3D"o">.</span><span class=
=3D"na">class</span><span class=3D"o">)</span>
    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">testMethod</span><spa=
n class=3D"o">()</span> <span class=3D"o">{</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"extensions-intercepting-invocations"><a class=3D"anchor" href=3D"=
https://junit.org/junit5/docs/current/user-guide/#extensions-intercepting-i=
nvocations"></a>5.11. Intercepting Invocations</h3>
<div class=3D"paragraph">
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.api/org/junit/jupiter/api/extension/InvocationInterceptor.html">Invoca=
tionInterceptor</a></code> defines the API for <code>Extensions</code> that=
 wish to intercept calls to
test code.</p>
</div>
<div class=3D"paragraph">
<p>The following example shows an extension that executes all test methods =
in Swing=E2=80=99s Event
Dispatch Thread.</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">An extension that executes tests in a user-defined thr=
ead</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kd">=
public</span> <span class=3D"kd">class</span> <span class=3D"nc">SwingEdtIn=
terceptor</span> <span class=3D"kd">implements</span> <span class=3D"nc">In=
vocationInterceptor</span> <span class=3D"o">{</span>

    <span class=3D"nd">@Override</span>
    <span class=3D"kd">public</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">interceptTestMethod</span><span class=3D"o">(</span><span class=
=3D"nc">Invocation</span><span class=3D"o">&lt;</span><span class=3D"nc">Vo=
id</span><span class=3D"o">&gt;</span> <span class=3D"n">invocation</span><=
span class=3D"o">,</span>
            <span class=3D"nc">ReflectiveInvocationContext</span><span clas=
s=3D"o">&lt;</span><span class=3D"nc">Method</span><span class=3D"o">&gt;</=
span> <span class=3D"n">invocationContext</span><span class=3D"o">,</span>
            <span class=3D"nc">ExtensionContext</span> <span class=3D"n">ex=
tensionContext</span><span class=3D"o">)</span> <span class=3D"kd">throws</=
span> <span class=3D"nc">Throwable</span> <span class=3D"o">{</span>

        <span class=3D"nc">AtomicReference</span><span class=3D"o">&lt;</sp=
an><span class=3D"nc">Throwable</span><span class=3D"o">&gt;</span> <span c=
lass=3D"n">throwable</span> <span class=3D"o">=3D</span> <span class=3D"k">=
new</span> <span class=3D"nc">AtomicReference</span><span class=3D"o">&lt;&=
gt;();</span>

        <span class=3D"nc">SwingUtilities</span><span class=3D"o">.</span><=
span class=3D"na">invokeAndWait</span><span class=3D"o">(()</span> <span cl=
ass=3D"o">-&gt;</span> <span class=3D"o">{</span>
            <span class=3D"k">try</span> <span class=3D"o">{</span>
                <span class=3D"n">invocation</span><span class=3D"o">.</spa=
n><span class=3D"na">proceed</span><span class=3D"o">();</span>
            <span class=3D"o">}</span>
            <span class=3D"k">catch</span> <span class=3D"o">(</span><span =
class=3D"nc">Throwable</span> <span class=3D"n">t</span><span class=3D"o">)=
</span> <span class=3D"o">{</span>
                <span class=3D"n">throwable</span><span class=3D"o">.</span=
><span class=3D"na">set</span><span class=3D"o">(</span><span class=3D"n">t=
</span><span class=3D"o">);</span>
            <span class=3D"o">}</span>
        <span class=3D"o">});</span>
        <span class=3D"nc">Throwable</span> <span class=3D"n">t</span> <spa=
n class=3D"o">=3D</span> <span class=3D"n">throwable</span><span class=3D"o=
">.</span><span class=3D"na">get</span><span class=3D"o">();</span>
        <span class=3D"k">if</span> <span class=3D"o">(</span><span class=
=3D"n">t</span> <span class=3D"o">!=3D</span> <span class=3D"kc">null</span=
><span class=3D"o">)</span> <span class=3D"o">{</span>
            <span class=3D"k">throw</span> <span class=3D"n">t</span><span =
class=3D"o">;</span>
        <span class=3D"o">}</span>
    <span class=3D"o">}</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"extensions-test-templates"><a class=3D"anchor" href=3D"https://ju=
nit.org/junit5/docs/current/user-guide/#extensions-test-templates"></a>5.12=
. Providing Invocation Contexts for Test Templates</h3>
<div class=3D"paragraph">
<p>A <code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.j=
upiter.api/org/junit/jupiter/api/TestTemplate.html">@TestTemplate</a></code=
> method can only be executed when at least one
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jupite=
r.api/org/junit/jupiter/api/extension/TestTemplateInvocationContextProvider=
.html">TestTemplateInvocationContextProvider</a></code> is registered. Each=
 such provider is responsible
for providing a <code>Stream</code> of <code><a href=3D"https://junit.org/j=
unit5/docs/current/api/org.junit.jupiter.api/org/junit/jupiter/api/extensio=
n/TestTemplateInvocationContext.html">TestTemplateInvocationContext</a></co=
de> instances. Each context may
specify a custom display name and a list of additional extensions that will=
 only be used
for the next invocation of the <code><a href=3D"https://junit.org/junit5/do=
cs/current/api/org.junit.jupiter.api/org/junit/jupiter/api/TestTemplate.htm=
l">@TestTemplate</a></code> method.</p>
</div>
<div class=3D"paragraph">
<p>The following example shows how to write a test template as well as how =
to register and
implement a <code><a href=3D"https://junit.org/junit5/docs/current/api/org.=
junit.jupiter.api/org/junit/jupiter/api/extension/TestTemplateInvocationCon=
textProvider.html">TestTemplateInvocationContextProvider</a></code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">A test template with accompanying extension</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kd">=
final</span> <span class=3D"nc">List</span><span class=3D"o">&lt;</span><sp=
an class=3D"nc">String</span><span class=3D"o">&gt;</span> <span class=3D"n=
">fruits</span> <span class=3D"o">=3D</span> <span class=3D"nc">Arrays</spa=
n><span class=3D"o">.</span><span class=3D"na">asList</span><span class=3D"=
o">(</span><span class=3D"s">"apple"</span><span class=3D"o">,</span> <span=
 class=3D"s">"banana"</span><span class=3D"o">,</span> <span class=3D"s">"l=
emon"</span><span class=3D"o">);</span>

<span class=3D"nd">@TestTemplate</span>
<span class=3D"nd">@ExtendWith</span><span class=3D"o">(</span><span class=
=3D"nc">MyTestTemplateInvocationContextProvider</span><span class=3D"o">.</=
span><span class=3D"na">class</span><span class=3D"o">)</span>
<span class=3D"kt">void</span> <span class=3D"nf">testTemplate</span><span =
class=3D"o">(</span><span class=3D"nc">String</span> <span class=3D"n">frui=
t</span><span class=3D"o">)</span> <span class=3D"o">{</span>
    <span class=3D"n">assertTrue</span><span class=3D"o">(</span><span clas=
s=3D"n">fruits</span><span class=3D"o">.</span><span class=3D"na">contains<=
/span><span class=3D"o">(</span><span class=3D"n">fruit</span><span class=
=3D"o">));</span>
<span class=3D"o">}</span>

<span class=3D"kd">public</span> <span class=3D"kd">class</span> <span clas=
s=3D"nc">MyTestTemplateInvocationContextProvider</span>
        <span class=3D"kd">implements</span> <span class=3D"nc">TestTemplat=
eInvocationContextProvider</span> <span class=3D"o">{</span>

    <span class=3D"nd">@Override</span>
    <span class=3D"kd">public</span> <span class=3D"kt">boolean</span> <spa=
n class=3D"nf">supportsTestTemplate</span><span class=3D"o">(</span><span c=
lass=3D"nc">ExtensionContext</span> <span class=3D"n">context</span><span c=
lass=3D"o">)</span> <span class=3D"o">{</span>
        <span class=3D"k">return</span> <span class=3D"kc">true</span><span=
 class=3D"o">;</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Override</span>
    <span class=3D"kd">public</span> <span class=3D"nc">Stream</span><span =
class=3D"o">&lt;</span><span class=3D"nc">TestTemplateInvocationContext</sp=
an><span class=3D"o">&gt;</span> <span class=3D"nf">provideTestTemplateInvo=
cationContexts</span><span class=3D"o">(</span>
            <span class=3D"nc">ExtensionContext</span> <span class=3D"n">co=
ntext</span><span class=3D"o">)</span> <span class=3D"o">{</span>

        <span class=3D"k">return</span> <span class=3D"nc">Stream</span><sp=
an class=3D"o">.</span><span class=3D"na">of</span><span class=3D"o">(</spa=
n><span class=3D"n">invocationContext</span><span class=3D"o">(</span><span=
 class=3D"s">"apple"</span><span class=3D"o">),</span> <span class=3D"n">in=
vocationContext</span><span class=3D"o">(</span><span class=3D"s">"banana"<=
/span><span class=3D"o">));</span>
    <span class=3D"o">}</span>

    <span class=3D"kd">private</span> <span class=3D"nc">TestTemplateInvoca=
tionContext</span> <span class=3D"nf">invocationContext</span><span class=
=3D"o">(</span><span class=3D"nc">String</span> <span class=3D"n">parameter=
</span><span class=3D"o">)</span> <span class=3D"o">{</span>
        <span class=3D"k">return</span> <span class=3D"k">new</span> <span =
class=3D"nf">TestTemplateInvocationContext</span><span class=3D"o">()</span=
> <span class=3D"o">{</span>
            <span class=3D"nd">@Override</span>
            <span class=3D"kd">public</span> <span class=3D"nc">String</spa=
n> <span class=3D"nf">getDisplayName</span><span class=3D"o">(</span><span =
class=3D"kt">int</span> <span class=3D"n">invocationIndex</span><span class=
=3D"o">)</span> <span class=3D"o">{</span>
                <span class=3D"k">return</span> <span class=3D"n">parameter=
</span><span class=3D"o">;</span>
            <span class=3D"o">}</span>

            <span class=3D"nd">@Override</span>
            <span class=3D"kd">public</span> <span class=3D"nc">List</span>=
<span class=3D"o">&lt;</span><span class=3D"nc">Extension</span><span class=
=3D"o">&gt;</span> <span class=3D"nf">getAdditionalExtensions</span><span c=
lass=3D"o">()</span> <span class=3D"o">{</span>
                <span class=3D"k">return</span> <span class=3D"nc">Collecti=
ons</span><span class=3D"o">.</span><span class=3D"na">singletonList</span>=
<span class=3D"o">(</span><span class=3D"k">new</span> <span class=3D"nc">P=
arameterResolver</span><span class=3D"o">()</span> <span class=3D"o">{</spa=
n>
                    <span class=3D"nd">@Override</span>
                    <span class=3D"kd">public</span> <span class=3D"kt">boo=
lean</span> <span class=3D"nf">supportsParameter</span><span class=3D"o">(<=
/span><span class=3D"nc">ParameterContext</span> <span class=3D"n">paramete=
rContext</span><span class=3D"o">,</span>
                            <span class=3D"nc">ExtensionContext</span> <spa=
n class=3D"n">extensionContext</span><span class=3D"o">)</span> <span class=
=3D"o">{</span>
                        <span class=3D"k">return</span> <span class=3D"n">p=
arameterContext</span><span class=3D"o">.</span><span class=3D"na">getParam=
eter</span><span class=3D"o">().</span><span class=3D"na">getType</span><sp=
an class=3D"o">().</span><span class=3D"na">equals</span><span class=3D"o">=
(</span><span class=3D"nc">String</span><span class=3D"o">.</span><span cla=
ss=3D"na">class</span><span class=3D"o">);</span>
                    <span class=3D"o">}</span>

                    <span class=3D"nd">@Override</span>
                    <span class=3D"kd">public</span> <span class=3D"nc">Obj=
ect</span> <span class=3D"nf">resolveParameter</span><span class=3D"o">(</s=
pan><span class=3D"nc">ParameterContext</span> <span class=3D"n">parameterC=
ontext</span><span class=3D"o">,</span>
                            <span class=3D"nc">ExtensionContext</span> <spa=
n class=3D"n">extensionContext</span><span class=3D"o">)</span> <span class=
=3D"o">{</span>
                        <span class=3D"k">return</span> <span class=3D"n">p=
arameter</span><span class=3D"o">;</span>
                    <span class=3D"o">}</span>
                <span class=3D"o">});</span>
            <span class=3D"o">}</span>
        <span class=3D"o">};</span>
    <span class=3D"o">}</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>In this example, the test template will be invoked twice. The display na=
mes of the
invocations will be <code>apple</code> and <code>banana</code> as specified=
 by the invocation context. Each
invocation registers a custom <code><a href=3D"https://junit.org/junit5/doc=
s/current/api/org.junit.jupiter.api/org/junit/jupiter/api/extension/Paramet=
erResolver.html">ParameterResolver</a></code> which is used to resolve the =
method
parameter. The output when using the <code>ConsoleLauncher</code> is as fol=
lows.</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>=E2=94=94=E2=94=80 testTemplate(String) =E2=9C=94
   =E2=94=9C=E2=94=80 apple =E2=9C=94
   =E2=94=94=E2=94=80 banana =E2=9C=94</pre>
</div>
</div>
<div class=3D"paragraph">
<p>The <code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit=
.jupiter.api/org/junit/jupiter/api/extension/TestTemplateInvocationContextP=
rovider.html">TestTemplateInvocationContextProvider</a></code> extension AP=
I is primarily intended for
implementing different kinds of tests that rely on repetitive invocation of=
 a test-like
method albeit in different contexts =E2=80=94 for example, with different p=
arameters, by preparing
the test class instance differently, or multiple times without modifying th=
e context.
Please refer to the implementations of <a href=3D"https://junit.org/junit5/=
docs/current/user-guide/#writing-tests-repeated-tests">Repeated Tests</a> o=
r
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#writing-tests-=
parameterized-tests">Parameterized Tests</a> which use this extension point=
 to provide their
functionality.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"extensions-keeping-state"><a class=3D"anchor" href=3D"https://jun=
it.org/junit5/docs/current/user-guide/#extensions-keeping-state"></a>5.13. =
Keeping State in Extensions</h3>
<div class=3D"paragraph">
<p>Usually, an extension is instantiated only once. So the question becomes=
 relevant: How do
you keep the state from one invocation of an extension to the next? The
<code>ExtensionContext</code> API provides a <code>Store</code> exactly for=
 this purpose. Extensions may put
values into a store for later retrieval. See the
<code><a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensio=
ns-lifecycle-callbacks-timing-extension">TimingExtension</a></code> for an =
example of
using the <code>Store</code> with a method-level scope. It is important to =
remember that values
stored in an <code>ExtensionContext</code> during test execution will not b=
e available in the
surrounding <code>ExtensionContext</code>. Since <code>ExtensionContexts</c=
ode> may be nested, the scope of
inner contexts may also be limited. Consult the corresponding Javadoc for d=
etails on the
methods available for storing and retrieving values via the <code><a href=
=3D"https://junit.org/junit5/docs/current/api/org.junit.jupiter.api/org/jun=
it/jupiter/api/extension/ExtensionContext.Store.html">Store</a></code>.</p>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
<div class=3D"title"><code>ExtensionContext.Store.CloseableResource</code><=
/div>
An extension context store is bound to its extension context lifecycle. Whe=
n an
extension context lifecycle ends it closes its associated store. All stored=
 values
that are instances of <code>CloseableResource</code> are notified by an inv=
ocation of their <code>close()</code>
method in the inverse order they were added in.
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"extensions-supported-utilities"><a class=3D"anchor" href=3D"https=
://junit.org/junit5/docs/current/user-guide/#extensions-supported-utilities=
"></a>5.14. Supported Utilities in Extensions</h3>
<div class=3D"paragraph">
<p>The <code>junit-platform-commons</code> artifact exposes a package named
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.platfo=
rm.commons/org/junit/platform/commons/support/package-summary.html">org.jun=
it.platform.commons.support</a></code> that contains <em>maintained</em> ut=
ility methods for working
with annotations, classes, reflection, and classpath scanning tasks. <code>=
TestEngine</code> and
<code>Extension</code> authors are encouraged to use these supported method=
s in order to align with
the behavior of the JUnit Platform.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"extensions-supported-utilities-annotations"><a class=3D"anchor" h=
ref=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-support=
ed-utilities-annotations"></a>5.14.1. Annotation Support</h4>
<div class=3D"paragraph">
<p><code>AnnotationSupport</code> provides static utility methods that oper=
ate on annotated elements
(e.g., packages, annotations, classes, interfaces, constructors, methods, a=
nd fields).
These include methods to check whether an element is annotated or meta-anno=
tated with a
particular annotation, to search for specific annotations, and to find anno=
tated methods
and fields in a class or interface. Some of these methods search on impleme=
nted
interfaces and within class hierarchies to find annotations. Consult the Ja=
vadoc for
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.platfo=
rm.commons/org/junit/platform/commons/support/AnnotationSupport.html">Annot=
ationSupport</a></code> for further details.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"extensions-supported-utilities-classes"><a class=3D"anchor" href=
=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-supported-=
utilities-classes"></a>5.14.2. Class Support</h4>
<div class=3D"paragraph">
<p><code>ClassSupport</code> provides static utility methods for working wi=
th classes (i.e., instances
of <code>java.lang.Class</code>). Consult the Javadoc for <code><a href=3D"=
https://junit.org/junit5/docs/current/api/org.junit.platform.commons/org/ju=
nit/platform/commons/support/ClassSupport.html">ClassSupport</a></code> for=
 further details.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"extensions-supported-utilities-reflection"><a class=3D"anchor" hr=
ef=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-supporte=
d-utilities-reflection"></a>5.14.3. Reflection Support</h4>
<div class=3D"paragraph">
<p><code>ReflectionSupport</code> provides static utility methods that augm=
ent the standard JDK
reflection and class-loading mechanisms. These include methods to scan the =
classpath in
search of classes matching specified predicates, to load and create new ins=
tances of a
class, and to find and invoke methods. Some of these methods traverse class=
 hierarchies
to locate matching methods. Consult the Javadoc for <code><a href=3D"https:=
//junit.org/junit5/docs/current/api/org.junit.platform.commons/org/junit/pl=
atform/commons/support/ReflectionSupport.html">ReflectionSupport</a></code>=
 for further
details.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"extensions-supported-utilities-modifier"><a class=3D"anchor" href=
=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-supported-=
utilities-modifier"></a>5.14.4. Modifier Support</h4>
<div class=3D"paragraph">
<p><code>ModifierSupport</code> provides static utility methods for working=
 with member and class
modifiers=E2=80=89=E2=80=94=E2=80=89for example, to determine if a member i=
s declared as <code>public</code>, <code>private</code>,
<code>abstract</code>, <code>static</code>, etc. Consult the Javadoc for <c=
ode><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.platform=
.commons/org/junit/platform/commons/support/ModifierSupport.html">ModifierS=
upport</a></code> for further
details.</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"extensions-execution-order"><a class=3D"anchor" href=3D"https://j=
unit.org/junit5/docs/current/user-guide/#extensions-execution-order"></a>5.=
15. Relative Execution Order of User Code and Extensions</h3>
<div class=3D"paragraph">
<p>When executing a test class that contains one or more test methods, a nu=
mber of extension
callbacks are called in addition to the user-supplied test and lifecycle me=
thods.</p>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
See also: <a href=3D"https://junit.org/junit5/docs/current/user-guide/#writ=
ing-tests-test-execution-order">Test Execution Order</a>
</td>
</tr>
</tbody></table>
</div>
<div class=3D"sect3">
<h4 id=3D"extensions-execution-order-overview"><a class=3D"anchor" href=3D"=
https://junit.org/junit5/docs/current/user-guide/#extensions-execution-orde=
r-overview"></a>5.15.1. User and Extension Code</h4>
<div class=3D"paragraph">
<p>The following diagram illustrates the relative order of user-supplied co=
de and extension
code. User-supplied test and lifecycle methods are shown in orange, with ca=
llback code
implemented by extensions shown in blue. The grey box denotes the execution=
 of a single
test method and will be repeated for every test method in the test class.</=
p>
</div>
<div id=3D"extensions-execution-order-diagram" class=3D"imageblock">
<div class=3D"content">
<img src=3D"https://junit.org/junit5/docs/current/user-guide/images/extensi=
ons_lifecycle.png" alt=3D"extensions lifecycle">
</div>
<div class=3D"title">User code and extension code</div>
</div>
<div class=3D"paragraph">
<p>The following table further explains the sixteen steps in the
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-exe=
cution-order-diagram">User code and extension code</a> diagram.</p>
</div>
<table class=3D"tableblock frame-all grid-all stretch">
<colgroup>
<col style=3D"width: 5%;">
<col style=3D"width: 15%;">
<col style=3D"width: 80%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Step</th>
<th class=3D"tableblock halign-left valign-top">Interface/Annotation</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1</=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">int=
erface <code>org.junit.jupiter.api.extension.BeforeAllCallback</code></p></=
td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">ext=
ension code executed before all tests of the container are executed</p></td=
>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">2</=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">ann=
otation <code>org.junit.jupiter.api.BeforeAll</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">use=
r code executed before all tests of the container are executed</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">3</=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">int=
erface <code>org.junit.jupiter.api.extension.LifecycleMethodExecutionExcept=
ionHandler
#handleBeforeAllMethodExecutionException</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">ext=
ension code for handling exceptions thrown from <code>@BeforeAll</code> met=
hods</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">4</=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">int=
erface <code>org.junit.jupiter.api.extension.BeforeEachCallback</code></p><=
/td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">ext=
ension code executed before each test is executed</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">5</=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">ann=
otation <code>org.junit.jupiter.api.BeforeEach</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">use=
r code executed before each test is executed</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">6</=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">int=
erface <code>org.junit.jupiter.api.extension.LifecycleMethodExecutionExcept=
ionHandler
#handleBeforeEachMethodExecutionException</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">ext=
ension code for handling exceptions thrown from <code>@BeforeEach</code> me=
thods</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">7</=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">int=
erface <code>org.junit.jupiter.api.extension.BeforeTestExecutionCallback</c=
ode></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">ext=
ension code executed immediately before a test is executed</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8</=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">ann=
otation <code>org.junit.jupiter.api.Test</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">use=
r code of the actual test method</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">9</=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">int=
erface <code>org.junit.jupiter.api.extension.TestExecutionExceptionHandler<=
/code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">ext=
ension code for handling exceptions thrown during a test</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">10<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">int=
erface <code>org.junit.jupiter.api.extension.AfterTestExecutionCallback</co=
de></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">ext=
ension code executed immediately after test execution and its corresponding=
 exception handlers</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">11<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">ann=
otation <code>org.junit.jupiter.api.AfterEach</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">use=
r code executed after each test is executed</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">12<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">int=
erface <code>org.junit.jupiter.api.extension.LifecycleMethodExecutionExcept=
ionHandler
#handleAfterEachMethodExecutionException</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">ext=
ension code for handling exceptions thrown from <code>@AfterEach</code> met=
hods</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">13<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">int=
erface <code>org.junit.jupiter.api.extension.AfterEachCallback</code></p></=
td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">ext=
ension code executed after each test is executed</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">14<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">ann=
otation <code>org.junit.jupiter.api.AfterAll</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">use=
r code executed after all tests of the container are executed</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">15<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">int=
erface <code>org.junit.jupiter.api.extension.LifecycleMethodExecutionExcept=
ionHandler
#handleAfterAllMethodExecutionException</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">ext=
ension code for handling exceptions thrown from <code>@AfterAll</code> meth=
ods</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">16<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">int=
erface <code>org.junit.jupiter.api.extension.AfterAllCallback</code></p></t=
d>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">ext=
ension code executed after all tests of the container are executed</p></td>
</tr>
</tbody>
</table>
<div class=3D"paragraph">
<p>In the simplest case only the actual test method will be executed (step =
8); all other
steps are optional depending on the presence of user code or extension supp=
ort for the
corresponding lifecycle callback. For further details on the various lifecy=
cle callbacks
please consult the respective Javadoc for each annotation and extension.</p=
>
</div>
<div class=3D"paragraph">
<p>All invocations of user code methods in the above table can additionally=
 be intercepted
by implementing <a href=3D"https://junit.org/junit5/docs/current/user-guide=
/#extensions-intercepting-invocations"><code>InvocationInterceptor</code></=
a>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"extensions-execution-order-wrapping-behavior"><a class=3D"anchor"=
 href=3D"https://junit.org/junit5/docs/current/user-guide/#extensions-execu=
tion-order-wrapping-behavior"></a>5.15.2. Wrapping Behavior of Callbacks</h=
4>
<div class=3D"paragraph">
<p>JUnit Jupiter always guarantees <em>wrapping</em> behavior for multiple =
registered extensions
that implement lifecycle callbacks such as <code>BeforeAllCallback</code>, =
<code>AfterAllCallback</code>,
<code>BeforeEachCallback</code>, <code>AfterEachCallback</code>, <code>Befo=
reTestExecutionCallback</code>, and
<code>AfterTestExecutionCallback</code>.</p>
</div>
<div class=3D"paragraph">
<p>That means that, given two extensions <code>Extension1</code> and <code>=
Extension2</code> with <code>Extension1</code>
registered before <code>Extension2</code>, any "before" callbacks implement=
ed by <code>Extension1</code> are
guaranteed to execute <strong>before</strong> any "before" callbacks implem=
ented by <code>Extension2</code>.
Similarly, given the two same two extensions registered in the same order, =
any "after"
callbacks implemented by <code>Extension1</code> are guaranteed to execute =
<strong>after</strong> any "after"
callbacks implemented by <code>Extension2</code>. <code>Extension1</code> i=
s therefore said to <em>wrap</em>
<code>Extension2</code>.</p>
</div>
<div class=3D"paragraph">
<p>JUnit Jupiter also guarantees <em>wrapping</em> behavior within class an=
d interface hierarchies
for user-supplied <em>lifecycle methods</em> (see <a href=3D"https://junit.=
org/junit5/docs/current/user-guide/#writing-tests-classes-and-methods">Test=
 Classes and Methods</a>).</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code>@BeforeAll</code> methods are inherited from superclasses as long =
as they are not <em>hidden</em> or
<em>overridden</em>. Furthermore, <code>@BeforeAll</code> methods from supe=
rclasses will be executed
<strong>before</strong> <code>@BeforeAll</code> methods in subclasses.</p>
<div class=3D"ulist">
<ul>
<li>
<p>Similarly, <code>@BeforeAll</code> methods declared in an interface are =
inherited as long as they
are not <em>hidden</em> or <em>overridden</em>, and <code>@BeforeAll</code>=
 methods from an interface will be
executed <strong>before</strong> <code>@BeforeAll</code> methods in the cla=
ss that implements the interface.</p>
</li>
</ul>
</div>
</li>
<li>
<p><code>@AfterAll</code> methods are inherited from superclasses as long a=
s they are not <em>hidden</em> or
<em>overridden</em>. Furthermore, <code>@AfterAll</code> methods from super=
classes will be executed
<strong>after</strong> <code>@AfterAll</code> methods in subclasses.</p>
<div class=3D"ulist">
<ul>
<li>
<p>Similarly, <code>@AfterAll</code> methods declared in an interface are i=
nherited as long as they
are not <em>hidden</em> or <em>overridden</em>, and <code>@AfterAll</code> =
methods from an interface will be
executed <strong>after</strong> <code>@AfterAll</code> methods in the class=
 that implements the interface.</p>
</li>
</ul>
</div>
</li>
<li>
<p><code>@BeforeEach</code> methods are inherited from superclasses as long=
 as they are not
<em>overridden</em>. Furthermore, <code>@BeforeEach</code> methods from sup=
erclasses will be executed
<strong>before</strong> <code>@BeforeEach</code> methods in subclasses.</p>
<div class=3D"ulist">
<ul>
<li>
<p>Similarly, <code>@BeforeEach</code> methods declared as interface defaul=
t methods are inherited as
long as they are not <em>overridden</em>, and <code>@BeforeEach</code> defa=
ult methods will be executed
<strong>before</strong> <code>@BeforeEach</code> methods in the class that =
implements the interface.</p>
</li>
</ul>
</div>
</li>
<li>
<p><code>@AfterEach</code> methods are inherited from superclasses as long =
as they are not
<em>overridden</em>. Furthermore, <code>@AfterEach</code> methods from supe=
rclasses will be executed
<strong>after</strong> <code>@AfterEach</code> methods in subclasses.</p>
<div class=3D"ulist">
<ul>
<li>
<p>Similarly, <code>@AfterEach</code> methods declared as interface default=
 methods are inherited as
long as they are not <em>overridden</em>, and <code>@AfterEach</code> defau=
lt methods will be executed
<strong>after</strong> <code>@AfterEach</code> methods in the class that im=
plements the interface.</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>The following examples demonstrate this behavior. Please note that the e=
xamples do not
actually do anything realistic. Instead, they mimic common scenarios for te=
sting
interactions with the database. All methods imported statically from the <c=
ode>Logger</code> class
log contextual information in order to help us better understand the execut=
ion order of
user-supplied callback methods and callback methods in extensions.</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">Extension1</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">static</span> <span class=3D"n">example</s=
pan><span class=3D"o">.</span><span class=3D"na">callbacks</span><span clas=
s=3D"o">.</span><span class=3D"na">Logger</span><span class=3D"o">.</span><=
span class=3D"na">afterEachCallback</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">example</span><span class=3D"o">.</span><span class=3D"na">callbac=
ks</span><span class=3D"o">.</span><span class=3D"na">Logger</span><span cl=
ass=3D"o">.</span><span class=3D"na">beforeEachCallback</span><span class=
=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.e=
xtension.AfterEachCallback</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.e=
xtension.BeforeEachCallback</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.e=
xtension.ExtensionContext</span><span class=3D"o">;</span>

<span class=3D"kd">public</span> <span class=3D"kd">class</span> <span clas=
s=3D"nc">Extension1</span> <span class=3D"kd">implements</span> <span class=
=3D"nc">BeforeEachCallback</span><span class=3D"o">,</span> <span class=3D"=
nc">AfterEachCallback</span> <span class=3D"o">{</span>

    <span class=3D"nd">@Override</span>
    <span class=3D"kd">public</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">beforeEach</span><span class=3D"o">(</span><span class=3D"nc">E=
xtensionContext</span> <span class=3D"n">context</span><span class=3D"o">)<=
/span> <span class=3D"o">{</span>
        <span class=3D"n">beforeEachCallback</span><span class=3D"o">(</spa=
n><span class=3D"k">this</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Override</span>
    <span class=3D"kd">public</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">afterEach</span><span class=3D"o">(</span><span class=3D"nc">Ex=
tensionContext</span> <span class=3D"n">context</span><span class=3D"o">)</=
span> <span class=3D"o">{</span>
        <span class=3D"n">afterEachCallback</span><span class=3D"o">(</span=
><span class=3D"k">this</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"listingblock">
<div class=3D"title">Extension2</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">static</span> <span class=3D"n">example</s=
pan><span class=3D"o">.</span><span class=3D"na">callbacks</span><span clas=
s=3D"o">.</span><span class=3D"na">Logger</span><span class=3D"o">.</span><=
span class=3D"na">afterEachCallback</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">example</span><span class=3D"o">.</span><span class=3D"na">callbac=
ks</span><span class=3D"o">.</span><span class=3D"na">Logger</span><span cl=
ass=3D"o">.</span><span class=3D"na">beforeEachCallback</span><span class=
=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.e=
xtension.AfterEachCallback</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.e=
xtension.BeforeEachCallback</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.e=
xtension.ExtensionContext</span><span class=3D"o">;</span>

<span class=3D"kd">public</span> <span class=3D"kd">class</span> <span clas=
s=3D"nc">Extension2</span> <span class=3D"kd">implements</span> <span class=
=3D"nc">BeforeEachCallback</span><span class=3D"o">,</span> <span class=3D"=
nc">AfterEachCallback</span> <span class=3D"o">{</span>

    <span class=3D"nd">@Override</span>
    <span class=3D"kd">public</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">beforeEach</span><span class=3D"o">(</span><span class=3D"nc">E=
xtensionContext</span> <span class=3D"n">context</span><span class=3D"o">)<=
/span> <span class=3D"o">{</span>
        <span class=3D"n">beforeEachCallback</span><span class=3D"o">(</spa=
n><span class=3D"k">this</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Override</span>
    <span class=3D"kd">public</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">afterEach</span><span class=3D"o">(</span><span class=3D"nc">Ex=
tensionContext</span> <span class=3D"n">context</span><span class=3D"o">)</=
span> <span class=3D"o">{</span>
        <span class=3D"n">afterEachCallback</span><span class=3D"o">(</span=
><span class=3D"k">this</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"listingblock">
<div class=3D"title">AbstractDatabaseTests</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">static</span> <span class=3D"n">example</s=
pan><span class=3D"o">.</span><span class=3D"na">callbacks</span><span clas=
s=3D"o">.</span><span class=3D"na">Logger</span><span class=3D"o">.</span><=
span class=3D"na">afterAllMethod</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">example</span><span class=3D"o">.</span><span class=3D"na">callbac=
ks</span><span class=3D"o">.</span><span class=3D"na">Logger</span><span cl=
ass=3D"o">.</span><span class=3D"na">afterEachMethod</span><span class=3D"o=
">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">example</span><span class=3D"o">.</span><span class=3D"na">callbac=
ks</span><span class=3D"o">.</span><span class=3D"na">Logger</span><span cl=
ass=3D"o">.</span><span class=3D"na">beforeAllMethod</span><span class=3D"o=
">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">example</span><span class=3D"o">.</span><span class=3D"na">callbac=
ks</span><span class=3D"o">.</span><span class=3D"na">Logger</span><span cl=
ass=3D"o">.</span><span class=3D"na">beforeEachMethod</span><span class=3D"=
o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.A=
fterAll</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.A=
fterEach</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.B=
eforeAll</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.B=
eforeEach</span><span class=3D"o">;</span>

<span class=3D"cm">/**
 * Abstract base class for tests that use the database.
 */</span>
<span class=3D"kd">abstract</span> <span class=3D"kd">class</span> <span cl=
ass=3D"nc">AbstractDatabaseTests</span> <span class=3D"o">{</span>

    <span class=3D"nd">@BeforeAll</span>
    <span class=3D"kd">static</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">createDatabase</span><span class=3D"o">()</span> <span class=3D=
"o">{</span>
        <span class=3D"n">beforeAllMethod</span><span class=3D"o">(</span><=
span class=3D"nc">AbstractDatabaseTests</span><span class=3D"o">.</span><sp=
an class=3D"na">class</span><span class=3D"o">.</span><span class=3D"na">ge=
tSimpleName</span><span class=3D"o">()</span> <span class=3D"o">+</span> <s=
pan class=3D"s">".createDatabase()"</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@BeforeEach</span>
    <span class=3D"kt">void</span> <span class=3D"nf">connectToDatabase</sp=
an><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">beforeEachMethod</span><span class=3D"o">(</span>=
<span class=3D"nc">AbstractDatabaseTests</span><span class=3D"o">.</span><s=
pan class=3D"na">class</span><span class=3D"o">.</span><span class=3D"na">g=
etSimpleName</span><span class=3D"o">()</span> <span class=3D"o">+</span> <=
span class=3D"s">".connectToDatabase()"</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@AfterEach</span>
    <span class=3D"kt">void</span> <span class=3D"nf">disconnectFromDatabas=
e</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">afterEachMethod</span><span class=3D"o">(</span><=
span class=3D"nc">AbstractDatabaseTests</span><span class=3D"o">.</span><sp=
an class=3D"na">class</span><span class=3D"o">.</span><span class=3D"na">ge=
tSimpleName</span><span class=3D"o">()</span> <span class=3D"o">+</span> <s=
pan class=3D"s">".disconnectFromDatabase()"</span><span class=3D"o">);</spa=
n>
    <span class=3D"o">}</span>

    <span class=3D"nd">@AfterAll</span>
    <span class=3D"kd">static</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">destroyDatabase</span><span class=3D"o">()</span> <span class=
=3D"o">{</span>
        <span class=3D"n">afterAllMethod</span><span class=3D"o">(</span><s=
pan class=3D"nc">AbstractDatabaseTests</span><span class=3D"o">.</span><spa=
n class=3D"na">class</span><span class=3D"o">.</span><span class=3D"na">get=
SimpleName</span><span class=3D"o">()</span> <span class=3D"o">+</span> <sp=
an class=3D"s">".destroyDatabase()"</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"listingblock">
<div class=3D"title">DatabaseTestsDemo</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">static</span> <span class=3D"n">example</s=
pan><span class=3D"o">.</span><span class=3D"na">callbacks</span><span clas=
s=3D"o">.</span><span class=3D"na">Logger</span><span class=3D"o">.</span><=
span class=3D"na">afterEachMethod</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">example</span><span class=3D"o">.</span><span class=3D"na">callbac=
ks</span><span class=3D"o">.</span><span class=3D"na">Logger</span><span cl=
ass=3D"o">.</span><span class=3D"na">beforeAllMethod</span><span class=3D"o=
">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">example</span><span class=3D"o">.</span><span class=3D"na">callbac=
ks</span><span class=3D"o">.</span><span class=3D"na">Logger</span><span cl=
ass=3D"o">.</span><span class=3D"na">beforeEachMethod</span><span class=3D"=
o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">example</span><span class=3D"o">.</span><span class=3D"na">callbac=
ks</span><span class=3D"o">.</span><span class=3D"na">Logger</span><span cl=
ass=3D"o">.</span><span class=3D"na">testMethod</span><span class=3D"o">;</=
span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.A=
fterAll</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.A=
fterEach</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.B=
eforeAll</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.B=
eforeEach</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.e=
xtension.ExtendWith</span><span class=3D"o">;</span>

<span class=3D"cm">/**
 * Extension of {@link AbstractDatabaseTests} that inserts test data
 * into the database (after the database connection has been opened)
 * and deletes test data (before the database connection is closed).
 */</span>
<span class=3D"nd">@ExtendWith</span><span class=3D"o">({</span> <span clas=
s=3D"nc">Extension1</span><span class=3D"o">.</span><span class=3D"na">clas=
s</span><span class=3D"o">,</span> <span class=3D"nc">Extension2</span><spa=
n class=3D"o">.</span><span class=3D"na">class</span> <span class=3D"o">})<=
/span>
<span class=3D"kd">class</span> <span class=3D"nc">DatabaseTestsDemo</span>=
 <span class=3D"kd">extends</span> <span class=3D"nc">AbstractDatabaseTests=
</span> <span class=3D"o">{</span>

    <span class=3D"nd">@BeforeAll</span>
    <span class=3D"kd">static</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">beforeAll</span><span class=3D"o">()</span> <span class=3D"o">{=
</span>
        <span class=3D"n">beforeAllMethod</span><span class=3D"o">(</span><=
span class=3D"nc">DatabaseTestsDemo</span><span class=3D"o">.</span><span c=
lass=3D"na">class</span><span class=3D"o">.</span><span class=3D"na">getSim=
pleName</span><span class=3D"o">()</span> <span class=3D"o">+</span> <span =
class=3D"s">".beforeAll()"</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@BeforeEach</span>
    <span class=3D"kt">void</span> <span class=3D"nf">insertTestDataIntoDat=
abase</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">beforeEachMethod</span><span class=3D"o">(</span>=
<span class=3D"n">getClass</span><span class=3D"o">().</span><span class=3D=
"na">getSimpleName</span><span class=3D"o">()</span> <span class=3D"o">+</s=
pan> <span class=3D"s">".insertTestDataIntoDatabase()"</span><span class=3D=
"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">testDatabaseFunctiona=
lity</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">testMethod</span><span class=3D"o">(</span><span =
class=3D"n">getClass</span><span class=3D"o">().</span><span class=3D"na">g=
etSimpleName</span><span class=3D"o">()</span> <span class=3D"o">+</span> <=
span class=3D"s">".testDatabaseFunctionality()"</span><span class=3D"o">);<=
/span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@AfterEach</span>
    <span class=3D"kt">void</span> <span class=3D"nf">deleteTestDataFromDat=
abase</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">afterEachMethod</span><span class=3D"o">(</span><=
span class=3D"n">getClass</span><span class=3D"o">().</span><span class=3D"=
na">getSimpleName</span><span class=3D"o">()</span> <span class=3D"o">+</sp=
an> <span class=3D"s">".deleteTestDataFromDatabase()"</span><span class=3D"=
o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@AfterAll</span>
    <span class=3D"kd">static</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">afterAll</span><span class=3D"o">()</span> <span class=3D"o">{<=
/span>
        <span class=3D"n">beforeAllMethod</span><span class=3D"o">(</span><=
span class=3D"nc">DatabaseTestsDemo</span><span class=3D"o">.</span><span c=
lass=3D"na">class</span><span class=3D"o">.</span><span class=3D"na">getSim=
pleName</span><span class=3D"o">()</span> <span class=3D"o">+</span> <span =
class=3D"s">".afterAll()"</span><span class=3D"o">);</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>When the <code>DatabaseTestsDemo</code> test class is executed, the foll=
owing is logged.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre>@BeforeAll AbstractDatabaseTests.createDatabase()
@BeforeAll DatabaseTestsDemo.beforeAll()
  Extension1.beforeEach()
  Extension2.beforeEach()
    @BeforeEach AbstractDatabaseTests.connectToDatabase()
    @BeforeEach DatabaseTestsDemo.insertTestDataIntoDatabase()
      @Test DatabaseTestsDemo.testDatabaseFunctionality()
    @AfterEach DatabaseTestsDemo.deleteTestDataFromDatabase()
    @AfterEach AbstractDatabaseTests.disconnectFromDatabase()
  Extension2.afterEach()
  Extension1.afterEach()
@BeforeAll DatabaseTestsDemo.afterAll()
@AfterAll AbstractDatabaseTests.destroyDatabase()</pre>
</div>
</div>
<div class=3D"paragraph">
<p>The following sequence diagram helps to shed further light on what actua=
lly goes on within
the <code>JupiterTestEngine</code> when the <code>DatabaseTestsDemo</code> =
test class is executed.</p>
</div>
<div class=3D"imageblock">
<div class=3D"content">
<img src=3D"https://junit.org/junit5/docs/current/user-guide/images/extensi=
ons_DatabaseTestsDemo.png" alt=3D"extensions DatabaseTestsDemo">
</div>
<div class=3D"title">DatabaseTestsDemo</div>
</div>
<div class=3D"paragraph">
<p>JUnit Jupiter does <strong>not</strong> guarantee the execution order of=
 multiple lifecycle methods
that are declared within a <em>single</em> test class or test interface. It=
 may at times appear
that JUnit Jupiter invokes such methods in alphabetical order. However, tha=
t is not
precisely true. The ordering is analogous to the ordering for <code>@Test</=
code> methods within a
single test class.</p>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
<div class=3D"paragraph">
<p>Lifecycle methods that are declared within a <em>single</em> test class =
or test interface will be
ordered using an algorithm that is deterministic but intentionally non-obvi=
ous. This
ensures that subsequent runs of a test suite execute lifecycle methods in t=
he same order,
thereby allowing for repeatable builds.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>In addition, JUnit Jupiter does <strong>not</strong> support <em>wrappin=
g</em> behavior for multiple lifecycle
methods declared within a single test class or test interface.</p>
</div>
<div class=3D"paragraph">
<p>The following example demonstrates this behavior. Specifically, the life=
cycle method
configuration is <em>broken</em> due to the order in which the locally decl=
ared lifecycle methods
are executed.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Test data is inserted <em>before</em> the database connection has been o=
pened, which results in
a failure to connect to the database.</p>
</li>
<li>
<p>The database connection is closed <em>before</em> deleting the test data=
, which results in a
failure to connect to the database.</p>
</li>
</ul>
</div>
<div class=3D"listingblock">
<div class=3D"title">BrokenLifecycleMethodConfigDemo</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">static</span> <span class=3D"n">example</s=
pan><span class=3D"o">.</span><span class=3D"na">callbacks</span><span clas=
s=3D"o">.</span><span class=3D"na">Logger</span><span class=3D"o">.</span><=
span class=3D"na">afterEachMethod</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">example</span><span class=3D"o">.</span><span class=3D"na">callbac=
ks</span><span class=3D"o">.</span><span class=3D"na">Logger</span><span cl=
ass=3D"o">.</span><span class=3D"na">beforeEachMethod</span><span class=3D"=
o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">example</span><span class=3D"o">.</span><span class=3D"na">callbac=
ks</span><span class=3D"o">.</span><span class=3D"na">Logger</span><span cl=
ass=3D"o">.</span><span class=3D"na">testMethod</span><span class=3D"o">;</=
span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.A=
fterEach</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.B=
eforeEach</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.e=
xtension.ExtendWith</span><span class=3D"o">;</span>

<span class=3D"cm">/**
 * Example of "broken" lifecycle method configuration.
 *
 * &lt;p&gt;Test data is inserted before the database connection has been o=
pened.
 *
 * &lt;p&gt;Database connection is closed before deleting test data.
 */</span>
<span class=3D"nd">@ExtendWith</span><span class=3D"o">({</span> <span clas=
s=3D"nc">Extension1</span><span class=3D"o">.</span><span class=3D"na">clas=
s</span><span class=3D"o">,</span> <span class=3D"nc">Extension2</span><spa=
n class=3D"o">.</span><span class=3D"na">class</span> <span class=3D"o">})<=
/span>
<span class=3D"kd">class</span> <span class=3D"nc">BrokenLifecycleMethodCon=
figDemo</span> <span class=3D"o">{</span>

    <span class=3D"nd">@BeforeEach</span>
    <span class=3D"kt">void</span> <span class=3D"nf">connectToDatabase</sp=
an><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">beforeEachMethod</span><span class=3D"o">(</span>=
<span class=3D"n">getClass</span><span class=3D"o">().</span><span class=3D=
"na">getSimpleName</span><span class=3D"o">()</span> <span class=3D"o">+</s=
pan> <span class=3D"s">".connectToDatabase()"</span><span class=3D"o">);</s=
pan>
    <span class=3D"o">}</span>

    <span class=3D"nd">@BeforeEach</span>
    <span class=3D"kt">void</span> <span class=3D"nf">insertTestDataIntoDat=
abase</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">beforeEachMethod</span><span class=3D"o">(</span>=
<span class=3D"n">getClass</span><span class=3D"o">().</span><span class=3D=
"na">getSimpleName</span><span class=3D"o">()</span> <span class=3D"o">+</s=
pan> <span class=3D"s">".insertTestDataIntoDatabase()"</span><span class=3D=
"o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">testDatabaseFunctiona=
lity</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">testMethod</span><span class=3D"o">(</span><span =
class=3D"n">getClass</span><span class=3D"o">().</span><span class=3D"na">g=
etSimpleName</span><span class=3D"o">()</span> <span class=3D"o">+</span> <=
span class=3D"s">".testDatabaseFunctionality()"</span><span class=3D"o">);<=
/span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@AfterEach</span>
    <span class=3D"kt">void</span> <span class=3D"nf">deleteTestDataFromDat=
abase</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">afterEachMethod</span><span class=3D"o">(</span><=
span class=3D"n">getClass</span><span class=3D"o">().</span><span class=3D"=
na">getSimpleName</span><span class=3D"o">()</span> <span class=3D"o">+</sp=
an> <span class=3D"s">".deleteTestDataFromDatabase()"</span><span class=3D"=
o">);</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@AfterEach</span>
    <span class=3D"kt">void</span> <span class=3D"nf">disconnectFromDatabas=
e</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">afterEachMethod</span><span class=3D"o">(</span><=
span class=3D"n">getClass</span><span class=3D"o">().</span><span class=3D"=
na">getSimpleName</span><span class=3D"o">()</span> <span class=3D"o">+</sp=
an> <span class=3D"s">".disconnectFromDatabase()"</span><span class=3D"o">)=
;</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>When the <code>BrokenLifecycleMethodConfigDemo</code> test class is exec=
uted, the following is logged.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre>Extension1.beforeEach()
Extension2.beforeEach()
  @BeforeEach BrokenLifecycleMethodConfigDemo.insertTestDataIntoDatabase()
  @BeforeEach BrokenLifecycleMethodConfigDemo.connectToDatabase()
    @Test BrokenLifecycleMethodConfigDemo.testDatabaseFunctionality()
  @AfterEach BrokenLifecycleMethodConfigDemo.disconnectFromDatabase()
  @AfterEach BrokenLifecycleMethodConfigDemo.deleteTestDataFromDatabase()
Extension2.afterEach()
Extension1.afterEach()</pre>
</div>
</div>
<div class=3D"paragraph">
<p>The following sequence diagram helps to shed further light on what actua=
lly goes on within
the <code>JupiterTestEngine</code> when the <code>BrokenLifecycleMethodConf=
igDemo</code> test class is executed.</p>
</div>
<div class=3D"imageblock">
<div class=3D"content">
<img src=3D"https://junit.org/junit5/docs/current/user-guide/images/extensi=
ons_BrokenLifecycleMethodConfigDemo.png" alt=3D"extensions BrokenLifecycleM=
ethodConfigDemo">
</div>
<div class=3D"title">BrokenLifecycleMethodConfigDemo</div>
</div>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-tip" title=3D"Tip"></i>
</td>
<td class=3D"content">
<div class=3D"paragraph">
<p>Due to the aforementioned behavior, the JUnit Team recommends that devel=
opers declare at
most one of each type of <em>lifecycle method</em> (see <a href=3D"https://=
junit.org/junit5/docs/current/user-guide/#writing-tests-classes-and-methods=
">Test Classes and Methods</a>)
per test class or test interface unless there are no dependencies between s=
uch lifecycle
methods.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"advanced-topics"><a class=3D"anchor" href=3D"https://junit.org/ju=
nit5/docs/current/user-guide/#advanced-topics"></a>6. Advanced Topics</h2>
<div class=3D"sectionbody">
<div class=3D"sect2">
<h3 id=3D"launcher-api"><a class=3D"anchor" href=3D"https://junit.org/junit=
5/docs/current/user-guide/#launcher-api"></a>6.1. JUnit Platform Launcher A=
PI</h3>
<div class=3D"paragraph">
<p>One of the prominent goals of JUnit 5 is to make the interface between J=
Unit and its
programmatic clients =E2=80=93 build tools and IDEs =E2=80=93 more powerful=
 and stable. The purpose is to
decouple the internals of discovering and executing tests from all the filt=
ering and
configuration that=E2=80=99s necessary from the outside.</p>
</div>
<div class=3D"paragraph">
<p>JUnit 5 introduces the concept of a <code>Launcher</code> that can be us=
ed to discover, filter, and
execute tests. Moreover, third party test libraries =E2=80=93 like Spock, C=
ucumber, and FitNesse
=E2=80=93 can plug into the JUnit Platform=E2=80=99s launching infrastructu=
re by providing a custom
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.platfo=
rm.engine/org/junit/platform/engine/TestEngine.html">TestEngine</a></code>.=
</p>
</div>
<div class=3D"paragraph">
<p>The launcher API is in the <code><a href=3D"https://junit.org/junit5/doc=
s/current/api/org.junit.platform.launcher/org/junit/platform/launcher/packa=
ge-summary.html">junit-platform-launcher</a></code> module.</p>
</div>
<div class=3D"paragraph">
<p>An example consumer of the launcher API is the <code><a href=3D"https://=
junit.org/junit5/docs/current/api/org.junit.platform.console/org/junit/plat=
form/console/ConsoleLauncher.html">ConsoleLauncher</a></code> in the
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.platfo=
rm.console/org/junit/platform/console/package-summary.html">junit-platform-=
console</a></code> project.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"launcher-api-discovery"><a class=3D"anchor" href=3D"https://junit=
.org/junit5/docs/current/user-guide/#launcher-api-discovery"></a>6.1.1. Dis=
covering Tests</h4>
<div class=3D"paragraph">
<p>Having <em>test discovery</em> as a dedicated feature of the platform it=
self frees IDEs and build
tools from most of the difficulties they had to go through to identify test=
 classes and
test methods in previous versions of JUnit.</p>
</div>
<div class=3D"paragraph">
<p>Usage Example:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">static</span> <span class=3D"n">org</span>=
<span class=3D"o">.</span><span class=3D"na">junit</span><span class=3D"o">=
.</span><span class=3D"na">platform</span><span class=3D"o">.</span><span c=
lass=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">disco=
very</span><span class=3D"o">.</span><span class=3D"na">ClassNameFilter</sp=
an><span class=3D"o">.</span><span class=3D"na">includeClassNamePatterns</s=
pan><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">platform</span><span class=3D=
"o">.</span><span class=3D"na">engine</span><span class=3D"o">.</span><span=
 class=3D"na">discovery</span><span class=3D"o">.</span><span class=3D"na">=
DiscoverySelectors</span><span class=3D"o">.</span><span class=3D"na">selec=
tClass</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">platform</span><span class=3D=
"o">.</span><span class=3D"na">engine</span><span class=3D"o">.</span><span=
 class=3D"na">discovery</span><span class=3D"o">.</span><span class=3D"na">=
DiscoverySelectors</span><span class=3D"o">.</span><span class=3D"na">selec=
tPackage</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">java.io.PrintWriter</sp=
an><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.nio.file.Path</spa=
n><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.nio.file.Paths</sp=
an><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.engi=
ne.FilterResult</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.engi=
ne.TestDescriptor</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.laun=
cher.Launcher</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.laun=
cher.LauncherDiscoveryListener</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.laun=
cher.LauncherDiscoveryRequest</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.laun=
cher.LauncherSession</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.laun=
cher.LauncherSessionListener</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.laun=
cher.PostDiscoveryFilter</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.laun=
cher.TestExecutionListener</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.laun=
cher.TestPlan</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.laun=
cher.core.LauncherConfig</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.laun=
cher.core.LauncherDiscoveryRequestBuilder</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.laun=
cher.core.LauncherFactory</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.laun=
cher.listeners.SummaryGeneratingListener</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.laun=
cher.listeners.TestExecutionSummary</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.repo=
rting.legacy.xml.LegacyXmlReportGeneratingListener</span><span class=3D"o">=
;</span></code></pre>
</div>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nc">=
LauncherDiscoveryRequest</span> <span class=3D"n">request</span> <span clas=
s=3D"o">=3D</span> <span class=3D"nc">LauncherDiscoveryRequestBuilder</span=
><span class=3D"o">.</span><span class=3D"na">request</span><span class=3D"=
o">()</span>
    <span class=3D"o">.</span><span class=3D"na">selectors</span><span clas=
s=3D"o">(</span>
        <span class=3D"n">selectPackage</span><span class=3D"o">(</span><sp=
an class=3D"s">"com.example.mytests"</span><span class=3D"o">),</span>
        <span class=3D"n">selectClass</span><span class=3D"o">(</span><span=
 class=3D"nc">MyTestClass</span><span class=3D"o">.</span><span class=3D"na=
">class</span><span class=3D"o">)</span>
    <span class=3D"o">)</span>
    <span class=3D"o">.</span><span class=3D"na">filters</span><span class=
=3D"o">(</span>
        <span class=3D"n">includeClassNamePatterns</span><span class=3D"o">=
(</span><span class=3D"s">".*Tests"</span><span class=3D"o">)</span>
    <span class=3D"o">)</span>
    <span class=3D"o">.</span><span class=3D"na">build</span><span class=3D=
"o">();</span>

<span class=3D"k">try</span> <span class=3D"o">(</span><span class=3D"nc">L=
auncherSession</span> <span class=3D"n">session</span> <span class=3D"o">=
=3D</span> <span class=3D"nc">LauncherFactory</span><span class=3D"o">.</sp=
an><span class=3D"na">openSession</span><span class=3D"o">())</span> <span =
class=3D"o">{</span>
    <span class=3D"nc">TestPlan</span> <span class=3D"n">testPlan</span> <s=
pan class=3D"o">=3D</span> <span class=3D"n">session</span><span class=3D"o=
">.</span><span class=3D"na">getLauncher</span><span class=3D"o">().</span>=
<span class=3D"na">discover</span><span class=3D"o">(</span><span class=3D"=
n">request</span><span class=3D"o">);</span>

    <span class=3D"c1">// ... discover additional test plans or execute tes=
ts</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You can select classes, methods, and all classes in a package or even se=
arch for all tests
in the class-path or module-path. Discovery takes place across all particip=
ating test
engines.</p>
</div>
<div class=3D"paragraph">
<p>The resulting <code>TestPlan</code> is a hierarchical (and read-only) de=
scription of all engines,
classes, and test methods that fit the <code>LauncherDiscoveryRequest</code=
>. The client can
traverse the tree, retrieve details about a node, and get a link to the ori=
ginal source
(like class, method, or file position). Every node in the test plan has a <=
em>unique ID</em>
that can be used to invoke a particular test or group of tests.</p>
</div>
<div class=3D"paragraph">
<p>Clients can register one or more <code><a href=3D"https://junit.org/juni=
t5/docs/current/api/org.junit.platform.launcher/org/junit/platform/launcher=
/LauncherDiscoveryListener.html">LauncherDiscoveryListener</a></code> imple=
mentations via the
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.platfo=
rm.launcher/org/junit/platform/launcher/core/LauncherDiscoveryRequestBuilde=
r.html">LauncherDiscoveryRequestBuilder</a></code> to gain insight into eve=
nts that occur during test
discovery. By default, the builder registers an "abort on failure" listener=
 that aborts
test discovery after the first discovery failure is encountered. The defaul=
t
<code>LauncherDiscoveryListener</code> can be changed via the
<code>junit.platform.discovery.listener.default</code> <a href=3D"https://j=
unit.org/junit5/docs/current/user-guide/#running-tests-config-params">confi=
guration
parameter</a>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"launcher-api-execution"><a class=3D"anchor" href=3D"https://junit=
.org/junit5/docs/current/user-guide/#launcher-api-execution"></a>6.1.2. Exe=
cuting Tests</h4>
<div class=3D"paragraph">
<p>To execute tests, clients can use the same <code>LauncherDiscoveryReques=
t</code> as in the discovery
phase or create a new request. Test progress and reporting can be achieved =
by registering
one or more <code><a href=3D"https://junit.org/junit5/docs/current/api/org.=
junit.platform.launcher/org/junit/platform/launcher/TestExecutionListener.h=
tml">TestExecutionListener</a></code> implementations with the <code>Launch=
er</code> as in the
following example.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nc">=
LauncherDiscoveryRequest</span> <span class=3D"n">request</span> <span clas=
s=3D"o">=3D</span> <span class=3D"nc">LauncherDiscoveryRequestBuilder</span=
><span class=3D"o">.</span><span class=3D"na">request</span><span class=3D"=
o">()</span>
    <span class=3D"o">.</span><span class=3D"na">selectors</span><span clas=
s=3D"o">(</span>
        <span class=3D"n">selectPackage</span><span class=3D"o">(</span><sp=
an class=3D"s">"com.example.mytests"</span><span class=3D"o">),</span>
        <span class=3D"n">selectClass</span><span class=3D"o">(</span><span=
 class=3D"nc">MyTestClass</span><span class=3D"o">.</span><span class=3D"na=
">class</span><span class=3D"o">)</span>
    <span class=3D"o">)</span>
    <span class=3D"o">.</span><span class=3D"na">filters</span><span class=
=3D"o">(</span>
        <span class=3D"n">includeClassNamePatterns</span><span class=3D"o">=
(</span><span class=3D"s">".*Tests"</span><span class=3D"o">)</span>
    <span class=3D"o">)</span>
    <span class=3D"o">.</span><span class=3D"na">build</span><span class=3D=
"o">();</span>

<span class=3D"nc">SummaryGeneratingListener</span> <span class=3D"n">liste=
ner</span> <span class=3D"o">=3D</span> <span class=3D"k">new</span> <span =
class=3D"nc">SummaryGeneratingListener</span><span class=3D"o">();</span>

<span class=3D"k">try</span> <span class=3D"o">(</span><span class=3D"nc">L=
auncherSession</span> <span class=3D"n">session</span> <span class=3D"o">=
=3D</span> <span class=3D"nc">LauncherFactory</span><span class=3D"o">.</sp=
an><span class=3D"na">openSession</span><span class=3D"o">())</span> <span =
class=3D"o">{</span>
    <span class=3D"nc">Launcher</span> <span class=3D"n">launcher</span> <s=
pan class=3D"o">=3D</span> <span class=3D"n">session</span><span class=3D"o=
">.</span><span class=3D"na">getLauncher</span><span class=3D"o">();</span>
    <span class=3D"c1">// Register a listener of your choice</span>
    <span class=3D"n">launcher</span><span class=3D"o">.</span><span class=
=3D"na">registerTestExecutionListeners</span><span class=3D"o">(</span><spa=
n class=3D"n">listener</span><span class=3D"o">);</span>
    <span class=3D"c1">// Discover tests and build a test plan</span>
    <span class=3D"nc">TestPlan</span> <span class=3D"n">testPlan</span> <s=
pan class=3D"o">=3D</span> <span class=3D"n">launcher</span><span class=3D"=
o">.</span><span class=3D"na">discover</span><span class=3D"o">(</span><spa=
n class=3D"n">request</span><span class=3D"o">);</span>
    <span class=3D"c1">// Execute test plan</span>
    <span class=3D"n">launcher</span><span class=3D"o">.</span><span class=
=3D"na">execute</span><span class=3D"o">(</span><span class=3D"n">testPlan<=
/span><span class=3D"o">);</span>
    <span class=3D"c1">// Alternatively, execute the request directly</span=
>
    <span class=3D"n">launcher</span><span class=3D"o">.</span><span class=
=3D"na">execute</span><span class=3D"o">(</span><span class=3D"n">request</=
span><span class=3D"o">);</span>
<span class=3D"o">}</span>

<span class=3D"nc">TestExecutionSummary</span> <span class=3D"n">summary</s=
pan> <span class=3D"o">=3D</span> <span class=3D"n">listener</span><span cl=
ass=3D"o">.</span><span class=3D"na">getSummary</span><span class=3D"o">();=
</span>
<span class=3D"c1">// Do something with the summary...</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>There is no return value for the <code>execute()</code> method, but you =
can use a
<code>TestExecutionListener</code> to aggregate the results. For examples s=
ee the
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.platfo=
rm.launcher/org/junit/platform/launcher/listeners/SummaryGeneratingListener=
.html">SummaryGeneratingListener</a></code>, <code><a href=3D"https://junit=
.org/junit5/docs/current/api/org.junit.platform.reporting/org/junit/platfor=
m/reporting/legacy/xml/LegacyXmlReportGeneratingListener.html">LegacyXmlRep=
ortGeneratingListener</a></code>, and
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.platfo=
rm.launcher/org/junit/platform/launcher/listeners/UniqueIdTrackingListener.=
html">UniqueIdTrackingListener</a></code>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"launcher-api-engines-custom"><a class=3D"anchor" href=3D"https://=
junit.org/junit5/docs/current/user-guide/#launcher-api-engines-custom"></a>=
6.1.3. Registering a TestEngine</h4>
<div class=3D"paragraph">
<p>JUnit provides three <code><a href=3D"https://junit.org/junit5/docs/curr=
ent/api/org.junit.platform.engine/org/junit/platform/engine/TestEngine.html=
">TestEngine</a></code> implementations.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.jup=
iter.engine/org/junit/jupiter/engine/package-summary.html">junit-jupiter-en=
gine</a></code>: The core of JUnit Jupiter.</p>
</li>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.vin=
tage.engine/org/junit/vintage/engine/package-summary.html">junit-vintage-en=
gine</a></code>: A thin layer on top of JUnit 4 to allow running <em>vintag=
e</em>
tests with the launcher infrastructure.</p>
</li>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.pla=
tform.suite.engine/org/junit/platform/suite/engine/package-summary.html">ju=
nit-platform-suite-engine</a></code>: To execute declarative suites of test=
s with the
launcher infrastructure.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Third parties may also contribute their own <code>TestEngine</code> by i=
mplementing the interfaces in
the <a href=3D"https://junit.org/junit5/docs/current/api/org.junit.platform=
.engine/org/junit/platform/engine/package-summary.html">junit-platform-engi=
ne</a> module and <em>registering</em> their engine. Engine registration is
supported via Java=E2=80=99s <code><a href=3D"https://docs.oracle.com/en/ja=
va/javase/11/docs/api/java.base/java/util/ServiceLoader.html">ServiceLoader=
</a></code> mechanism. For example, the <code>junit-jupiter-engine</code>
module registers its <code>org.junit.jupiter.engine.JupiterTestEngine</code=
> in a file named
<code>org.junit.platform.engine.TestEngine</code> within the <code>/META-IN=
F/services</code> folder in the
<code>junit-jupiter-engine</code> JAR.</p>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.platfo=
rm.engine/org/junit/platform/engine/support/hierarchical/HierarchicalTestEn=
gine.html">HierarchicalTestEngine</a></code> is a convenient abstract base =
implementation (used by
the <code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.ju=
piter.engine/org/junit/jupiter/engine/package-summary.html">junit-jupiter-e=
ngine</a></code>) that only requires implementors to provide the logic for
test discovery. It implements execution of <code>TestDescriptors</code> tha=
t implement the <code>Node</code>
interface, including support for parallel execution.
</td>
</tr>
</tbody></table>
</div>
<div id=3D"launcher-api-engines-custom-ids" class=3D"admonitionblock warnin=
g">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-warning" title=3D"Warning"></i>
</td>
<td class=3D"content">
<div class=3D"title">The <code>junit-</code> prefix is reserved for TestEng=
ines from the JUnit Team</div>
<div class=3D"paragraph">
<p>The JUnit Platform <code>Launcher</code> enforces that only <code>TestEn=
gine</code> implementations published
by the JUnit Team may use the <code>junit-</code> prefix for their <code>Te=
stEngine</code> IDs.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>If any third-party <code>TestEngine</code> claims to be <code>junit-jupi=
ter</code> or <code>junit-vintage</code>, an
exception will be thrown, immediately halting execution of the JUnit Platfo=
rm.</p>
</li>
<li>
<p>If any third-party <code>TestEngine</code> uses the <code>junit-</code> =
prefix for its ID, a warning message
will be logged. Later releases of the JUnit Platform will throw an exceptio=
n for such
violations.</p>
</li>
</ul>
</div>
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"launcher-api-post-discovery-filters-custom"><a class=3D"anchor" h=
ref=3D"https://junit.org/junit5/docs/current/user-guide/#launcher-api-post-=
discovery-filters-custom"></a>6.1.4. Registering a PostDiscoveryFilter</h4>
<div class=3D"paragraph">
<p>In addition to specifying post-discovery filters as part of a <code><a h=
ref=3D"https://junit.org/junit5/docs/current/api/org.junit.platform.launche=
r/org/junit/platform/launcher/LauncherDiscoveryRequest.html">LauncherDiscov=
eryRequest</a></code>
passed to the <code><a href=3D"https://junit.org/junit5/docs/current/api/or=
g.junit.platform.launcher/org/junit/platform/launcher/Launcher.html">Launch=
er</a></code> API, <code><a href=3D"https://junit.org/junit5/docs/current/a=
pi/org.junit.platform.launcher/org/junit/platform/launcher/PostDiscoveryFil=
ter.html">PostDiscoveryFilter</a></code> implementations will be discovered
at runtime via Java=E2=80=99s <code><a href=3D"https://docs.oracle.com/en/j=
ava/javase/11/docs/api/java.base/java/util/ServiceLoader.html">ServiceLoade=
r</a></code> mechanism and automatically applied by the
<code>Launcher</code> in addition to those that are part of the request.</p=
>
</div>
<div class=3D"paragraph">
<p>For example, an <code>example.CustomTagFilter</code> class implementing =
<code>PostDiscoveryFilter</code> and
declared within the <code>/META-INF/services/org.junit.platform.launcher.Po=
stDiscoveryFilter</code>
file is loaded and applied automatically.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"launcher-api-launcher-session-listeners-custom"><a class=3D"ancho=
r" href=3D"https://junit.org/junit5/docs/current/user-guide/#launcher-api-l=
auncher-session-listeners-custom"></a>6.1.5. Registering a LauncherSessionL=
istener</h4>
<div class=3D"paragraph">
<p>Registered implementations of <code><a href=3D"https://junit.org/junit5/=
docs/current/api/org.junit.platform.launcher/org/junit/platform/launcher/La=
uncherSessionListener.html">LauncherSessionListener</a></code> are notified=
 when a
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.platfo=
rm.launcher/org/junit/platform/launcher/LauncherSession.html">LauncherSessi=
on</a></code> is opened (before a <code><a href=3D"https://junit.org/junit5=
/docs/current/api/org.junit.platform.launcher/org/junit/platform/launcher/L=
auncher.html">Launcher</a></code> first discovers and executes tests)
and closed (when no more tests will be discovered or executed). They can be=
 registered
programmatically via the <code><a href=3D"https://junit.org/junit5/docs/cur=
rent/api/org.junit.platform.launcher/org/junit/platform/launcher/core/Launc=
herConfig.html">LauncherConfig</a></code> that is passed to the <code><a hr=
ef=3D"https://junit.org/junit5/docs/current/api/org.junit.platform.launcher=
/org/junit/platform/launcher/core/LauncherFactory.html">LauncherFactory</a>=
</code>, or
they can be discovered at runtime via Java=E2=80=99s <code><a href=3D"https=
://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ServiceLo=
ader.html">ServiceLoader</a></code> mechanism and automatically
registered with <code>LauncherSession</code> (unless automatic registration=
 is disabled.)</p>
</div>
<div class=3D"paragraph">
<p>A <code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.p=
latform.launcher/org/junit/platform/launcher/LauncherSessionListener.html">=
LauncherSessionListener</a></code> is well suited for implementing once-per=
-JVM setup/teardown
behavior since it=E2=80=99s called before the first and after the last test=
 in a launcher session,
respectively. The scope of a launcher session depends on the used IDE or bu=
ild tool but
usually corresponds to the lifecycle of the test JVM. A custom listener tha=
t starts an
HTTP server before executing the first test and stops it after the last tes=
t has been
executed, could look like this:</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">src/test/java/example/session/GlobalSetupTeardownListe=
ner.java</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
package</span> <span class=3D"nn">example.session</span><span class=3D"o">;=
</span>

<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">java</span><span class=3D"o">.</span><span class=3D"na">net</span>=
<span class=3D"o">.</span><span class=3D"na">InetAddress</span><span class=
=3D"o">.</span><span class=3D"na">getLoopbackAddress</span><span class=3D"o=
">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">java.io.IOException</sp=
an><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.io.UncheckedIOExce=
ption</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.net.InetSocketAddr=
ess</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.util.concurrent.Ex=
ecutorService</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.util.concurrent.Ex=
ecutors</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">com.sun.net.httpserver.=
HttpServer</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.laun=
cher.LauncherSession</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.laun=
cher.LauncherSessionListener</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.laun=
cher.TestExecutionListener</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.laun=
cher.TestPlan</span><span class=3D"o">;</span>

<span class=3D"kd">public</span> <span class=3D"kd">class</span> <span clas=
s=3D"nc">GlobalSetupTeardownListener</span> <span class=3D"kd">implements</=
span> <span class=3D"nc">LauncherSessionListener</span> <span class=3D"o">{=
</span>

    <span class=3D"kd">private</span> <span class=3D"nc">Fixture</span> <sp=
an class=3D"n">fixture</span><span class=3D"o">;</span>

    <span class=3D"nd">@Override</span>
    <span class=3D"kd">public</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">launcherSessionOpened</span><span class=3D"o">(</span><span cla=
ss=3D"nc">LauncherSession</span> <span class=3D"n">session</span><span clas=
s=3D"o">)</span> <span class=3D"o">{</span>
        <span class=3D"c1">// Avoid setup for test discovery by delaying it=
 until tests are about to be executed</span>
        <span class=3D"n">session</span><span class=3D"o">.</span><span cla=
ss=3D"na">getLauncher</span><span class=3D"o">().</span><span class=3D"na">=
registerTestExecutionListeners</span><span class=3D"o">(</span><span class=
=3D"k">new</span> <span class=3D"nc">TestExecutionListener</span><span clas=
s=3D"o">()</span> <span class=3D"o">{</span>
            <span class=3D"nd">@Override</span>
            <span class=3D"kd">public</span> <span class=3D"kt">void</span>=
 <span class=3D"nf">testPlanExecutionStarted</span><span class=3D"o">(</spa=
n><span class=3D"nc">TestPlan</span> <span class=3D"n">testPlan</span><span=
 class=3D"o">)</span> <span class=3D"o">{</span>
                <span class=3D"k">if</span> <span class=3D"o">(</span><span=
 class=3D"n">fixture</span> <span class=3D"o">=3D=3D</span> <span class=3D"=
kc">null</span><span class=3D"o">)</span> <span class=3D"o">{</span>
                    <span class=3D"n">fixture</span> <span class=3D"o">=3D<=
/span> <span class=3D"k">new</span> <span class=3D"nc">Fixture</span><span =
class=3D"o">();</span>
                    <span class=3D"n">fixture</span><span class=3D"o">.</sp=
an><span class=3D"na">setUp</span><span class=3D"o">();</span>
                <span class=3D"o">}</span>
            <span class=3D"o">}</span>
        <span class=3D"o">});</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Override</span>
    <span class=3D"kd">public</span> <span class=3D"kt">void</span> <span c=
lass=3D"nf">launcherSessionClosed</span><span class=3D"o">(</span><span cla=
ss=3D"nc">LauncherSession</span> <span class=3D"n">session</span><span clas=
s=3D"o">)</span> <span class=3D"o">{</span>
        <span class=3D"k">if</span> <span class=3D"o">(</span><span class=
=3D"n">fixture</span> <span class=3D"o">!=3D</span> <span class=3D"kc">null=
</span><span class=3D"o">)</span> <span class=3D"o">{</span>
            <span class=3D"n">fixture</span><span class=3D"o">.</span><span=
 class=3D"na">tearDown</span><span class=3D"o">();</span>
            <span class=3D"n">fixture</span> <span class=3D"o">=3D</span> <=
span class=3D"kc">null</span><span class=3D"o">;</span>
        <span class=3D"o">}</span>
    <span class=3D"o">}</span>

    <span class=3D"kd">static</span> <span class=3D"kd">class</span> <span =
class=3D"nc">Fixture</span> <span class=3D"o">{</span>

        <span class=3D"kd">private</span> <span class=3D"nc">HttpServer</sp=
an> <span class=3D"n">server</span><span class=3D"o">;</span>
        <span class=3D"kd">private</span> <span class=3D"nc">ExecutorServic=
e</span> <span class=3D"n">executorService</span><span class=3D"o">;</span>

        <span class=3D"kt">void</span> <span class=3D"nf">setUp</span><span=
 class=3D"o">()</span> <span class=3D"o">{</span>
            <span class=3D"k">try</span> <span class=3D"o">{</span>
                <span class=3D"n">server</span> <span class=3D"o">=3D</span=
> <span class=3D"nc">HttpServer</span><span class=3D"o">.</span><span class=
=3D"na">create</span><span class=3D"o">(</span><span class=3D"k">new</span>=
 <span class=3D"nc">InetSocketAddress</span><span class=3D"o">(</span><span=
 class=3D"n">getLoopbackAddress</span><span class=3D"o">(),</span> <span cl=
ass=3D"mi">0</span><span class=3D"o">),</span> <span class=3D"mi">0</span><=
span class=3D"o">);</span>
            <span class=3D"o">}</span>
            <span class=3D"k">catch</span> <span class=3D"o">(</span><span =
class=3D"nc">IOException</span> <span class=3D"n">e</span><span class=3D"o"=
>)</span> <span class=3D"o">{</span>
                <span class=3D"k">throw</span> <span class=3D"k">new</span>=
 <span class=3D"nf">UncheckedIOException</span><span class=3D"o">(</span><s=
pan class=3D"s">"Failed to start HTTP server"</span><span class=3D"o">,</sp=
an> <span class=3D"n">e</span><span class=3D"o">);</span>
            <span class=3D"o">}</span>
            <span class=3D"n">server</span><span class=3D"o">.</span><span =
class=3D"na">createContext</span><span class=3D"o">(</span><span class=3D"s=
">"/test"</span><span class=3D"o">,</span> <span class=3D"n">exchange</span=
> <span class=3D"o">-&gt;</span> <span class=3D"o">{</span>
                <span class=3D"n">exchange</span><span class=3D"o">.</span>=
<span class=3D"na">sendResponseHeaders</span><span class=3D"o">(</span><spa=
n class=3D"mi">204</span><span class=3D"o">,</span> <span class=3D"o">-</sp=
an><span class=3D"mi">1</span><span class=3D"o">);</span>
                <span class=3D"n">exchange</span><span class=3D"o">.</span>=
<span class=3D"na">close</span><span class=3D"o">();</span>
            <span class=3D"o">});</span>
            <span class=3D"n">executorService</span> <span class=3D"o">=3D<=
/span> <span class=3D"nc">Executors</span><span class=3D"o">.</span><span c=
lass=3D"na">newCachedThreadPool</span><span class=3D"o">();</span>
            <span class=3D"n">server</span><span class=3D"o">.</span><span =
class=3D"na">setExecutor</span><span class=3D"o">(</span><span class=3D"n">=
executorService</span><span class=3D"o">);</span>
            <span class=3D"n">server</span><span class=3D"o">.</span><span =
class=3D"na">start</span><span class=3D"o">();</span> <i class=3D"conum" da=
ta-value=3D"1"></i><b>(1)</b>
            <span class=3D"kt">int</span> <span class=3D"n">port</span> <sp=
an class=3D"o">=3D</span> <span class=3D"n">server</span><span class=3D"o">=
.</span><span class=3D"na">getAddress</span><span class=3D"o">().</span><sp=
an class=3D"na">getPort</span><span class=3D"o">();</span>
            <span class=3D"nc">System</span><span class=3D"o">.</span><span=
 class=3D"na">setProperty</span><span class=3D"o">(</span><span class=3D"s"=
>"http.server.host"</span><span class=3D"o">,</span> <span class=3D"n">getL=
oopbackAddress</span><span class=3D"o">().</span><span class=3D"na">getHost=
Address</span><span class=3D"o">());</span> <i class=3D"conum" data-value=
=3D"2"></i><b>(2)</b>
            <span class=3D"nc">System</span><span class=3D"o">.</span><span=
 class=3D"na">setProperty</span><span class=3D"o">(</span><span class=3D"s"=
>"http.server.port"</span><span class=3D"o">,</span> <span class=3D"nc">Str=
ing</span><span class=3D"o">.</span><span class=3D"na">valueOf</span><span =
class=3D"o">(</span><span class=3D"n">port</span><span class=3D"o">));</spa=
n> <i class=3D"conum" data-value=3D"3"></i><b>(3)</b>
        <span class=3D"o">}</span>

        <span class=3D"kt">void</span> <span class=3D"nf">tearDown</span><s=
pan class=3D"o">()</span> <span class=3D"o">{</span>
            <span class=3D"n">server</span><span class=3D"o">.</span><span =
class=3D"na">stop</span><span class=3D"o">(</span><span class=3D"mi">0</spa=
n><span class=3D"o">);</span> <i class=3D"conum" data-value=3D"4"></i><b>(4=
)</b>
            <span class=3D"n">executorService</span><span class=3D"o">.</sp=
an><span class=3D"na">shutdownNow</span><span class=3D"o">();</span>
        <span class=3D"o">}</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"colist arabic">
<table>
<tbody><tr>
<td><i class=3D"conum" data-value=3D"1"></i><b>1</b></td>
<td>Start the HTTP server</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"2"></i><b>2</b></td>
<td>Export its host address as a system property for consumption by tests</=
td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"3"></i><b>3</b></td>
<td>Export its port as a system property for consumption by tests</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"4"></i><b>4</b></td>
<td>Stop the HTTP server</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>This sample uses the HTTP server implementation from the jdk.httpserver =
module that comes
with the JDK but would work similarly with any other server or resource. In=
 order for the
listener to be picked up by JUnit Platform, you need to register it as a se=
rvice by adding
a resource file with the following name and contents to your test runtime c=
lasspath (e.g.
by adding the file to <code>src/test/resources</code>):</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">src/test/resources/META-INF/services/org.junit.platfor=
m.launcher.LauncherSessionListener</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code>example.session.GlobalSetupTeardownLis=
tener</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You can now use the resource from your test:</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">src/test/java/example/session/HttpTests.java</div>
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
package</span> <span class=3D"nn">example.session</span><span class=3D"o">;=
</span>

<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">Assertions</span><span class=3D"o">.</span><span class=3D"na">ass=
ertEquals</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">java.net.HttpURLConnect=
ion</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.net.URL</span><spa=
n class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>

<span class=3D"kd">class</span> <span class=3D"nc">HttpTests</span> <span c=
lass=3D"o">{</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">respondsWith204</span=
><span class=3D"o">()</span> <span class=3D"kd">throws</span> <span class=
=3D"nc">Exception</span> <span class=3D"o">{</span>
        <span class=3D"nc">String</span> <span class=3D"n">host</span> <spa=
n class=3D"o">=3D</span> <span class=3D"nc">System</span><span class=3D"o">=
.</span><span class=3D"na">getProperty</span><span class=3D"o">(</span><spa=
n class=3D"s">"http.server.host"</span><span class=3D"o">);</span> <i class=
=3D"conum" data-value=3D"1"></i><b>(1)</b>
        <span class=3D"nc">String</span> <span class=3D"n">port</span> <spa=
n class=3D"o">=3D</span> <span class=3D"nc">System</span><span class=3D"o">=
.</span><span class=3D"na">getProperty</span><span class=3D"o">(</span><spa=
n class=3D"s">"http.server.port"</span><span class=3D"o">);</span> <i class=
=3D"conum" data-value=3D"2"></i><b>(2)</b>
        <span class=3D"no">URL</span> <span class=3D"n">url</span> <span cl=
ass=3D"o">=3D</span> <span class=3D"k">new</span> <span class=3D"no">URL</s=
pan><span class=3D"o">(</span><span class=3D"s">"http://"</span> <span clas=
s=3D"o">+</span> <span class=3D"n">host</span> <span class=3D"o">+</span> <=
span class=3D"s">":"</span> <span class=3D"o">+</span> <span class=3D"n">po=
rt</span> <span class=3D"o">+</span> <span class=3D"s">"/test"</span><span =
class=3D"o">);</span>

        <span class=3D"nc">HttpURLConnection</span> <span class=3D"n">conne=
ction</span> <span class=3D"o">=3D</span> <span class=3D"o">(</span><span c=
lass=3D"nc">HttpURLConnection</span><span class=3D"o">)</span> <span class=
=3D"n">url</span><span class=3D"o">.</span><span class=3D"na">openConnectio=
n</span><span class=3D"o">();</span>
        <span class=3D"n">connection</span><span class=3D"o">.</span><span =
class=3D"na">setRequestMethod</span><span class=3D"o">(</span><span class=
=3D"s">"GET"</span><span class=3D"o">);</span>
        <span class=3D"kt">int</span> <span class=3D"n">responseCode</span>=
 <span class=3D"o">=3D</span> <span class=3D"n">connection</span><span clas=
s=3D"o">.</span><span class=3D"na">getResponseCode</span><span class=3D"o">=
();</span> <i class=3D"conum" data-value=3D"3"></i><b>(3)</b>

        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"mi">204</span><span class=3D"o">,</span> <span class=3D"n">respo=
nseCode</span><span class=3D"o">);</span> <i class=3D"conum" data-value=3D"=
4"></i><b>(4)</b>
    <span class=3D"o">}</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"colist arabic">
<table>
<tbody><tr>
<td><i class=3D"conum" data-value=3D"1"></i><b>1</b></td>
<td>Read the host address of the server from the system property set by the=
 listener</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"2"></i><b>2</b></td>
<td>Read the port of the server from the system property set by the listene=
r</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"3"></i><b>3</b></td>
<td>Send a request to the server</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"4"></i><b>4</b></td>
<td>Check the status code of the response</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"launcher-api-launcher-discovery-listeners-custom"><a class=3D"anc=
hor" href=3D"https://junit.org/junit5/docs/current/user-guide/#launcher-api=
-launcher-discovery-listeners-custom"></a>6.1.6. Registering a LauncherDisc=
overyListener</h4>
<div class=3D"paragraph">
<p>In addition to specifying discovery listeners as part of a <code><a href=
=3D"https://junit.org/junit5/docs/current/api/org.junit.platform.launcher/o=
rg/junit/platform/launcher/LauncherDiscoveryRequest.html">LauncherDiscovery=
Request</a></code> or
registering them programmatically via the <code><a href=3D"https://junit.or=
g/junit5/docs/current/api/org.junit.platform.launcher/org/junit/platform/la=
uncher/Launcher.html">Launcher</a></code> API, custom
<code>LauncherDiscoveryListener</code> implementations can be discovered at=
 runtime via Java=E2=80=99s
<code><a href=3D"https://docs.oracle.com/en/java/javase/11/docs/api/java.ba=
se/java/util/ServiceLoader.html">ServiceLoader</a></code> mechanism and aut=
omatically registered with the <code>Launcher</code> created via
the <code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.pl=
atform.launcher/org/junit/platform/launcher/core/LauncherFactory.html">Laun=
cherFactory</a></code>.</p>
</div>
<div class=3D"paragraph">
<p>For example, an <code>example.CustomLauncherDiscoveryListener</code> cla=
ss implementing
<code>LauncherDiscoveryListener</code> and declared within the
<code>/META-INF/services/org.junit.platform.launcher.LauncherDiscoveryListe=
ner</code> file is loaded
and registered automatically.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"launcher-api-listeners-custom"><a class=3D"anchor" href=3D"https:=
//junit.org/junit5/docs/current/user-guide/#launcher-api-listeners-custom">=
</a>6.1.7. Registering a TestExecutionListener</h4>
<div class=3D"paragraph">
<p>In addition to the public <code><a href=3D"https://junit.org/junit5/docs=
/current/api/org.junit.platform.launcher/org/junit/platform/launcher/Launch=
er.html">Launcher</a></code> API method for registering test execution list=
eners
programmatically, custom <code><a href=3D"https://junit.org/junit5/docs/cur=
rent/api/org.junit.platform.launcher/org/junit/platform/launcher/TestExecut=
ionListener.html">TestExecutionListener</a></code> implementations will be =
discovered at
runtime via Java=E2=80=99s <code><a href=3D"https://docs.oracle.com/en/java=
/javase/11/docs/api/java.base/java/util/ServiceLoader.html">ServiceLoader</=
a></code> mechanism and automatically registered with the
<code>Launcher</code> created via the <code><a href=3D"https://junit.org/ju=
nit5/docs/current/api/org.junit.platform.launcher/org/junit/platform/launch=
er/core/LauncherFactory.html">LauncherFactory</a></code>.</p>
</div>
<div class=3D"paragraph">
<p>For example, an <code>example.CustomTestExecutionListener</code> class i=
mplementing
<code>TestExecutionListener</code> and declared within the
<code>/META-INF/services/org.junit.platform.launcher.TestExecutionListener<=
/code> file is loaded and
registered automatically.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"launcher-api-listeners-config"><a class=3D"anchor" href=3D"https:=
//junit.org/junit5/docs/current/user-guide/#launcher-api-listeners-config">=
</a>6.1.8. Configuring a TestExecutionListener</h4>
<div class=3D"paragraph">
<p>When a <code><a href=3D"https://junit.org/junit5/docs/current/api/org.ju=
nit.platform.launcher/org/junit/platform/launcher/TestExecutionListener.htm=
l">TestExecutionListener</a></code> is registered programmatically via the =
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.platfo=
rm.launcher/org/junit/platform/launcher/Launcher.html">Launcher</a></code> =
API,
the listener may provide programmatic ways for it to be configured=E2=80=89=
=E2=80=94=E2=80=89for example, via its
constructor, setter methods, etc. However, when a <code>TestExecutionListen=
er</code> is registered
automatically via Java=E2=80=99s <code>ServiceLoader</code> mechanism (see
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#launcher-api-l=
isteners-custom">Registering a TestExecutionListener</a>), there is no way =
for the user to directly configure the
listener. In such cases, the author of a <code>TestExecutionListener</code>=
 may choose to make the
listener configurable via <a href=3D"https://junit.org/junit5/docs/current/=
user-guide/#running-tests-config-params">configuration parameters</a>. The
listener can then access the configuration parameters via the <code>TestPla=
n</code> supplied to the
<code>testPlanExecutionStarted(TestPlan)</code> and <code>testPlanExecution=
Finished(TestPlan)</code> callback
methods. See the <code><a href=3D"https://junit.org/junit5/docs/current/api=
/org.junit.platform.launcher/org/junit/platform/launcher/listeners/UniqueId=
TrackingListener.html">UniqueIdTrackingListener</a></code> for an example.<=
/p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"launcher-api-listeners-custom-deactivation"><a class=3D"anchor" h=
ref=3D"https://junit.org/junit5/docs/current/user-guide/#launcher-api-liste=
ners-custom-deactivation"></a>6.1.9. Deactivating a TestExecutionListener</=
h4>
<div class=3D"paragraph">
<p>Sometimes it can be useful to run a test suite <em>without</em> certain =
execution listeners being
active. For example, you might have custom a <code><a href=3D"https://junit=
.org/junit5/docs/current/api/org.junit.platform.launcher/org/junit/platform=
/launcher/TestExecutionListener.html">TestExecutionListener</a></code> that=
 sends the test
results to an external system for reporting purposes, and while debugging y=
ou might not
want these <em>debug</em> results to be reported. To do this, provide a pat=
tern for the
<code>junit.platform.execution.listeners.deactivate</code> <em>configuratio=
n parameter</em> to specify which
execution listeners should be deactivated (i.e. not registered) for the cur=
rent test run.</p>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
<div class=3D"paragraph">
<p>Only listeners registered via the <code><a href=3D"https://docs.oracle.c=
om/en/java/javase/11/docs/api/java.base/java/util/ServiceLoader.html">Servi=
ceLoader</a></code> mechanism within the
<code>/META-INF/services/org.junit.platform.launcher.TestExecutionListener<=
/code> file can be
deactivated. In other words, any <code>TestExecutionListener</code> registe=
red explicitly via the
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.platfo=
rm.launcher/org/junit/platform/launcher/LauncherDiscoveryRequest.html">Laun=
cherDiscoveryRequest</a></code> cannot be deactivated via the
<code>junit.platform.execution.listeners.deactivate</code> <em>configuratio=
n parameter</em>.</p>
</div>
<div class=3D"paragraph">
<p>In addition, since execution listeners are registered before the test ru=
n starts, the
<code>junit.platform.execution.listeners.deactivate</code> <em>configuratio=
n parameter</em> can only be
supplied as a JVM system property or via the JUnit Platform configuration f=
ile (see
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-=
config-params">Configuration Parameters</a> for details). This <em>configur=
ation parameter</em> cannot be
supplied in the <code>LauncherDiscoveryRequest</code> that is passed to the=
 <code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.platf=
orm.launcher/org/junit/platform/launcher/Launcher.html">Launcher</a></code>=
.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class=3D"sect4">
<h5 id=3D"launcher-api-listeners-custom-deactivation-pattern"><a class=3D"a=
nchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#launcher-a=
pi-listeners-custom-deactivation-pattern"></a>Pattern Matching Syntax</h5>
<div class=3D"paragraph">
<p>Refer to <a href=3D"https://junit.org/junit5/docs/current/user-guide/#ru=
nning-tests-config-params-deactivation-pattern">Pattern Matching Syntax</a>=
 for details.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"launcher-api-launcher-config"><a class=3D"anchor" href=3D"https:/=
/junit.org/junit5/docs/current/user-guide/#launcher-api-launcher-config"></=
a>6.1.10. Configuring the Launcher</h4>
<div class=3D"paragraph">
<p>If you require fine-grained control over automatic detection and registr=
ation of test
engines and listeners, you may create an instance of <code><a href=3D"https=
://junit.org/junit5/docs/current/api/org.junit.platform.launcher/org/junit/=
platform/launcher/core/LauncherConfig.html">LauncherConfig</a></code> and s=
upply that to
the <code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.pl=
atform.launcher/org/junit/platform/launcher/core/LauncherFactory.html">Laun=
cherFactory</a></code>. Typically, an instance of <code>LauncherConfig</cod=
e> is created via the
built-in fluent <em>builder</em> API, as demonstrated in the following exam=
ple.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"nc">=
LauncherConfig</span> <span class=3D"n">launcherConfig</span> <span class=
=3D"o">=3D</span> <span class=3D"nc">LauncherConfig</span><span class=3D"o"=
>.</span><span class=3D"na">builder</span><span class=3D"o">()</span>
    <span class=3D"o">.</span><span class=3D"na">enableTestEngineAutoRegist=
ration</span><span class=3D"o">(</span><span class=3D"kc">false</span><span=
 class=3D"o">)</span>
    <span class=3D"o">.</span><span class=3D"na">enableLauncherSessionListe=
nerAutoRegistration</span><span class=3D"o">(</span><span class=3D"kc">fals=
e</span><span class=3D"o">)</span>
    <span class=3D"o">.</span><span class=3D"na">enableLauncherDiscoveryLis=
tenerAutoRegistration</span><span class=3D"o">(</span><span class=3D"kc">fa=
lse</span><span class=3D"o">)</span>
    <span class=3D"o">.</span><span class=3D"na">enablePostDiscoveryFilterA=
utoRegistration</span><span class=3D"o">(</span><span class=3D"kc">false</s=
pan><span class=3D"o">)</span>
    <span class=3D"o">.</span><span class=3D"na">enableTestExecutionListene=
rAutoRegistration</span><span class=3D"o">(</span><span class=3D"kc">false<=
/span><span class=3D"o">)</span>
    <span class=3D"o">.</span><span class=3D"na">addTestEngines</span><span=
 class=3D"o">(</span><span class=3D"k">new</span> <span class=3D"nc">Custom=
TestEngine</span><span class=3D"o">())</span>
    <span class=3D"o">.</span><span class=3D"na">addLauncherSessionListener=
s</span><span class=3D"o">(</span><span class=3D"k">new</span> <span class=
=3D"nc">CustomLauncherSessionListener</span><span class=3D"o">())</span>
    <span class=3D"o">.</span><span class=3D"na">addLauncherDiscoveryListen=
ers</span><span class=3D"o">(</span><span class=3D"k">new</span> <span clas=
s=3D"nc">CustomLauncherDiscoveryListener</span><span class=3D"o">())</span>
    <span class=3D"o">.</span><span class=3D"na">addPostDiscoveryFilters</s=
pan><span class=3D"o">(</span><span class=3D"k">new</span> <span class=3D"n=
c">CustomPostDiscoveryFilter</span><span class=3D"o">())</span>
    <span class=3D"o">.</span><span class=3D"na">addTestExecutionListeners<=
/span><span class=3D"o">(</span><span class=3D"k">new</span> <span class=3D=
"nc">LegacyXmlReportGeneratingListener</span><span class=3D"o">(</span><spa=
n class=3D"n">reportsDir</span><span class=3D"o">,</span> <span class=3D"n"=
>out</span><span class=3D"o">))</span>
    <span class=3D"o">.</span><span class=3D"na">addTestExecutionListeners<=
/span><span class=3D"o">(</span><span class=3D"k">new</span> <span class=3D=
"nc">CustomTestExecutionListener</span><span class=3D"o">())</span>
    <span class=3D"o">.</span><span class=3D"na">build</span><span class=3D=
"o">();</span>

<span class=3D"nc">LauncherDiscoveryRequest</span> <span class=3D"n">reques=
t</span> <span class=3D"o">=3D</span> <span class=3D"nc">LauncherDiscoveryR=
equestBuilder</span><span class=3D"o">.</span><span class=3D"na">request</s=
pan><span class=3D"o">()</span>
    <span class=3D"o">.</span><span class=3D"na">selectors</span><span clas=
s=3D"o">(</span><span class=3D"n">selectPackage</span><span class=3D"o">(</=
span><span class=3D"s">"com.example.mytests"</span><span class=3D"o">))</sp=
an>
    <span class=3D"o">.</span><span class=3D"na">build</span><span class=3D=
"o">();</span>

<span class=3D"k">try</span> <span class=3D"o">(</span><span class=3D"nc">L=
auncherSession</span> <span class=3D"n">session</span> <span class=3D"o">=
=3D</span> <span class=3D"nc">LauncherFactory</span><span class=3D"o">.</sp=
an><span class=3D"na">openSession</span><span class=3D"o">(</span><span cla=
ss=3D"n">launcherConfig</span><span class=3D"o">))</span> <span class=3D"o"=
>{</span>
    <span class=3D"n">session</span><span class=3D"o">.</span><span class=
=3D"na">getLauncher</span><span class=3D"o">().</span><span class=3D"na">ex=
ecute</span><span class=3D"o">(</span><span class=3D"n">request</span><span=
 class=3D"o">);</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"junit-platform-reporting"><a class=3D"anchor" href=3D"https://jun=
it.org/junit5/docs/current/user-guide/#junit-platform-reporting"></a>6.2. J=
Unit Platform Reporting</h3>
<div class=3D"paragraph">
<p>The <code>junit-platform-reporting</code> artifact contains <code><a hre=
f=3D"https://junit.org/junit5/docs/current/api/org.junit.platform.launcher/=
org/junit/platform/launcher/TestExecutionListener.html">TestExecutionListen=
er</a></code>
implementations that generate test reports. These listeners are typically u=
sed by IDEs
and build tools. The package <code>org.junit.platform.reporting.legacy.xml<=
/code> currently contains
the following implementation.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.pla=
tform.reporting/org/junit/platform/reporting/legacy/xml/LegacyXmlReportGene=
ratingListener.html">LegacyXmlReportGeneratingListener</a></code> generates=
 a separate XML report for each root in
the <code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.pl=
atform.launcher/org/junit/platform/launcher/TestPlan.html">TestPlan</a></co=
de>. Note that the generated XML format is compatible with the de facto
standard for JUnit 4 based test reports that was made popular by the Ant bu=
ild system.
The <code>LegacyXmlReportGeneratingListener</code> is used by the
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-=
console-launcher">Console Launcher</a> as well.</p>
</li>
</ul>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
The <code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.pl=
atform.launcher/org/junit/platform/launcher/package-summary.html">junit-pla=
tform-launcher</a></code> module also contains <code>TestExecutionListener<=
/code>
implementations that can be used for reporting purposes. See <a href=3D"htt=
ps://junit.org/junit5/docs/current/user-guide/#running-tests-listeners">Usi=
ng Listeners</a>
for details.
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"junit-platform-suite-engine"><a class=3D"anchor" href=3D"https://=
junit.org/junit5/docs/current/user-guide/#junit-platform-suite-engine"></a>=
6.3. JUnit Platform Suite Engine</h3>
<div class=3D"paragraph">
<p>The JUnit Platform supports the declarative definition and execution of =
suites of tests
from <em>any</em> test engine using the JUnit Platform.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"junit-platform-suite-engine-setup"><a class=3D"anchor" href=3D"ht=
tps://junit.org/junit5/docs/current/user-guide/#junit-platform-suite-engine=
-setup"></a>6.3.1. Setup</h4>
<div class=3D"paragraph">
<p>In addition to the <code>junit-platform-suite-api</code> and <code>junit=
-platform-suite-engine</code> artifacts,
you need <em>at least one</em> other test engine and its dependencies on th=
e classpath. See
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#dependency-met=
adata">Dependency Metadata</a> for details regarding group IDs, artifact ID=
s, and versions.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"junit-platform-suite-engine-setup-required-dependencies"><a class=
=3D"anchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#junit=
-platform-suite-engine-setup-required-dependencies"></a>Required Dependenci=
es</h5>
<div class=3D"ulist">
<ul>
<li>
<p><code>junit-platform-suite-api</code> in <em>test</em> scope: artifact c=
ontaining annotations needed to
configure a test suite</p>
</li>
<li>
<p><code>junit-platform-suite-engine</code> in <em>test runtime</em> scope:=
 implementation of the
<code>TestEngine</code> API for declarative test suites</p>
</li>
</ul>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
Both of the required dependencies are aggregated in the <code>junit-platfor=
m-suite</code>
artifact which can be declard in <em>test</em> scope instead of declaring e=
xplicit dependencies
on <code>junit-platform-suite-api</code> and <code>junit-platform-suite-eng=
ine</code>.
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"junit-platform-suite-engine-setup-transitive-dependencies"><a cla=
ss=3D"anchor" href=3D"https://junit.org/junit5/docs/current/user-guide/#jun=
it-platform-suite-engine-setup-transitive-dependencies"></a>Transitive Depe=
ndencies</h5>
<div class=3D"ulist">
<ul>
<li>
<p><code>junit-platform-suite-commons</code> in <em>test</em> scope</p>
</li>
<li>
<p><code>junit-platform-launcher</code> in <em>test</em> scope</p>
</li>
<li>
<p><code>junit-platform-engine</code> in <em>test</em> scope</p>
</li>
<li>
<p><code>junit-platform-commons</code> in <em>test</em> scope</p>
</li>
<li>
<p><code>opentest4j</code> in <em>test</em> scope</p>
</li>
</ul>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"junit-platform-suite-engine-example"><a class=3D"anchor" href=3D"=
https://junit.org/junit5/docs/current/user-guide/#junit-platform-suite-engi=
ne-example"></a>6.3.2. @Suite Example</h4>
<div class=3D"paragraph">
<p>By annotating a class with <code>@Suite</code> it is marked as a test su=
ite on the JUnit Platform.
As seen in the following example, selector and filter annotations can then =
be used to
control the contents of the suite.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">org.junit.platform.suite.api.IncludeClassN=
amePatterns</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.suit=
e.api.SelectPackages</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.suit=
e.api.Suite</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.suit=
e.api.SuiteDisplayName</span><span class=3D"o">;</span>

<span class=3D"nd">@Suite</span>
<span class=3D"nd">@SuiteDisplayName</span><span class=3D"o">(</span><span =
class=3D"s">"JUnit Platform Suite Demo"</span><span class=3D"o">)</span>
<span class=3D"nd">@SelectPackages</span><span class=3D"o">(</span><span cl=
ass=3D"s">"example"</span><span class=3D"o">)</span>
<span class=3D"nd">@IncludeClassNamePatterns</span><span class=3D"o">(</spa=
n><span class=3D"s">".*Tests"</span><span class=3D"o">)</span>
<span class=3D"kd">class</span> <span class=3D"nc">SuiteDemo</span> <span c=
lass=3D"o">{</span>
<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
<div class=3D"title">Additional Configuration Options</div>
There are numerous configuration options for discovering and filtering test=
s in a
test suite. Please consult the Javadoc of the <code><a href=3D"https://juni=
t.org/junit5/docs/current/api/org.junit.platform.suite.api/org/junit/platfo=
rm/suite/api/package-summary.html">org.junit.platform.suite.api</a></code> =
package for a full
list of supported annotations and further details.
</td>
</tr>
</tbody></table>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"testkit"><a class=3D"anchor" href=3D"https://junit.org/junit5/doc=
s/current/user-guide/#testkit"></a>6.4. JUnit Platform Test Kit</h3>
<div class=3D"paragraph">
<p>The <code>junit-platform-testkit</code> artifact provides support for ex=
ecuting a test plan on the
JUnit Platform and then verifying the expected results. As of JUnit Platfor=
m 1.4, this
support is limited to the execution of a single <code>TestEngine</code> (se=
e <a href=3D"https://junit.org/junit5/docs/current/user-guide/#testkit-engi=
ne">Engine Test Kit</a>).</p>
</div>
<div class=3D"sect3">
<h4 id=3D"testkit-engine"><a class=3D"anchor" href=3D"https://junit.org/jun=
it5/docs/current/user-guide/#testkit-engine"></a>6.4.1. Engine Test Kit</h4=
>
<div class=3D"paragraph">
<p>The <code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit=
.platform.testkit/org/junit/platform/testkit/engine/package-summary.html">o=
rg.junit.platform.testkit.engine</a></code> package provides support for ex=
ecuting a <code><a href=3D"https://junit.org/junit5/docs/current/api/org.ju=
nit.platform.launcher/org/junit/platform/launcher/TestPlan.html">TestPlan</=
a></code> for a
given <code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.=
platform.engine/org/junit/platform/engine/TestEngine.html">TestEngine</a></=
code> running on the JUnit Platform and then accessing the results via a
fluent API to verify the expected results. The key entry point into this AP=
I is the
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.platfo=
rm.testkit/org/junit/platform/testkit/engine/EngineTestKit.html">EngineTest=
Kit</a></code> which provides static factory methods named <code>engine()</=
code> and <code>execute()</code>.
It is recommended that you select one of the <code>engine()</code> variants=
 to benefit from the
fluent API for building a <code>LauncherDiscoveryRequest</code>.</p>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
If you prefer to use the <code>LauncherDiscoveryRequestBuilder</code> from =
the <code>Launcher</code> API
to build your <code>LauncherDiscoveryRequest</code>, you must use one of th=
e <code>execute()</code> variants in
<code>EngineTestKit</code>.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>The following test class written using JUnit Jupiter will be used in sub=
sequent examples.</p>
</div>
<div id=3D"testkit-engine-ExampleTestCase" class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">static</span> <span class=3D"n">org</span>=
<span class=3D"o">.</span><span class=3D"na">junit</span><span class=3D"o">=
.</span><span class=3D"na">jupiter</span><span class=3D"o">.</span><span cl=
ass=3D"na">api</span><span class=3D"o">.</span><span class=3D"na">Assertion=
s</span><span class=3D"o">.</span><span class=3D"na">assertEquals</span><sp=
an class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">jupiter</span><span class=3D"=
o">.</span><span class=3D"na">api</span><span class=3D"o">.</span><span cla=
ss=3D"na">Assumptions</span><span class=3D"o">.</span><span class=3D"na">as=
sumeTrue</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">example.util.Calculator=
</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.D=
isabled</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.M=
ethodOrderer.OrderAnnotation</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.O=
rder</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
estMethodOrder</span><span class=3D"o">;</span>

<span class=3D"nd">@TestMethodOrder</span><span class=3D"o">(</span><span c=
lass=3D"nc">OrderAnnotation</span><span class=3D"o">.</span><span class=3D"=
na">class</span><span class=3D"o">)</span>
<span class=3D"kd">public</span> <span class=3D"kd">class</span> <span clas=
s=3D"nc">ExampleTestCase</span> <span class=3D"o">{</span>

    <span class=3D"kd">private</span> <span class=3D"kd">final</span> <span=
 class=3D"nc">Calculator</span> <span class=3D"n">calculator</span> <span c=
lass=3D"o">=3D</span> <span class=3D"k">new</span> <span class=3D"nc">Calcu=
lator</span><span class=3D"o">();</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"nd">@Disabled</span><span class=3D"o">(</span><span clas=
s=3D"s">"for demonstration purposes"</span><span class=3D"o">)</span>
    <span class=3D"nd">@Order</span><span class=3D"o">(</span><span class=
=3D"mi">1</span><span class=3D"o">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">skippedTest</span><sp=
an class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"c1">// skipped ...</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"nd">@Order</span><span class=3D"o">(</span><span class=
=3D"mi">2</span><span class=3D"o">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">succeedingTest</span>=
<span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">assertEquals</span><span class=3D"o">(</span><spa=
n class=3D"mi">42</span><span class=3D"o">,</span> <span class=3D"n">calcul=
ator</span><span class=3D"o">.</span><span class=3D"na">multiply</span><spa=
n class=3D"o">(</span><span class=3D"mi">6</span><span class=3D"o">,</span>=
 <span class=3D"mi">7</span><span class=3D"o">));</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"nd">@Order</span><span class=3D"o">(</span><span class=
=3D"mi">3</span><span class=3D"o">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">abortedTest</span><sp=
an class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"n">assumeTrue</span><span class=3D"o">(</span><span =
class=3D"s">"abc"</span><span class=3D"o">.</span><span class=3D"na">contai=
ns</span><span class=3D"o">(</span><span class=3D"s">"Z"</span><span class=
=3D"o">),</span> <span class=3D"s">"abc does not contain Z"</span><span cla=
ss=3D"o">);</span>
        <span class=3D"c1">// aborted ...</span>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"nd">@Order</span><span class=3D"o">(</span><span class=
=3D"mi">4</span><span class=3D"o">)</span>
    <span class=3D"kt">void</span> <span class=3D"nf">failingTest</span><sp=
an class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"c1">// The following throws an ArithmeticException: =
"/ by zero"</span>
        <span class=3D"n">calculator</span><span class=3D"o">.</span><span =
class=3D"na">divide</span><span class=3D"o">(</span><span class=3D"mi">1</s=
pan><span class=3D"o">,</span> <span class=3D"mi">0</span><span class=3D"o"=
>);</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>For the sake of brevity, the following sections demonstrate how to test =
JUnit=E2=80=99s own
<code>JupiterTestEngine</code> whose unique engine ID is <code>"junit-jupit=
er"</code>. If you want to test your
own <code>TestEngine</code> implementation, you need to use its unique engi=
ne ID. Alternatively, you
may test your own <code>TestEngine</code> by supplying an instance of it to=
 the
<code>EngineTestKit.engine(TestEngine)</code> static factory method.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"testkit-engine-statistics"><a class=3D"anchor" href=3D"https://ju=
nit.org/junit5/docs/current/user-guide/#testkit-engine-statistics"></a>6.4.=
2. Asserting Statistics</h4>
<div class=3D"paragraph">
<p>One of the most common features of the Test Kit is the ability to assert=
 statistics
against events fired during the execution of a <code>TestPlan</code>. The f=
ollowing tests demonstrate
how to assert statistics for <em>containers</em> and <em>tests</em> in the =
JUnit Jupiter <code>TestEngine</code>.
For details on what statistics are available, consult the Javadoc for <code=
><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.platform.te=
stkit/org/junit/platform/testkit/engine/EventStatistics.html">EventStatisti=
cs</a></code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">static</span> <span class=3D"n">org</span>=
<span class=3D"o">.</span><span class=3D"na">junit</span><span class=3D"o">=
.</span><span class=3D"na">platform</span><span class=3D"o">.</span><span c=
lass=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">disco=
very</span><span class=3D"o">.</span><span class=3D"na">DiscoverySelectors<=
/span><span class=3D"o">.</span><span class=3D"na">selectClass</span><span =
class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">example.ExampleTestCase=
</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.test=
kit.engine.EngineTestKit</span><span class=3D"o">;</span>

<span class=3D"kd">class</span> <span class=3D"nc">EngineTestKitStatisticsD=
emo</span> <span class=3D"o">{</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">verifyJupiterContaine=
rStats</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"nc">EngineTestKit</span>
            <span class=3D"o">.</span><span class=3D"na">engine</span><span=
 class=3D"o">(</span><span class=3D"s">"junit-jupiter"</span><span class=3D=
"o">)</span> <i class=3D"conum" data-value=3D"1"></i><b>(1)</b>
            <span class=3D"o">.</span><span class=3D"na">selectors</span><s=
pan class=3D"o">(</span><span class=3D"n">selectClass</span><span class=3D"=
o">(</span><span class=3D"nc">ExampleTestCase</span><span class=3D"o">.</sp=
an><span class=3D"na">class</span><span class=3D"o">))</span> <i class=3D"c=
onum" data-value=3D"2"></i><b>(2)</b>
            <span class=3D"o">.</span><span class=3D"na">execute</span><spa=
n class=3D"o">()</span> <i class=3D"conum" data-value=3D"3"></i><b>(3)</b>
            <span class=3D"o">.</span><span class=3D"na">containerEvents</s=
pan><span class=3D"o">()</span> <i class=3D"conum" data-value=3D"4"></i><b>=
(4)</b>
            <span class=3D"o">.</span><span class=3D"na">assertStatistics</=
span><span class=3D"o">(</span><span class=3D"n">stats</span> <span class=
=3D"o">-&gt;</span> <span class=3D"n">stats</span><span class=3D"o">.</span=
><span class=3D"na">started</span><span class=3D"o">(</span><span class=3D"=
mi">2</span><span class=3D"o">).</span><span class=3D"na">succeeded</span><=
span class=3D"o">(</span><span class=3D"mi">2</span><span class=3D"o">));</=
span> <i class=3D"conum" data-value=3D"5"></i><b>(5)</b>
    <span class=3D"o">}</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">verifyJupiterTestStat=
s</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"nc">EngineTestKit</span>
            <span class=3D"o">.</span><span class=3D"na">engine</span><span=
 class=3D"o">(</span><span class=3D"s">"junit-jupiter"</span><span class=3D=
"o">)</span> <i class=3D"conum" data-value=3D"1"></i><b>(1)</b>
            <span class=3D"o">.</span><span class=3D"na">selectors</span><s=
pan class=3D"o">(</span><span class=3D"n">selectClass</span><span class=3D"=
o">(</span><span class=3D"nc">ExampleTestCase</span><span class=3D"o">.</sp=
an><span class=3D"na">class</span><span class=3D"o">))</span> <i class=3D"c=
onum" data-value=3D"2"></i><b>(2)</b>
            <span class=3D"o">.</span><span class=3D"na">execute</span><spa=
n class=3D"o">()</span> <i class=3D"conum" data-value=3D"3"></i><b>(3)</b>
            <span class=3D"o">.</span><span class=3D"na">testEvents</span><=
span class=3D"o">()</span> <i class=3D"conum" data-value=3D"6"></i><b>(6)</=
b>
            <span class=3D"o">.</span><span class=3D"na">assertStatistics</=
span><span class=3D"o">(</span><span class=3D"n">stats</span> <span class=
=3D"o">-&gt;</span>
                <span class=3D"n">stats</span><span class=3D"o">.</span><sp=
an class=3D"na">skipped</span><span class=3D"o">(</span><span class=3D"mi">=
1</span><span class=3D"o">).</span><span class=3D"na">started</span><span c=
lass=3D"o">(</span><span class=3D"mi">3</span><span class=3D"o">).</span><s=
pan class=3D"na">succeeded</span><span class=3D"o">(</span><span class=3D"m=
i">1</span><span class=3D"o">).</span><span class=3D"na">aborted</span><spa=
n class=3D"o">(</span><span class=3D"mi">1</span><span class=3D"o">).</span=
><span class=3D"na">failed</span><span class=3D"o">(</span><span class=3D"m=
i">1</span><span class=3D"o">));</span> <i class=3D"conum" data-value=3D"7"=
></i><b>(7)</b>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"colist arabic">
<table>
<tbody><tr>
<td><i class=3D"conum" data-value=3D"1"></i><b>1</b></td>
<td>Select the JUnit Jupiter <code>TestEngine</code>.</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"2"></i><b>2</b></td>
<td>Select the <a href=3D"https://junit.org/junit5/docs/current/user-guide/=
#testkit-engine-ExampleTestCase"><code>ExampleTestCase</code></a> test clas=
s.</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"3"></i><b>3</b></td>
<td>Execute the <code>TestPlan</code>.</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"4"></i><b>4</b></td>
<td>Filter by <em>container</em> events.</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"5"></i><b>5</b></td>
<td>Assert statistics for <em>container</em> events.</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"6"></i><b>6</b></td>
<td>Filter by <em>test</em> events.</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"7"></i><b>7</b></td>
<td>Assert statistics for <em>test</em> events.</td>
</tr>
</tbody></table>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-note" title=3D"Note"></i>
</td>
<td class=3D"content">
In the <code>verifyJupiterContainerStats()</code> test method, the counts f=
or the <code>started</code> and
<code>succeeded</code> statistics are <code>2</code> since the <code>Jupite=
rTestEngine</code> and the
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#testkit-engine=
-ExampleTestCase"><code>ExampleTestCase</code></a> class are both considere=
d containers.
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"testkit-engine-events"><a class=3D"anchor" href=3D"https://junit.=
org/junit5/docs/current/user-guide/#testkit-engine-events"></a>6.4.3. Asser=
ting Events</h4>
<div class=3D"paragraph">
<p>If you find that <a href=3D"https://junit.org/junit5/docs/current/user-g=
uide/#testkit-engine-statistics">asserting statistics</a> alone is insuffic=
ient
for verifying the expected behavior of test execution, you can work directl=
y with the
recorded <code><a href=3D"https://junit.org/junit5/docs/current/api/org.jun=
it.platform.testkit/org/junit/platform/testkit/engine/Event.html">Event</a>=
</code> elements and perform assertions against them.</p>
</div>
<div class=3D"paragraph">
<p>For example, if you want to verify the reason that the <code>skippedTest=
()</code> method in
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#testkit-engine=
-ExampleTestCase"><code>ExampleTestCase</code></a> was skipped, you can do =
that as
follows.</p>
</div>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-tip" title=3D"Tip"></i>
</td>
<td class=3D"content">
<div class=3D"paragraph">
<p>The <code>assertThatEvents()</code> method in the following example is a=
 shortcut for
<code>org.assertj.core.api.Assertions.assertThat(events.list())</code> from=
 the <a href=3D"https://joel-costigliola.github.io/assertj/">AssertJ</a> as=
sertion
library.</p>
</div>
<div class=3D"paragraph">
<p>For details on what <em>conditions</em> are available for use with Asser=
tJ assertions against
events, consult the Javadoc for <code><a href=3D"https://junit.org/junit5/d=
ocs/current/api/org.junit.platform.testkit/org/junit/platform/testkit/engin=
e/EventConditions.html">EventConditions</a></code>.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">static</span> <span class=3D"n">org</span>=
<span class=3D"o">.</span><span class=3D"na">junit</span><span class=3D"o">=
.</span><span class=3D"na">platform</span><span class=3D"o">.</span><span c=
lass=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">disco=
very</span><span class=3D"o">.</span><span class=3D"na">DiscoverySelectors<=
/span><span class=3D"o">.</span><span class=3D"na">selectMethod</span><span=
 class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">platform</span><span class=3D=
"o">.</span><span class=3D"na">testkit</span><span class=3D"o">.</span><spa=
n class=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">Ev=
entConditions</span><span class=3D"o">.</span><span class=3D"na">event</spa=
n><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">platform</span><span class=3D=
"o">.</span><span class=3D"na">testkit</span><span class=3D"o">.</span><spa=
n class=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">Ev=
entConditions</span><span class=3D"o">.</span><span class=3D"na">skippedWit=
hReason</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">platform</span><span class=3D=
"o">.</span><span class=3D"na">testkit</span><span class=3D"o">.</span><spa=
n class=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">Ev=
entConditions</span><span class=3D"o">.</span><span class=3D"na">test</span=
><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">example.ExampleTestCase=
</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.test=
kit.engine.EngineTestKit</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.test=
kit.engine.Events</span><span class=3D"o">;</span>

<span class=3D"kd">class</span> <span class=3D"nc">EngineTestKitSkippedMeth=
odDemo</span> <span class=3D"o">{</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">verifyJupiterMethodWa=
sSkipped</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"nc">String</span> <span class=3D"n">methodName</span=
> <span class=3D"o">=3D</span> <span class=3D"s">"skippedTest"</span><span =
class=3D"o">;</span>

        <span class=3D"nc">Events</span> <span class=3D"n">testEvents</span=
> <span class=3D"o">=3D</span> <span class=3D"nc">EngineTestKit</span> <i c=
lass=3D"conum" data-value=3D"5"></i><b>(5)</b>
            <span class=3D"o">.</span><span class=3D"na">engine</span><span=
 class=3D"o">(</span><span class=3D"s">"junit-jupiter"</span><span class=3D=
"o">)</span> <i class=3D"conum" data-value=3D"1"></i><b>(1)</b>
            <span class=3D"o">.</span><span class=3D"na">selectors</span><s=
pan class=3D"o">(</span><span class=3D"n">selectMethod</span><span class=3D=
"o">(</span><span class=3D"nc">ExampleTestCase</span><span class=3D"o">.</s=
pan><span class=3D"na">class</span><span class=3D"o">,</span> <span class=
=3D"n">methodName</span><span class=3D"o">))</span> <i class=3D"conum" data=
-value=3D"2"></i><b>(2)</b>
            <span class=3D"o">.</span><span class=3D"na">execute</span><spa=
n class=3D"o">()</span> <i class=3D"conum" data-value=3D"3"></i><b>(3)</b>
            <span class=3D"o">.</span><span class=3D"na">testEvents</span><=
span class=3D"o">();</span> <i class=3D"conum" data-value=3D"4"></i><b>(4)<=
/b>

        <span class=3D"n">testEvents</span><span class=3D"o">.</span><span =
class=3D"na">assertStatistics</span><span class=3D"o">(</span><span class=
=3D"n">stats</span> <span class=3D"o">-&gt;</span> <span class=3D"n">stats<=
/span><span class=3D"o">.</span><span class=3D"na">skipped</span><span clas=
s=3D"o">(</span><span class=3D"mi">1</span><span class=3D"o">));</span> <i =
class=3D"conum" data-value=3D"6"></i><b>(6)</b>

        <span class=3D"n">testEvents</span><span class=3D"o">.</span><span =
class=3D"na">assertThatEvents</span><span class=3D"o">()</span> <i class=3D=
"conum" data-value=3D"7"></i><b>(7)</b>
            <span class=3D"o">.</span><span class=3D"na">haveExactly</span>=
<span class=3D"o">(</span><span class=3D"mi">1</span><span class=3D"o">,</s=
pan> <span class=3D"n">event</span><span class=3D"o">(</span><span class=3D=
"n">test</span><span class=3D"o">(</span><span class=3D"n">methodName</span=
><span class=3D"o">),</span>
                <span class=3D"n">skippedWithReason</span><span class=3D"o"=
>(</span><span class=3D"s">"for demonstration purposes"</span><span class=
=3D"o">)));</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"colist arabic">
<table>
<tbody><tr>
<td><i class=3D"conum" data-value=3D"1"></i><b>1</b></td>
<td>Select the JUnit Jupiter <code>TestEngine</code>.</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"2"></i><b>2</b></td>
<td>Select the <code>skippedTest()</code> method in the <a href=3D"https://=
junit.org/junit5/docs/current/user-guide/#testkit-engine-ExampleTestCase"><=
code>ExampleTestCase</code></a> test class.</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"3"></i><b>3</b></td>
<td>Execute the <code>TestPlan</code>.</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"4"></i><b>4</b></td>
<td>Filter by <em>test</em> events.</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"5"></i><b>5</b></td>
<td>Save the <em>test</em> <code>Events</code> to a local variable.</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"6"></i><b>6</b></td>
<td>Optionally assert the expected statistics.</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"7"></i><b>7</b></td>
<td>Assert that the recorded <em>test</em> events contain exactly one skipp=
ed test named
<code>skippedTest</code> with <code>"for demonstration purposes"</code> as =
the <em>reason</em>.</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>If you want to verify the type of exception thrown from the <code>failin=
gTest()</code> method in
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#testkit-engine=
-ExampleTestCase"><code>ExampleTestCase</code></a>, you can do that as foll=
ows.</p>
</div>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-tip" title=3D"Tip"></i>
</td>
<td class=3D"content">
<div class=3D"paragraph">
<p>For details on what <em>conditions</em> are available for use with Asser=
tJ assertions against
events and execution results, consult the Javadoc for <code><a href=3D"http=
s://junit.org/junit5/docs/current/api/org.junit.platform.testkit/org/junit/=
platform/testkit/engine/EventConditions.html">EventConditions</a></code> an=
d
<code><a href=3D"https://junit.org/junit5/docs/current/api/org.junit.platfo=
rm.testkit/org/junit/platform/testkit/engine/TestExecutionResultConditions.=
html">TestExecutionResultConditions</a></code>, respectively.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">static</span> <span class=3D"n">org</span>=
<span class=3D"o">.</span><span class=3D"na">junit</span><span class=3D"o">=
.</span><span class=3D"na">platform</span><span class=3D"o">.</span><span c=
lass=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">disco=
very</span><span class=3D"o">.</span><span class=3D"na">DiscoverySelectors<=
/span><span class=3D"o">.</span><span class=3D"na">selectClass</span><span =
class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">platform</span><span class=3D=
"o">.</span><span class=3D"na">testkit</span><span class=3D"o">.</span><spa=
n class=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">Ev=
entConditions</span><span class=3D"o">.</span><span class=3D"na">event</spa=
n><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">platform</span><span class=3D=
"o">.</span><span class=3D"na">testkit</span><span class=3D"o">.</span><spa=
n class=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">Ev=
entConditions</span><span class=3D"o">.</span><span class=3D"na">finishedWi=
thFailure</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">platform</span><span class=3D=
"o">.</span><span class=3D"na">testkit</span><span class=3D"o">.</span><spa=
n class=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">Ev=
entConditions</span><span class=3D"o">.</span><span class=3D"na">test</span=
><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">platform</span><span class=3D=
"o">.</span><span class=3D"na">testkit</span><span class=3D"o">.</span><spa=
n class=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">Te=
stExecutionResultConditions</span><span class=3D"o">.</span><span class=3D"=
na">instanceOf</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">platform</span><span class=3D=
"o">.</span><span class=3D"na">testkit</span><span class=3D"o">.</span><spa=
n class=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">Te=
stExecutionResultConditions</span><span class=3D"o">.</span><span class=3D"=
na">message</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">example.ExampleTestCase=
</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.test=
kit.engine.EngineTestKit</span><span class=3D"o">;</span>

<span class=3D"kd">class</span> <span class=3D"nc">EngineTestKitFailedMetho=
dDemo</span> <span class=3D"o">{</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"kt">void</span> <span class=3D"nf">verifyJupiterMethodFa=
iled</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"nc">EngineTestKit</span><span class=3D"o">.</span><s=
pan class=3D"na">engine</span><span class=3D"o">(</span><span class=3D"s">"=
junit-jupiter"</span><span class=3D"o">)</span> <i class=3D"conum" data-val=
ue=3D"1"></i><b>(1)</b>
            <span class=3D"o">.</span><span class=3D"na">selectors</span><s=
pan class=3D"o">(</span><span class=3D"n">selectClass</span><span class=3D"=
o">(</span><span class=3D"nc">ExampleTestCase</span><span class=3D"o">.</sp=
an><span class=3D"na">class</span><span class=3D"o">))</span> <i class=3D"c=
onum" data-value=3D"2"></i><b>(2)</b>
            <span class=3D"o">.</span><span class=3D"na">execute</span><spa=
n class=3D"o">()</span> <i class=3D"conum" data-value=3D"3"></i><b>(3)</b>
            <span class=3D"o">.</span><span class=3D"na">testEvents</span><=
span class=3D"o">()</span> <i class=3D"conum" data-value=3D"4"></i><b>(4)</=
b>
            <span class=3D"o">.</span><span class=3D"na">assertThatEvents</=
span><span class=3D"o">().</span><span class=3D"na">haveExactly</span><span=
 class=3D"o">(</span><span class=3D"mi">1</span><span class=3D"o">,</span> =
<i class=3D"conum" data-value=3D"5"></i><b>(5)</b>
                <span class=3D"n">event</span><span class=3D"o">(</span><sp=
an class=3D"n">test</span><span class=3D"o">(</span><span class=3D"s">"fail=
ingTest"</span><span class=3D"o">),</span>
                    <span class=3D"n">finishedWithFailure</span><span class=
=3D"o">(</span>
                        <span class=3D"n">instanceOf</span><span class=3D"o=
">(</span><span class=3D"nc">ArithmeticException</span><span class=3D"o">.<=
/span><span class=3D"na">class</span><span class=3D"o">),</span> <span clas=
s=3D"n">message</span><span class=3D"o">(</span><span class=3D"s">"/ by zer=
o"</span><span class=3D"o">))));</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"colist arabic">
<table>
<tbody><tr>
<td><i class=3D"conum" data-value=3D"1"></i><b>1</b></td>
<td>Select the JUnit Jupiter <code>TestEngine</code>.</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"2"></i><b>2</b></td>
<td>Select the <a href=3D"https://junit.org/junit5/docs/current/user-guide/=
#testkit-engine-ExampleTestCase"><code>ExampleTestCase</code></a> test clas=
s.</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"3"></i><b>3</b></td>
<td>Execute the <code>TestPlan</code>.</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"4"></i><b>4</b></td>
<td>Filter by <em>test</em> events.</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"5"></i><b>5</b></td>
<td>Assert that the recorded <em>test</em> events contain exactly one faili=
ng test named
<code>failingTest</code> with an exception of type <code>ArithmeticExceptio=
n</code> and an error message
equal to <code>"/ by zero"</code>.</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>Although typically unnecessary, there are times when you need to verify =
<strong>all</strong> of the
events fired during the execution of a <code>TestPlan</code>. The following=
 test demonstrates how to
achieve this via the <code>assertEventsMatchExactly()</code> method in the =
<code>EngineTestKit</code> API.</p>
</div>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<i class=3D"fa icon-tip" title=3D"Tip"></i>
</td>
<td class=3D"content">
<div class=3D"paragraph">
<p>Since <code>assertEventsMatchExactly()</code> matches conditions exactly=
 in the order in which the
events were fired, <a href=3D"https://junit.org/junit5/docs/current/user-gu=
ide/#testkit-engine-ExampleTestCase"><code>ExampleTestCase</code></a> has b=
een
annotated with <code>@TestMethodOrder(OrderAnnotation.class)</code> and eac=
h test method has been
annotated with <code>@Order(=E2=80=A6=E2=80=8B)</code>. This allows us to e=
nforce the order in which the test
methods are executed, which in turn allows our <code>verifyAllJupiterEvents=
()</code> test to be
reliable.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>If you want to do a <em>partial</em> match <em>with</em> or <em>without<=
/em> ordering requirements, you can use
the methods <code>assertEventsMatchLooselyInOrder()</code> and <code>assert=
EventsMatchLoosely()</code>,
respectively.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight"><code data-lang=3D"java"><span class=3D"kn">=
import</span> <span class=3D"nn">static</span> <span class=3D"n">org</span>=
<span class=3D"o">.</span><span class=3D"na">junit</span><span class=3D"o">=
.</span><span class=3D"na">jupiter</span><span class=3D"o">.</span><span cl=
ass=3D"na">api</span><span class=3D"o">.</span><span class=3D"na">condition=
</span><span class=3D"o">.</span><span class=3D"na">JRE</span><span class=
=3D"o">.</span><span class=3D"na">JAVA_18</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">platform</span><span class=3D=
"o">.</span><span class=3D"na">engine</span><span class=3D"o">.</span><span=
 class=3D"na">discovery</span><span class=3D"o">.</span><span class=3D"na">=
DiscoverySelectors</span><span class=3D"o">.</span><span class=3D"na">selec=
tClass</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">platform</span><span class=3D=
"o">.</span><span class=3D"na">testkit</span><span class=3D"o">.</span><spa=
n class=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">Ev=
entConditions</span><span class=3D"o">.</span><span class=3D"na">abortedWit=
hReason</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">platform</span><span class=3D=
"o">.</span><span class=3D"na">testkit</span><span class=3D"o">.</span><spa=
n class=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">Ev=
entConditions</span><span class=3D"o">.</span><span class=3D"na">container<=
/span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">platform</span><span class=3D=
"o">.</span><span class=3D"na">testkit</span><span class=3D"o">.</span><spa=
n class=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">Ev=
entConditions</span><span class=3D"o">.</span><span class=3D"na">engine</sp=
an><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">platform</span><span class=3D=
"o">.</span><span class=3D"na">testkit</span><span class=3D"o">.</span><spa=
n class=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">Ev=
entConditions</span><span class=3D"o">.</span><span class=3D"na">event</spa=
n><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">platform</span><span class=3D=
"o">.</span><span class=3D"na">testkit</span><span class=3D"o">.</span><spa=
n class=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">Ev=
entConditions</span><span class=3D"o">.</span><span class=3D"na">finishedSu=
ccessfully</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">platform</span><span class=3D=
"o">.</span><span class=3D"na">testkit</span><span class=3D"o">.</span><spa=
n class=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">Ev=
entConditions</span><span class=3D"o">.</span><span class=3D"na">finishedWi=
thFailure</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">platform</span><span class=3D=
"o">.</span><span class=3D"na">testkit</span><span class=3D"o">.</span><spa=
n class=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">Ev=
entConditions</span><span class=3D"o">.</span><span class=3D"na">skippedWit=
hReason</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">platform</span><span class=3D=
"o">.</span><span class=3D"na">testkit</span><span class=3D"o">.</span><spa=
n class=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">Ev=
entConditions</span><span class=3D"o">.</span><span class=3D"na">started</s=
pan><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">platform</span><span class=3D=
"o">.</span><span class=3D"na">testkit</span><span class=3D"o">.</span><spa=
n class=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">Ev=
entConditions</span><span class=3D"o">.</span><span class=3D"na">test</span=
><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">platform</span><span class=3D=
"o">.</span><span class=3D"na">testkit</span><span class=3D"o">.</span><spa=
n class=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">Te=
stExecutionResultConditions</span><span class=3D"o">.</span><span class=3D"=
na">instanceOf</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">static</span> <span cla=
ss=3D"n">org</span><span class=3D"o">.</span><span class=3D"na">junit</span=
><span class=3D"o">.</span><span class=3D"na">platform</span><span class=3D=
"o">.</span><span class=3D"na">testkit</span><span class=3D"o">.</span><spa=
n class=3D"na">engine</span><span class=3D"o">.</span><span class=3D"na">Te=
stExecutionResultConditions</span><span class=3D"o">.</span><span class=3D"=
na">message</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">java.io.StringWriter</s=
pan><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">java.io.Writer</span><s=
pan class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">example.ExampleTestCase=
</span><span class=3D"o">;</span>

<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.T=
est</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.jupiter.api.c=
ondition.DisabledOnJre</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.junit.platform.test=
kit.engine.EngineTestKit</span><span class=3D"o">;</span>
<span class=3D"kn">import</span> <span class=3D"nn">org.opentest4j.TestAbor=
tedException</span><span class=3D"o">;</span>

<span class=3D"kd">class</span> <span class=3D"nc">EngineTestKitAllEventsDe=
mo</span> <span class=3D"o">{</span>

    <span class=3D"nd">@Test</span>
    <span class=3D"nd">@DisabledOnJre</span><span class=3D"o">(</span><span=
 class=3D"no">JAVA_18</span><span class=3D"o">)</span> <span class=3D"c1">/=
/ https://github.com/assertj/assertj-core/issues/2340</span>
    <span class=3D"kt">void</span> <span class=3D"nf">verifyAllJupiterEvent=
s</span><span class=3D"o">()</span> <span class=3D"o">{</span>
        <span class=3D"nc">Writer</span> <span class=3D"n">writer</span> <s=
pan class=3D"o">=3D</span> <span class=3D"c1">// create a java.io.Writer fo=
r debug output</span>

        <span class=3D"nc">EngineTestKit</span><span class=3D"o">.</span><s=
pan class=3D"na">engine</span><span class=3D"o">(</span><span class=3D"s">"=
junit-jupiter"</span><span class=3D"o">)</span> <i class=3D"conum" data-val=
ue=3D"1"></i><b>(1)</b>
            <span class=3D"o">.</span><span class=3D"na">selectors</span><s=
pan class=3D"o">(</span><span class=3D"n">selectClass</span><span class=3D"=
o">(</span><span class=3D"nc">ExampleTestCase</span><span class=3D"o">.</sp=
an><span class=3D"na">class</span><span class=3D"o">))</span> <i class=3D"c=
onum" data-value=3D"2"></i><b>(2)</b>
            <span class=3D"o">.</span><span class=3D"na">execute</span><spa=
n class=3D"o">()</span> <i class=3D"conum" data-value=3D"3"></i><b>(3)</b>
            <span class=3D"o">.</span><span class=3D"na">allEvents</span><s=
pan class=3D"o">()</span> <i class=3D"conum" data-value=3D"4"></i><b>(4)</b=
>
            <span class=3D"o">.</span><span class=3D"na">debug</span><span =
class=3D"o">(</span><span class=3D"n">writer</span><span class=3D"o">)</spa=
n> <i class=3D"conum" data-value=3D"5"></i><b>(5)</b>
            <span class=3D"o">.</span><span class=3D"na">assertEventsMatchE=
xactly</span><span class=3D"o">(</span> <i class=3D"conum" data-value=3D"6"=
></i><b>(6)</b>
                <span class=3D"n">event</span><span class=3D"o">(</span><sp=
an class=3D"n">engine</span><span class=3D"o">(),</span> <span class=3D"n">=
started</span><span class=3D"o">()),</span>
                <span class=3D"n">event</span><span class=3D"o">(</span><sp=
an class=3D"n">container</span><span class=3D"o">(</span><span class=3D"nc"=
>ExampleTestCase</span><span class=3D"o">.</span><span class=3D"na">class</=
span><span class=3D"o">),</span> <span class=3D"n">started</span><span clas=
s=3D"o">()),</span>
                <span class=3D"n">event</span><span class=3D"o">(</span><sp=
an class=3D"n">test</span><span class=3D"o">(</span><span class=3D"s">"skip=
pedTest"</span><span class=3D"o">),</span> <span class=3D"n">skippedWithRea=
son</span><span class=3D"o">(</span><span class=3D"s">"for demonstration pu=
rposes"</span><span class=3D"o">)),</span>
                <span class=3D"n">event</span><span class=3D"o">(</span><sp=
an class=3D"n">test</span><span class=3D"o">(</span><span class=3D"s">"succ=
eedingTest"</span><span class=3D"o">),</span> <span class=3D"n">started</sp=
an><span class=3D"o">()),</span>
                <span class=3D"n">event</span><span class=3D"o">(</span><sp=
an class=3D"n">test</span><span class=3D"o">(</span><span class=3D"s">"succ=
eedingTest"</span><span class=3D"o">),</span> <span class=3D"n">finishedSuc=
cessfully</span><span class=3D"o">()),</span>
                <span class=3D"n">event</span><span class=3D"o">(</span><sp=
an class=3D"n">test</span><span class=3D"o">(</span><span class=3D"s">"abor=
tedTest"</span><span class=3D"o">),</span> <span class=3D"n">started</span>=
<span class=3D"o">()),</span>
                <span class=3D"n">event</span><span class=3D"o">(</span><sp=
an class=3D"n">test</span><span class=3D"o">(</span><span class=3D"s">"abor=
tedTest"</span><span class=3D"o">),</span>
                    <span class=3D"n">abortedWithReason</span><span class=
=3D"o">(</span><span class=3D"n">instanceOf</span><span class=3D"o">(</span=
><span class=3D"nc">TestAbortedException</span><span class=3D"o">.</span><s=
pan class=3D"na">class</span><span class=3D"o">),</span>
                        <span class=3D"n">message</span><span class=3D"o">(=
</span><span class=3D"n">m</span> <span class=3D"o">-&gt;</span> <span clas=
s=3D"n">m</span><span class=3D"o">.</span><span class=3D"na">contains</span=
><span class=3D"o">(</span><span class=3D"s">"abc does not contain Z"</span=
><span class=3D"o">)))),</span>
                <span class=3D"n">event</span><span class=3D"o">(</span><sp=
an class=3D"n">test</span><span class=3D"o">(</span><span class=3D"s">"fail=
ingTest"</span><span class=3D"o">),</span> <span class=3D"n">started</span>=
<span class=3D"o">()),</span>
                <span class=3D"n">event</span><span class=3D"o">(</span><sp=
an class=3D"n">test</span><span class=3D"o">(</span><span class=3D"s">"fail=
ingTest"</span><span class=3D"o">),</span> <span class=3D"n">finishedWithFa=
ilure</span><span class=3D"o">(</span>
                    <span class=3D"n">instanceOf</span><span class=3D"o">(<=
/span><span class=3D"nc">ArithmeticException</span><span class=3D"o">.</spa=
n><span class=3D"na">class</span><span class=3D"o">),</span> <span class=3D=
"n">message</span><span class=3D"o">(</span><span class=3D"s">"/ by zero"</=
span><span class=3D"o">))),</span>
                <span class=3D"n">event</span><span class=3D"o">(</span><sp=
an class=3D"n">container</span><span class=3D"o">(</span><span class=3D"nc"=
>ExampleTestCase</span><span class=3D"o">.</span><span class=3D"na">class</=
span><span class=3D"o">),</span> <span class=3D"n">finishedSuccessfully</sp=
an><span class=3D"o">()),</span>
                <span class=3D"n">event</span><span class=3D"o">(</span><sp=
an class=3D"n">engine</span><span class=3D"o">(),</span> <span class=3D"n">=
finishedSuccessfully</span><span class=3D"o">()));</span>
    <span class=3D"o">}</span>

<span class=3D"o">}</span></code></pre>
</div>
</div>
<div class=3D"colist arabic">
<table>
<tbody><tr>
<td><i class=3D"conum" data-value=3D"1"></i><b>1</b></td>
<td>Select the JUnit Jupiter <code>TestEngine</code>.</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"2"></i><b>2</b></td>
<td>Select the <a href=3D"https://junit.org/junit5/docs/current/user-guide/=
#testkit-engine-ExampleTestCase"><code>ExampleTestCase</code></a> test clas=
s.</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"3"></i><b>3</b></td>
<td>Execute the <code>TestPlan</code>.</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"4"></i><b>4</b></td>
<td>Filter by <em>all</em> events.</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"5"></i><b>5</b></td>
<td>Print all events to the supplied <code>writer</code> for debugging purp=
oses. Debug information
can also be written to an <code>OutputStream</code> such as <code>System.ou=
t</code> or <code>System.err</code>.</td>
</tr>
<tr>
<td><i class=3D"conum" data-value=3D"6"></i><b>6</b></td>
<td>Assert <em>all</em> events in exactly the order in which they were fire=
d by the test engine.</td>
</tr>
</tbody></table>
</div>
<div class=3D"paragraph">
<p>The <code>debug()</code> invocation from the preceding example results i=
n output similar to the
following.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"rouge highlight nowrap"><code>All Events:
    Event [type =3D STARTED, testDescriptor =3D JupiterEngineDescriptor: [e=
ngine:junit-jupiter], timestamp =3D 2018-12-14T12:45:14.082280Z, payload =
=3D null]
    Event [type =3D STARTED, testDescriptor =3D ClassTestDescriptor: [engin=
e:junit-jupiter]/[class:example.ExampleTestCase], timestamp =3D 2018-12-14T=
12:45:14.089339Z, payload =3D null]
    Event [type =3D SKIPPED, testDescriptor =3D TestMethodTestDescriptor: [=
engine:junit-jupiter]/[class:example.ExampleTestCase]/[method:skippedTest()=
], timestamp =3D 2018-12-14T12:45:14.094314Z, payload =3D 'for demonstratio=
n purposes']
    Event [type =3D STARTED, testDescriptor =3D TestMethodTestDescriptor: [=
engine:junit-jupiter]/[class:example.ExampleTestCase]/[method:succeedingTes=
t()], timestamp =3D 2018-12-14T12:45:14.095182Z, payload =3D null]
    Event [type =3D FINISHED, testDescriptor =3D TestMethodTestDescriptor: =
[engine:junit-jupiter]/[class:example.ExampleTestCase]/[method:succeedingTe=
st()], timestamp =3D 2018-12-14T12:45:14.104922Z, payload =3D TestExecution=
Result [status =3D SUCCESSFUL, throwable =3D null]]
    Event [type =3D STARTED, testDescriptor =3D TestMethodTestDescriptor: [=
engine:junit-jupiter]/[class:example.ExampleTestCase]/[method:abortedTest()=
], timestamp =3D 2018-12-14T12:45:14.106121Z, payload =3D null]
    Event [type =3D FINISHED, testDescriptor =3D TestMethodTestDescriptor: =
[engine:junit-jupiter]/[class:example.ExampleTestCase]/[method:abortedTest(=
)], timestamp =3D 2018-12-14T12:45:14.109956Z, payload =3D TestExecutionRes=
ult [status =3D ABORTED, throwable =3D org.opentest4j.TestAbortedException:=
 Assumption failed: abc does not contain Z]]
    Event [type =3D STARTED, testDescriptor =3D TestMethodTestDescriptor: [=
engine:junit-jupiter]/[class:example.ExampleTestCase]/[method:failingTest()=
], timestamp =3D 2018-12-14T12:45:14.110680Z, payload =3D null]
    Event [type =3D FINISHED, testDescriptor =3D TestMethodTestDescriptor: =
[engine:junit-jupiter]/[class:example.ExampleTestCase]/[method:failingTest(=
)], timestamp =3D 2018-12-14T12:45:14.111217Z, payload =3D TestExecutionRes=
ult [status =3D FAILED, throwable =3D java.lang.ArithmeticException: / by z=
ero]]
    Event [type =3D FINISHED, testDescriptor =3D ClassTestDescriptor: [engi=
ne:junit-jupiter]/[class:example.ExampleTestCase], timestamp =3D 2018-12-14=
T12:45:14.113731Z, payload =3D TestExecutionResult [status =3D SUCCESSFUL, =
throwable =3D null]]
    Event [type =3D FINISHED, testDescriptor =3D JupiterEngineDescriptor: [=
engine:junit-jupiter], timestamp =3D 2018-12-14T12:45:14.113806Z, payload =
=3D TestExecutionResult [status =3D SUCCESSFUL, throwable =3D null]]</code>=
</pre>
</div>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"api-evolution"><a class=3D"anchor" href=3D"https://junit.org/juni=
t5/docs/current/user-guide/#api-evolution"></a>7. API Evolution</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>One of the major goals of JUnit 5 is to improve maintainers' capabilitie=
s to evolve JUnit
despite its being used in many projects. With JUnit 4 a lot of stuff that w=
as originally
added as an internal construct only got used by external extension writers =
and tool
builders. That made changing JUnit 4 especially difficult and sometimes imp=
ossible.</p>
</div>
<div class=3D"paragraph">
<p>That=E2=80=99s why JUnit 5 introduces a defined lifecycle for all public=
ly available interfaces,
classes, and methods.</p>
</div>
<div class=3D"sect2">
<h3 id=3D"api-evolution-version-and-status"><a class=3D"anchor" href=3D"htt=
ps://junit.org/junit5/docs/current/user-guide/#api-evolution-version-and-st=
atus"></a>7.1. API Version and Status</h3>
<div class=3D"paragraph">
<p>Every published artifact has a version number <code>&lt;major&gt;.&lt;mi=
nor&gt;.&lt;patch&gt;</code>, and all publicly
available interfaces, classes, and methods are annotated with <a href=3D"ht=
tps://apiguardian-team.github.io/apiguardian/docs/current/api/">@API</a> fr=
om the
<a href=3D"https://github.com/apiguardian-team/apiguardian">@API Guardian</=
a> project. The annotation=E2=80=99s <code>status</code> attribute can be a=
ssigned one of the
following values.</p>
</div>
<table class=3D"tableblock frame-all grid-all stretch">
<colgroup>
<col style=3D"width: 20%;">
<col style=3D"width: 80%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Status</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>INTERNAL</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Mus=
t not be used by any code other than JUnit itself. Might be removed without=
 prior notice.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>DEPRECATED</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Sho=
uld no longer be used; might disappear in the next minor release.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>EXPERIMENTAL</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Int=
ended for new, experimental features where we are looking for feedback.<br>
                     Use this element with caution; it might be promoted to=
 <code>MAINTAINED</code> or
                     <code>STABLE</code> in the future, but might also be r=
emoved without prior notice, even in a patch.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>MAINTAINED</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Int=
ended for features that will not be changed in a backwards-
                     incompatible way for <strong>at least</strong> the nex=
t minor release of the current
                     major version. If scheduled for removal, it will be de=
moted to <code>DEPRECATED</code> first.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>STABLE</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Int=
ended for features that will not be changed in a backwards-
                     incompatible way in the current major version (<code>5=
.*</code>).</p></td>
</tr>
</tbody>
</table>
<div class=3D"paragraph">
<p>If the <code>@API</code> annotation is present on a type, it is consider=
ed to be applicable for all
public members of that type as well. A member is allowed to declare a diffe=
rent <code>status</code>
value of lower stability.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"api-evolution-experimental-apis"><a class=3D"anchor" href=3D"http=
s://junit.org/junit5/docs/current/user-guide/#api-evolution-experimental-ap=
is"></a>7.2. Experimental APIs</h3>
<div class=3D"paragraph">
<p>The following table lists which APIs are currently designated as <em>exp=
erimental</em> via
<code>@API(status =3D EXPERIMENTAL)</code>. Caution should be taken when re=
lying on such APIs.</p>
</div>
<table class=3D"tableblock frame-all grid-all stretch">
<colgroup>
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3334%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Package Name</th>
<th class=3D"tableblock halign-left valign-top">Type Name</th>
<th class=3D"tableblock halign-left valign-top">Since</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>ClassDescriptor</code> <em>(interface)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.8</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>ClassOrderer</code> <em>(interface)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.8</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>ClassOrdererContext</code> <em>(interface)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.8</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>DisplayNameGenerator.IndicativeSentences</code> <em>(class)</em></p></td=
>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.7</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>IndicativeSentencesGeneration</code> <em>(annotation)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.7</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>MethodOrderer.DisplayName</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.7</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>MethodOrderer.MethodName</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.7</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>Order</code> <em>(annotation)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.4</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>TestClassOrder</code> <em>(annotation)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.8</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api.extension</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>DynamicTestInvocationContext</code> <em>(interface)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.8</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api.extension</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>InvocationInterceptor</code> <em>(interface)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.5</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api.extension</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>InvocationInterceptor.Invocation</code> <em>(interface)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.5</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api.extension</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>LifecycleMethodExecutionExceptionHandler</code> <em>(interface)</em></p>=
</td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.5</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api.extension</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>ReflectiveInvocationContext</code> <em>(interface)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.5</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api.extension</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>TestInstantiationException</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.3</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api.extension.support</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>TypeBasedParameterResolver</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.6</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api.io</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>TempDir</code> <em>(annotation)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.4</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api.parallel</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>Execution</code> <em>(annotation)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.3</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api.parallel</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>ExecutionMode</code> <em>(enum)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.3</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api.parallel</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>Isolated</code> <em>(annotation)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.7</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api.parallel</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>ResourceAccessMode</code> <em>(enum)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.3</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api.parallel</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>ResourceLock</code> <em>(annotation)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.3</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api.parallel</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>ResourceLocks</code> <em>(annotation)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.3</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api.parallel</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>Resources</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.3</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.params.converter</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>TypedArgumentConverter</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.7</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.commons.support</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>SearchOption</code> <em>(enum)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.8</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.console</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>ConsoleLauncherToolProvider</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.6</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.engine</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>EngineDiscoveryListener</code> <em>(interface)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.6</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.engine</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>SelectorResolutionResult</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.6</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.engine.support.config</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>PrefixedConfigurationParameters</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.3</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.engine.support.discovery</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>EngineDiscoveryRequestResolver</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.5</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.engine.support.discovery</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>EngineDiscoveryRequestResolver.Builder</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.5</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.engine.support.discovery</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>EngineDiscoveryRequestResolver.InitializationContext</code> <em>(interfa=
ce)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.5</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.engine.support.discovery</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>SelectorResolver</code> <em>(interface)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.5</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.engine.support.discovery</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>SelectorResolver.Context</code> <em>(interface)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.5</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.engine.support.discovery</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>SelectorResolver.Match</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.5</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.engine.support.discovery</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>SelectorResolver.Resolution</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.5</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.engine.support.hierarchical</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>DefaultParallelExecutionConfigurationStrategy</code> <em>(enum)</em></p>=
</td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.3</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.engine.support.hierarchical</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>ExclusiveResource</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.3</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.engine.support.hierarchical</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>ForkJoinPoolHierarchicalTestExecutorService</code> <em>(class)</em></p><=
/td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.3</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.engine.support.hierarchical</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>HierarchicalTestExecutorService</code> <em>(interface)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.3</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.engine.support.hierarchical</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>Node.ExecutionMode</code> <em>(enum)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.3</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.engine.support.hierarchical</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>Node.Invocation</code> <em>(interface)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.4</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.engine.support.hierarchical</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>ParallelExecutionConfiguration</code> <em>(interface)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.3</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.engine.support.hierarchical</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>ParallelExecutionConfigurationStrategy</code> <em>(interface)</em></p></=
td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.3</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.engine.support.hierarchical</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>ResourceLock</code> <em>(interface)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.3</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.engine.support.hierarchical</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>SameThreadHierarchicalTestExecutorService</code> <em>(class)</em></p></t=
d>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.3</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.jfr</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>FlightRecordingDiscoveryListener</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.8</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.jfr</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>FlightRecordingExecutionListener</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.8</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.launcher</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>EngineDiscoveryResult</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.6</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.launcher</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>LauncherDiscoveryListener</code> <em>(interface)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.6</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.launcher</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>LauncherSession</code> <em>(interface)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.8</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.launcher</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>LauncherSessionListener</code> <em>(interface)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.8</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.launcher.listeners</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>UniqueIdTrackingListener</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.8</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.launcher.listeners.discovery</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>LauncherDiscoveryListeners</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.6</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.suite.api</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>ConfigurationParameter</code> <em>(annotation)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.8</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.suite.api</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>ConfigurationParameters</code> <em>(annotation)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.8</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.suite.api</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>DisableParentConfigurationParameters</code> <em>(annotation)</em></p></t=
d>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.8</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.suite.api</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>SelectClasspathResource</code> <em>(annotation)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.8</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.suite.api</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>SelectClasspathResources</code> <em>(annotation)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.8</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.suite.api</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>SelectDirectories</code> <em>(annotation)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.8</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.suite.api</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>SelectFile</code> <em>(annotation)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.8</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.suite.api</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>SelectFiles</code> <em>(annotation)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.8</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.suite.api</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>SelectModules</code> <em>(annotation)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.8</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.suite.api</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>SelectUris</code> <em>(annotation)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.8</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.suite.api</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>Suite</code> <em>(annotation)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.8</code></p></td>
</tr>
</tbody>
</table>
</div>
<div class=3D"sect2">
<h3 id=3D"api-evolution-deprecated-apis"><a class=3D"anchor" href=3D"https:=
//junit.org/junit5/docs/current/user-guide/#api-evolution-deprecated-apis">=
</a>7.3. Deprecated APIs</h3>
<div class=3D"paragraph">
<p>The following table lists which APIs are currently designated as <em>dep=
recated</em> via
<code>@API(status =3D DEPRECATED)</code>. You should avoid using deprecated=
 APIs whenever possible,
since such APIs will likely be removed in an upcoming release.</p>
</div>
<table class=3D"tableblock frame-all grid-all stretch">
<colgroup>
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3334%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Package Name</th>
<th class=3D"tableblock halign-left valign-top">Type Name</th>
<th class=3D"tableblock halign-left valign-top">Since</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.jupiter.api</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>MethodOrderer.Alphanumeric</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>5.7</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.commons.util</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>BlacklistedExceptions</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.7</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.commons.util</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>PreconditionViolationException</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.5</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.engine.support.filter</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>ClasspathScanningSupport</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.5</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.engine.support.hierarchical</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>SingleTestExecutor</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.2</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.launcher.listeners</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>LegacyReportingUtils</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.6</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.runner</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>JUnitPlatform</code> <em>(class)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.8</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>org.junit.platform.suite.api</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>UseTechnicalNames</code> <em>(annotation)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>1.8</code></p></td>
</tr>
</tbody>
</table>
</div>
<div class=3D"sect2">
<h3 id=3D"api-evolution-tooling"><a class=3D"anchor" href=3D"https://junit.=
org/junit5/docs/current/user-guide/#api-evolution-tooling"></a>7.4. @API To=
oling Support</h3>
<div class=3D"paragraph">
<p>The <a href=3D"https://github.com/apiguardian-team/apiguardian">@API Gua=
rdian</a> project plans to provide tooling support for publishers and consu=
mers
of APIs annotated with <a href=3D"https://apiguardian-team.github.io/apigua=
rdian/docs/current/api/">@API</a>. For example, the tooling support will li=
kely provide a
means to check if JUnit APIs are being used in accordance with <code>@API</=
code> annotation
declarations.</p>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"contributors"><a class=3D"anchor" href=3D"https://junit.org/junit=
5/docs/current/user-guide/#contributors"></a>8. Contributors</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>Browse the <a href=3D"https://github.com/junit-team/junit5/graphs/contri=
butors">current list of contributors</a> directly on GitHub.</p>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"release-notes"><a class=3D"anchor" href=3D"https://junit.org/juni=
t5/docs/current/user-guide/#release-notes"></a>9. Release Notes</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>The release notes are available <a href=3D"https://junit.org/junit5/docs=
/current/release-notes/index.html#release-notes">here</a>.</p>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"appendix"><a class=3D"anchor" href=3D"https://junit.org/junit5/do=
cs/current/user-guide/#appendix"></a>10. Appendix</h2>
<div class=3D"sectionbody">
<div class=3D"sect2">
<h3 id=3D"reproducible-builds"><a class=3D"anchor" href=3D"https://junit.or=
g/junit5/docs/current/user-guide/#reproducible-builds"></a>10.1. Reproducib=
le Builds</h3>
<div class=3D"paragraph">
<p>Starting with version 5.7, JUnit 5 aims for its non-javadoc JARs to be
<a href=3D"https://reproducible-builds.org/">reproducible</a>.</p>
</div>
<div class=3D"paragraph">
<p>Under identical build conditions, such as Java version, repeated builds =
should provide the
same output byte-for-byte.</p>
</div>
<div class=3D"paragraph">
<p>This means that anyone can reproduce the build conditions of the artifac=
ts on Maven
Central/Sonatype and produce the same output artifact locally, confirming t=
hat the
artifacts in the repositories were actually generated from this source code=
.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"dependency-metadata"><a class=3D"anchor" href=3D"https://junit.or=
g/junit5/docs/current/user-guide/#dependency-metadata"></a>10.2. Dependency=
 Metadata</h3>
<div class=3D"paragraph">
<p>Artifacts for final releases and milestones are deployed to <a href=3D"h=
ttps://search.maven.org/">Maven Central</a>, and snapshot
artifacts are deployed to Sonatype=E2=80=99s <a href=3D"https://oss.sonatyp=
e.org/content/repositories/snapshots">snapshots repository</a> under
<a href=3D"https://oss.sonatype.org/content/repositories/snapshots/org/juni=
t/">/org/junit</a>.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"dependency-metadata-junit-platform"><a class=3D"anchor" href=3D"h=
ttps://junit.org/junit5/docs/current/user-guide/#dependency-metadata-junit-=
platform"></a>10.2.1. JUnit Platform</h4>
<div class=3D"ulist">
<ul>
<li>
<p><strong>Group ID</strong>: <code>org.junit.platform</code></p>
</li>
<li>
<p><strong>Version</strong>: <code>1.8.2</code></p>
</li>
<li>
<p><strong>Artifact IDs</strong>:</p>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><code>junit-platform-commons</code></dt>
<dd>
<p>Common APIs and support utilities for the JUnit Platform. Any API annota=
ted with
<code>@API(status =3D INTERNAL)</code> is intended solely for usage within =
the JUnit framework
itself. <em>Any usage of internal APIs by external parties is not supported=
!</em></p>
</dd>
<dt class=3D"hdlist1"><code>junit-platform-console</code></dt>
<dd>
<p>Support for discovering and executing tests on the JUnit Platform from t=
he console.
See <a href=3D"https://junit.org/junit5/docs/current/user-guide/#running-te=
sts-console-launcher">Console Launcher</a> for details.</p>
</dd>
<dt class=3D"hdlist1"><code>junit-platform-console-standalone</code></dt>
<dd>
<p>An executable JAR with all dependencies included is provided in Maven Ce=
ntral under the
<a href=3D"https://repo1.maven.org/maven2/org/junit/platform/junit-platform=
-console-standalone">junit-platform-console-standalone</a>
directory. See <a href=3D"https://junit.org/junit5/docs/current/user-guide/=
#running-tests-console-launcher">Console Launcher</a> for details.</p>
</dd>
<dt class=3D"hdlist1"><code>junit-platform-engine</code></dt>
<dd>
<p>Public API for test engines. See <a href=3D"https://junit.org/junit5/doc=
s/current/user-guide/#launcher-api-engines-custom">Registering a TestEngine=
</a> for details.</p>
</dd>
<dt class=3D"hdlist1"><code>junit-platform-jfr</code></dt>
<dd>
<p>   Provides a <code>LauncherDiscoveryListener</code> and <code>TestExecu=
tionListener</code> for Java Flight
Recorder events on the JUnit Platform. See <a href=3D"https://junit.org/jun=
it5/docs/current/user-guide/#running-tests-listeners-flight-recorder">Fligh=
t Recorder Support</a>
for details.</p>
</dd>
<dt class=3D"hdlist1"><code>junit-platform-launcher</code></dt>
<dd>
<p>Public API for configuring and launching test plans=E2=80=89=E2=80=94=E2=
=80=89typically used by IDEs and
build tools. See <a href=3D"https://junit.org/junit5/docs/current/user-guid=
e/#launcher-api">JUnit Platform Launcher API</a> for details.</p>
</dd>
<dt class=3D"hdlist1"><code>junit-platform-reporting</code></dt>
<dd>
<p><code>TestExecutionListener</code> implementations that generate test re=
ports=E2=80=89=E2=80=94=E2=80=89typically used
by IDEs and build tools. See <a href=3D"https://junit.org/junit5/docs/curre=
nt/user-guide/#junit-platform-reporting">JUnit Platform Reporting</a> for d=
etails.</p>
</dd>
<dt class=3D"hdlist1"><code>junit-platform-runner</code></dt>
<dd>
<p>Runner for executing tests and test suites on the JUnit Platform in a JU=
nit 4
environment. See <a href=3D"https://junit.org/junit5/docs/current/user-guid=
e/#running-tests-junit-platform-runner">Using JUnit 4 to run the JUnit Plat=
form</a> for details.</p>
</dd>
<dt class=3D"hdlist1"><code>junit-platform-suite</code></dt>
<dd>
<p>   JUnit Platform Suite artifact that transitively pulls in dependencies=
 on
   <code>junit-platform-suite-api</code> and <code>junit-platform-suite-eng=
ine</code> for simplified dependency
management in build tools such as Gradle and Maven.</p>
</dd>
<dt class=3D"hdlist1"><code>junit-platform-suite-api</code></dt>
<dd>
<p>Annotations for configuring test suites on the JUnit Platform. Supported=
 by the
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#junit-platform=
-suite-engine">JUnit Platform Suite Engine</a> and the
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#running-tests-=
junit-platform-runner">JUnitPlatform runner</a>.</p>
</dd>
<dt class=3D"hdlist1"><code>junit-platform-suite-commons</code></dt>
<dd>
<p>Common support utilities for executing test suites on the JUnit Platform=
.</p>
</dd>
<dt class=3D"hdlist1"><code>junit-platform-suite-engine</code></dt>
<dd>
<p>Engine that executes test suites on the JUnit Platform; only required at=
 runtime. See
<a href=3D"https://junit.org/junit5/docs/current/user-guide/#junit-platform=
-suite-engine">JUnit Platform Suite Engine</a> for details.</p>
</dd>
<dt class=3D"hdlist1"><code>junit-platform-testkit</code></dt>
<dd>
<p>Provides support for executing a test plan for a given <code>TestEngine<=
/code> and then
accessing the results via a fluent API to verify the expected results.</p>
</dd>
</dl>
</div>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"dependency-metadata-junit-jupiter"><a class=3D"anchor" href=3D"ht=
tps://junit.org/junit5/docs/current/user-guide/#dependency-metadata-junit-j=
upiter"></a>10.2.2. JUnit Jupiter</h4>
<div class=3D"ulist">
<ul>
<li>
<p><strong>Group ID</strong>: <code>org.junit.jupiter</code></p>
</li>
<li>
<p><strong>Version</strong>: <code>5.8.2</code></p>
</li>
<li>
<p><strong>Artifact IDs</strong>:</p>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><code>junit-jupiter</code></dt>
<dd>
<p>JUnit Jupiter aggregator artifact that transitively pulls in dependencie=
s on
<code>junit-jupiter-api</code>, <code>junit-jupiter-params</code>, and <cod=
e>junit-jupiter-engine</code> for
simplified dependency management in build tools such as Gradle and Maven.</=
p>
</dd>
<dt class=3D"hdlist1"><code>junit-jupiter-api</code></dt>
<dd>
<p>JUnit Jupiter API for <a href=3D"https://junit.org/junit5/docs/current/u=
ser-guide/#writing-tests">writing tests</a> and <a href=3D"https://junit.or=
g/junit5/docs/current/user-guide/#extensions">extensions</a>.</p>
</dd>
<dt class=3D"hdlist1"><code>junit-jupiter-engine</code></dt>
<dd>
<p>JUnit Jupiter test engine implementation; only required at runtime.</p>
</dd>
<dt class=3D"hdlist1"><code>junit-jupiter-params</code></dt>
<dd>
<p>Support for <a href=3D"https://junit.org/junit5/docs/current/user-guide/=
#writing-tests-parameterized-tests">parameterized tests</a> in JUnit Jupite=
r.</p>
</dd>
<dt class=3D"hdlist1"><code>junit-jupiter-migrationsupport</code></dt>
<dd>
<p>Support for migrating from JUnit 4 to JUnit Jupiter; only required for s=
upport for
JUnit 4=E2=80=99s <code>@Ignore</code> annotation and for running selected =
JUnit 4 rules.</p>
</dd>
</dl>
</div>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"dependency-metadata-junit-vintage"><a class=3D"anchor" href=3D"ht=
tps://junit.org/junit5/docs/current/user-guide/#dependency-metadata-junit-v=
intage"></a>10.2.3. JUnit Vintage</h4>
<div class=3D"ulist">
<ul>
<li>
<p><strong>Group ID</strong>: <code>org.junit.vintage</code></p>
</li>
<li>
<p><strong>Version</strong>: <code>5.8.2</code></p>
</li>
<li>
<p><strong>Artifact ID</strong>:</p>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><code>junit-vintage-engine</code></dt>
<dd>
<p>JUnit Vintage test engine implementation that allows one to run <em>vint=
age</em> JUnit tests
on the JUnit Platform. <em>Vintage</em> tests include those written using J=
Unit 3 or JUnit 4
APIs or tests written using testing frameworks built on those APIs.</p>
</dd>
</dl>
</div>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"dependency-metadata-junit-bom"><a class=3D"anchor" href=3D"https:=
//junit.org/junit5/docs/current/user-guide/#dependency-metadata-junit-bom">=
</a>10.2.4. Bill of Materials (BOM)</h4>
<div class=3D"paragraph">
<p>The <em>Bill of Materials</em> POM provided under the following Maven co=
ordinates can be used to
ease dependency management when referencing multiple of the above artifacts=
 using
<a href=3D"https://maven.apache.org/guides/introduction/introduction-to-dep=
endency-mechanism.html#Importing_Dependencies">Maven</a>
or <a href=3D"https://docs.gradle.org/current/userguide/managing_transitive=
_dependencies.html#sec:bom_import">Gradle</a>.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><strong>Group ID</strong>: <code>org.junit</code></p>
</li>
<li>
<p><strong>Artifact ID</strong>: <code>junit-bom</code></p>
</li>
<li>
<p><strong>Version</strong>: <code>5.8.2</code></p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"dependency-metadata-dependencies"><a class=3D"anchor" href=3D"htt=
ps://junit.org/junit5/docs/current/user-guide/#dependency-metadata-dependen=
cies"></a>10.2.5. Dependencies</h4>
<div class=3D"paragraph">
<p>Most of the above artifacts have a dependency in their published Maven P=
OMs on the
following <em>@API Guardian</em> JAR.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><strong>Group ID</strong>: <code>org.apiguardian</code></p>
</li>
<li>
<p><strong>Artifact ID</strong>: <code>apiguardian-api</code></p>
</li>
<li>
<p><strong>Version</strong>: <code>1.1.2</code></p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>In addition, most of the above artifacts have a direct or transitive dep=
endency on the
following <em>OpenTest4J</em> JAR.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><strong>Group ID</strong>: <code>org.opentest4j</code></p>
</li>
<li>
<p><strong>Artifact ID</strong>: <code>opentest4j</code></p>
</li>
<li>
<p><strong>Version</strong>: <code>1.2.0</code></p>
</li>
</ul>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"dependency-diagram"><a class=3D"anchor" href=3D"https://junit.org=
/junit5/docs/current/user-guide/#dependency-diagram"></a>10.3. Dependency D=
iagram</h3>
<div class=3D"imageblock">
<div class=3D"content">
<img src=3D"https://junit.org/junit5/docs/current/user-guide/images/compone=
nt-diagram.svg" alt=3D"component diagram" width=3D"2150" height=3D"915">
</div>
</div>
</div>
</div>
</div>
</div>
<div id=3D"footer">
<div id=3D"footer-text">
Version 5.8.2<br>
Last updated 2021-04-12 19:52:34 +0200
</div>
</div>




</body></html>
------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-0f63da74-8cd3-4c95-8c1b-e8c5672de590@mhtml.blink

@charset "utf-8";
=0A
------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-ad1fd983-9467-4502-bf81-89310c8662b3@mhtml.blink

@charset "utf-8";
=0A
------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-b18ce14e-1be2-4527-b0b1-29827373262d@mhtml.blink

@charset "utf-8";

.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_=
text > img[src^=3D"https://www.gstatic.com/images/branding/googlelogo"], sp=
an[data-href^=3D"https://www.hcaptcha.com/"] > #icon, #bit-notification-bar=
-iframe, ::-webkit-calendar-picker-indicator { filter: invert(100%) hue-rot=
ate(180deg) contrast(90%) !important; }
------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-dca45a15-ab3a-47f6-8037-f01f1c5a8dc0@mhtml.blink

@charset "utf-8";

[data-darkreader-inline-bgcolor] { background-color: var(--darkreader-inlin=
e-bgcolor)  !important; }

[data-darkreader-inline-bgimage] { background-image: var(--darkreader-inlin=
e-bgimage)  !important; }

[data-darkreader-inline-border] { border-color: var(--darkreader-inline-bor=
der)  !important; }

[data-darkreader-inline-border-bottom] { border-bottom-color: var(--darkrea=
der-inline-border-bottom)  !important; }

[data-darkreader-inline-border-left] { border-left-color: var(--darkreader-=
inline-border-left)  !important; }

[data-darkreader-inline-border-right] { border-right-color: var(--darkreade=
r-inline-border-right)  !important; }

[data-darkreader-inline-border-top] { border-top-color: var(--darkreader-in=
line-border-top)  !important; }

[data-darkreader-inline-boxshadow] { box-shadow: var(--darkreader-inline-bo=
xshadow)  !important; }

[data-darkreader-inline-color] { color: var(--darkreader-inline-color)  !im=
portant; }

[data-darkreader-inline-fill] { fill: var(--darkreader-inline-fill)  !impor=
tant; }

[data-darkreader-inline-stroke] { stroke: var(--darkreader-inline-stroke)  =
!important; }

[data-darkreader-inline-outline] { outline-color: var(--darkreader-inline-o=
utline)  !important; }

[data-darkreader-inline-stopcolor] { stop-color: var(--darkreader-inline-st=
opcolor)  !important; }
------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-0093f8c7-2265-4b98-b092-dbfada589c4e@mhtml.blink

@charset "utf-8";

:root { --darkreader-neutral-background: #131516; --darkreader-neutral-text=
: #d8d4cf; --darkreader-selection-background: #004daa; --darkreader-selecti=
on-text: #e8e6e3; }
------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-31c555f7-5df1-4502-9e28-2fadba4e96c3@mhtml.blink

@charset "utf-8";

:root { }
------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-29ce3bf5-56a8-43b2-b630-b0cf9c9de8c5@mhtml.blink

@charset "utf-8";

html { background-color: rgb(24, 26, 27) !important; }

html { color-scheme: dark !important; }

html, body { background-color: rgb(24, 26, 27); }

html, body { border-color: rgb(115, 107, 94); color: rgb(232, 230, 227); }

a { color: rgb(51, 145, 255); }

table { border-color: rgb(84, 91, 94); }

::placeholder { color: rgb(178, 171, 161); }

input:-webkit-autofill, textarea:-webkit-autofill, select:-webkit-autofill =
{ background-color: rgb(64, 68, 0) !important; color: rgb(232, 230, 227) !i=
mportant; }

::-webkit-scrollbar { background-color: rgb(32, 35, 36); color: rgb(171, 16=
4, 153); }

::-webkit-scrollbar-thumb { background-color: rgb(69, 74, 77); }

::-webkit-scrollbar-thumb:hover { background-color: rgb(87, 94, 98); }

::-webkit-scrollbar-thumb:active { background-color: rgb(72, 78, 81); }

::-webkit-scrollbar-corner { background-color: rgb(24, 26, 27); }

::selection { background-color: rgb(0, 77, 170) !important; color: rgb(232,=
 230, 227) !important; }
------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-b9da9d93-fd41-4a7e-afbd-66e08ce1798c@mhtml.blink

@charset "utf-8";

article, aside, details, figcaption, figure, footer, header, hgroup, main, =
nav, section { display: block; }

audio, video { display: inline-block; }

audio:not([controls]) { display: none; height: 0px; }

html { font-family: sans-serif; text-size-adjust: 100%; }

a { background: none; }

a:focus { outline: dotted thin; }

a:active, a:hover { outline: 0px; }

h1 { font-size: 2em; margin: 0.67em 0px; }

abbr[title] { border-bottom: 1px dotted; }

b, strong { font-weight: bold; }

dfn { font-style: italic; }

hr { box-sizing: content-box; height: 0px; }

mark { background: rgb(255, 255, 0); color: rgb(0, 0, 0); }

code, kbd, pre, samp { font-family: monospace; font-size: 1em; }

pre { white-space: pre-wrap; }

q { quotes: "=E2=80=9C" "=E2=80=9D" "=E2=80=98" "=E2=80=99"; }

small { font-size: 80%; }

sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-ali=
gn: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

img { border: 0px; }

svg:not(:root) { overflow: hidden; }

figure { margin: 0px; }

fieldset { border: 1px solid silver; margin: 0px 2px; padding: 0.35em 0.625=
em 0.75em; }

legend { border: 0px; padding: 0px; }

button, input, select, textarea { font-family: inherit; font-size: 100%; ma=
rgin: 0px; }

button, input { line-height: normal; }

button, select { text-transform: none; }

button, html input[type=3D"button"], input[type=3D"reset"], input[type=3D"s=
ubmit"] { appearance: button; cursor: pointer; }

button[disabled], html input[disabled] { cursor: default; }

input[type=3D"checkbox"], input[type=3D"radio"] { box-sizing: border-box; p=
adding: 0px; }

textarea { overflow: auto; vertical-align: top; }

table { border-collapse: collapse; border-spacing: 0px; }

*, ::before, ::after { box-sizing: border-box; }

html, body { font-size: 100%; }

body { background: rgb(255, 255, 255); color: rgba(0, 0, 0, 0.8); padding: =
0px; margin: 0px; font-family: "Noto Serif", "DejaVu Serif", serif; font-we=
ight: 400; font-style: normal; line-height: 1; position: relative; cursor: =
auto; tab-size: 4; -webkit-font-smoothing: antialiased; }

a:hover { cursor: pointer; }

img, object, embed { max-width: 100%; height: auto; }

object, embed { height: 100%; }

img { }

.left { float: left !important; }

.right { float: right !important; }

.text-left { text-align: left !important; }

.text-right { text-align: right !important; }

.text-center { text-align: center !important; }

.text-justify { text-align: justify !important; }

.hide { display: none; }

img, object, svg { display: inline-block; vertical-align: middle; }

textarea { height: auto; min-height: 50px; }

select { width: 100%; }

.center { margin-left: auto; margin-right: auto; }

.stretch { width: 100%; }

.subheader, .admonitionblock td.content > .title, .audioblock > .title, .ex=
ampleblock > .title, .imageblock > .title, .listingblock > .title, .literal=
block > .title, .stemblock > .title, .openblock > .title, .paragraph > .tit=
le, .quoteblock > .title, table.tableblock > .title, .verseblock > .title, =
.videoblock > .title, .dlist > .title, .olist > .title, .ulist > .title, .q=
list > .title, .hdlist > .title { line-height: 1.45; color: rgb(122, 37, 24=
); font-weight: 400; margin-top: 0px; margin-bottom: 0.25em; }

div, dl, dt, dd, ul, ol, li, h1, h2, h3, #toctitle, .sidebarblock > .conten=
t > .title, h4, h5, h6, pre, form, p, blockquote, th, td { margin: 0px; pad=
ding: 0px; direction: ltr; }

a { color: rgb(33, 86, 165); text-decoration: underline; line-height: inher=
it; }

a:hover, a:focus { color: rgb(29, 75, 143); }

a img { border: 0px; }

p { font-family: inherit; font-weight: 400; font-size: 1em; line-height: 1.=
6; margin-bottom: 1.25em; text-rendering: optimizelegibility; }

p aside { font-size: 0.875em; line-height: 1.35; font-style: italic; }

h1, h2, h3, #toctitle, .sidebarblock > .content > .title, h4, h5, h6 { font=
-family: "Open Sans", "DejaVu Sans", sans-serif; font-weight: 300; font-sty=
le: normal; color: rgb(186, 57, 37); text-rendering: optimizelegibility; ma=
rgin-top: 1em; margin-bottom: 0.5em; line-height: 1.0125em; }

h1 small, h2 small, h3 small, #toctitle small, .sidebarblock > .content > .=
title small, h4 small, h5 small, h6 small { font-size: 60%; color: rgb(233,=
 155, 143); line-height: 0; }

h1 { font-size: 2.125em; }

h2 { font-size: 1.6875em; }

h3, #toctitle, .sidebarblock > .content > .title { font-size: 1.375em; }

h4, h5 { font-size: 1.125em; }

h6 { font-size: 1em; }

hr { border-style: solid; border-color: rgb(221, 221, 223); border-image: i=
nitial; border-width: 1px 0px 0px; clear: both; margin: 1.25em 0px 1.1875em=
; height: 0px; }

em, i { font-style: italic; line-height: inherit; }

strong, b { font-weight: bold; line-height: inherit; }

small { font-size: 60%; line-height: inherit; }

code { font-family: "Droid Sans Mono", "DejaVu Sans Mono", monospace; font-=
weight: 400; color: rgba(0, 0, 0, 0.9); }

ul, ol, dl { font-size: 1em; line-height: 1.6; margin-bottom: 1.25em; list-=
style-position: outside; font-family: inherit; }

ul, ol { margin-left: 1.5em; }

ul li ul, ul li ol { margin-left: 1.25em; margin-bottom: 0px; font-size: 1e=
m; }

ul.square li ul, ul.circle li ul, ul.disc li ul { list-style: inherit; }

ul.square { list-style-type: square; }

ul.circle { list-style-type: circle; }

ul.disc { list-style-type: disc; }

ol li ul, ol li ol { margin-left: 1.25em; margin-bottom: 0px; }

dl dt { margin-bottom: 0.3125em; font-weight: bold; }

dl dd { margin-bottom: 1.25em; }

abbr, acronym { text-transform: uppercase; font-size: 90%; color: rgba(0, 0=
, 0, 0.8); border-bottom: 1px dotted rgb(221, 221, 221); cursor: help; }

abbr { text-transform: none; }

blockquote { margin: 0px 0px 1.25em; padding: 0.5625em 1.25em 0px 1.1875em;=
 border-left: 1px solid rgb(221, 221, 221); }

blockquote cite { display: block; font-size: 0.9375em; color: rgba(0, 0, 0,=
 0.6); }

blockquote cite::before { content: "=E2=80=94 "; }

blockquote cite a, blockquote cite a:visited { color: rgba(0, 0, 0, 0.6); }

blockquote, blockquote p { line-height: 1.6; color: rgba(0, 0, 0, 0.85); }

@media screen and (min-width: 768px) {
  h1, h2, h3, #toctitle, .sidebarblock > .content > .title, h4, h5, h6 { li=
ne-height: 1.2; }
  h1 { font-size: 2.75em; }
  h2 { font-size: 2.3125em; }
  h3, #toctitle, .sidebarblock > .content > .title { font-size: 1.6875em; }
  h4 { font-size: 1.4375em; }
}

table { background: rgb(255, 255, 255); margin-bottom: 1.25em; border: 1px =
solid rgb(222, 222, 222); }

table thead, table tfoot { background: rgb(247, 248, 247); }

table thead tr th, table thead tr td, table tfoot tr th, table tfoot tr td =
{ padding: 0.5em 0.625em 0.625em; font-size: inherit; color: rgba(0, 0, 0, =
0.8); text-align: left; }

table tr th, table tr td { padding: 0.5625em 0.625em; font-size: inherit; c=
olor: rgba(0, 0, 0, 0.8); }

table tr.even, table tr.alt { background: rgb(248, 248, 247); }

table thead tr th, table tfoot tr th, table tbody tr td, table tr td, table=
 tfoot tr td { display: table-cell; line-height: 1.6; }

h1, h2, h3, #toctitle, .sidebarblock > .content > .title, h4, h5, h6 { line=
-height: 1.2; word-spacing: -0.05em; }

h1 strong, h2 strong, h3 strong, #toctitle strong, .sidebarblock > .content=
 > .title strong, h4 strong, h5 strong, h6 strong { font-weight: 400; }

.clearfix::before, .clearfix::after, .float-group::before, .float-group::af=
ter { content: " "; display: table; }

.clearfix::after, .float-group::after { clear: both; }

:not(pre):not([class^=3D"L"]) > code { font-size: 0.9375em; letter-spacing:=
 0px; padding: 0.1em 0.5ex; word-spacing: -0.15em; background: rgb(247, 247=
, 248); border-radius: 4px; line-height: 1.45; text-rendering: optimizespee=
d; overflow-wrap: break-word; font-style: normal !important; }

:not(pre) > code.nobreak { overflow-wrap: normal; }

:not(pre) > code.nowrap { white-space: nowrap; }

pre { color: rgba(0, 0, 0, 0.9); font-family: "Droid Sans Mono", "DejaVu Sa=
ns Mono", monospace; line-height: 1.45; text-rendering: optimizespeed; }

pre code, pre pre { color: inherit; font-size: inherit; line-height: inheri=
t; }

pre > code { display: block; }

pre.nowrap, pre.nowrap pre { white-space: pre; overflow-wrap: normal; }

em em { font-style: normal; }

strong strong { font-weight: 400; }

.keyseq { color: rgba(51, 51, 51, 0.8); }

kbd { font-family: "Droid Sans Mono", "DejaVu Sans Mono", monospace; displa=
y: inline-block; color: rgba(0, 0, 0, 0.8); font-size: 0.65em; line-height:=
 1.45; background: rgb(247, 247, 247); border: 1px solid rgb(204, 204, 204)=
; border-radius: 3px; box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px, rgb(255, =
255, 255) 0px 0px 0px 0.1em inset; margin: 0px 0.15em; padding: 0.2em 0.5em=
; vertical-align: middle; position: relative; top: -0.1em; white-space: now=
rap; }

.keyseq kbd:first-child { margin-left: 0px; }

.keyseq kbd:last-child { margin-right: 0px; }

.menuseq, .menuref { color: rgb(0, 0, 0); }

.menuseq b:not(.caret), .menuref { font-weight: inherit; }

.menuseq { word-spacing: -0.02em; }

.menuseq b.caret { font-size: 1.25em; line-height: 0.8; }

.menuseq i.caret { font-weight: bold; text-align: center; width: 0.45em; }

b.button::before, b.button::after { position: relative; top: -1px; font-wei=
ght: 400; }

b.button::before { content: "["; padding: 0px 3px 0px 2px; }

b.button::after { content: "]"; padding: 0px 2px 0px 3px; }

p a > code:hover { color: rgba(0, 0, 0, 0.9); }

#header, #content, #footnotes, #footer { width: 100%; margin: 0px auto; max=
-width: 62.5em; position: relative; padding-left: 0.9375em; padding-right: =
0.9375em; }

#header::before, #header::after, #content::before, #content::after, #footno=
tes::before, #footnotes::after, #footer::before, #footer::after { content: =
" "; display: table; }

#header::after, #content::after, #footnotes::after, #footer::after { clear:=
 both; }

#content { margin-top: 1.25em; }

#content::before { content: none; }

#header > h1:first-child { color: rgba(0, 0, 0, 0.85); margin-top: 2.25rem;=
 margin-bottom: 0px; }

#header > h1:first-child + #toc { margin-top: 8px; border-top: 1px solid rg=
b(221, 221, 223); }

#header > h1:only-child, body.toc2 #header > h1:nth-last-child(2) { border-=
bottom: 1px solid rgb(221, 221, 223); padding-bottom: 8px; }

#header .details { border-bottom: 1px solid rgb(221, 221, 223); line-height=
: 1.45; padding-top: 0.25em; padding-bottom: 0.25em; padding-left: 0.25em; =
color: rgba(0, 0, 0, 0.6); display: flex; flex-flow: row wrap; }

#header .details span:first-child { margin-left: -0.125em; }

#header .details span.email a { color: rgba(0, 0, 0, 0.85); }

#header .details br { display: none; }

#header .details br + span::before { content: "=C2=A0=E2=80=93=C2=A0"; }

#header .details br + span.author::before { content: "=C2=A0=E2=8B=85=C2=A0=
"; color: rgba(0, 0, 0, 0.85); }

#header .details br + span#revremark::before { content: "=C2=A0|=C2=A0"; }

#header #revnumber { text-transform: capitalize; }

#header #revnumber::after { content: "=C2=A0"; }

#content > h1:first-child:not([class]) { color: rgba(0, 0, 0, 0.85); border=
-bottom: 1px solid rgb(221, 221, 223); padding-bottom: 8px; margin-top: 0px=
; padding-top: 1rem; margin-bottom: 1.25rem; }

#toc { border-bottom: 1px solid rgb(231, 231, 233); padding-bottom: 0.5em; =
}

#toc > ul { margin-left: 0.125em; }

#toc ul.sectlevel0 > li > a { font-style: italic; }

#toc ul.sectlevel0 ul.sectlevel1 { margin: 0.5em 0px; }

#toc ul { font-family: "Open Sans", "DejaVu Sans", sans-serif; list-style-t=
ype: none; }

#toc li { line-height: 1.3334; margin-top: 0.3334em; }

#toc a { text-decoration: none; }

#toc a:active { text-decoration: underline; }

#toctitle { color: rgb(122, 37, 24); font-size: 1.2em; }

@media screen and (min-width: 768px) {
  #toctitle { font-size: 1.375em; }
  body.toc2 { padding-left: 15em; padding-right: 0px; }
  #toc.toc2 { background: rgb(248, 248, 247); position: fixed; width: 15em;=
 left: 0px; top: 0px; border-right: 1px solid rgb(231, 231, 233); z-index: =
1000; padding: 1.25em 1em; height: 100%; overflow: auto; margin-top: 0px !i=
mportant; border-top-width: 0px !important; border-bottom-width: 0px !impor=
tant; }
  #toc.toc2 #toctitle { margin-top: 0px; margin-bottom: 0.8rem; font-size: =
1.2em; }
  #toc.toc2 > ul { font-size: 0.9em; margin-bottom: 0px; }
  #toc.toc2 ul ul { margin-left: 0px; padding-left: 1em; }
  #toc.toc2 ul.sectlevel0 ul.sectlevel1 { padding-left: 0px; margin-top: 0.=
5em; margin-bottom: 0.5em; }
  body.toc2.toc-right { padding-left: 0px; padding-right: 15em; }
  body.toc2.toc-right #toc.toc2 { border-right-width: 0px; border-left: 1px=
 solid rgb(231, 231, 233); left: auto; right: 0px; }
}

@media screen and (min-width: 1280px) {
  body.toc2 { padding-left: 20em; padding-right: 0px; }
  #toc.toc2 { width: 20em; }
  #toc.toc2 #toctitle { font-size: 1.375em; }
  #toc.toc2 > ul { font-size: 0.95em; }
  #toc.toc2 ul ul { padding-left: 1.25em; }
  body.toc2.toc-right { padding-left: 0px; padding-right: 20em; }
}

#content #toc { border-style: solid; border-width: 1px; border-color: rgb(2=
24, 224, 220); margin-bottom: 1.25em; padding: 1.25em; background: rgb(248,=
 248, 247); border-radius: 4px; }

#content #toc > :first-child { margin-top: 0px; }

#content #toc > :last-child { margin-bottom: 0px; }

#footer { max-width: 100%; background: rgba(0, 0, 0, 0.8); padding: 1.25em;=
 }

#footer-text { color: rgba(255, 255, 255, 0.8); line-height: 1.44; }

#content { margin-bottom: 0.625em; }

.sect1 { padding-bottom: 0.625em; }

@media screen and (min-width: 768px) {
  #content { margin-bottom: 1.25em; }
  .sect1 { padding-bottom: 1.25em; }
}

.sect1:last-child { padding-bottom: 0px; }

.sect1 + .sect1 { border-top: 1px solid rgb(231, 231, 233); }

#content h1 > a.anchor, h2 > a.anchor, h3 > a.anchor, #toctitle > a.anchor,=
 .sidebarblock > .content > .title > a.anchor, h4 > a.anchor, h5 > a.anchor=
, h6 > a.anchor { position: absolute; z-index: 1001; width: 1.5ex; margin-l=
eft: -1.5ex; display: block; visibility: hidden; text-align: center; font-w=
eight: 400; text-decoration: none !important; }

#content h1 > a.anchor::before, h2 > a.anchor::before, h3 > a.anchor::befor=
e, #toctitle > a.anchor::before, .sidebarblock > .content > .title > a.anch=
or::before, h4 > a.anchor::before, h5 > a.anchor::before, h6 > a.anchor::be=
fore { content: "=C2=A7"; font-size: 0.85em; display: block; padding-top: 0=
.1em; }

#content h1:hover > a.anchor, #content h1 > a.anchor:hover, h2:hover > a.an=
chor, h2 > a.anchor:hover, h3:hover > a.anchor, #toctitle:hover > a.anchor,=
 .sidebarblock > .content > .title:hover > a.anchor, h3 > a.anchor:hover, #=
toctitle > a.anchor:hover, .sidebarblock > .content > .title > a.anchor:hov=
er, h4:hover > a.anchor, h4 > a.anchor:hover, h5:hover > a.anchor, h5 > a.a=
nchor:hover, h6:hover > a.anchor, h6 > a.anchor:hover { visibility: visible=
; }

#content h1 > a.link, h2 > a.link, h3 > a.link, #toctitle > a.link, .sideba=
rblock > .content > .title > a.link, h4 > a.link, h5 > a.link, h6 > a.link =
{ color: rgb(186, 57, 37); text-decoration: none; }

#content h1 > a.link:hover, h2 > a.link:hover, h3 > a.link:hover, #toctitle=
 > a.link:hover, .sidebarblock > .content > .title > a.link:hover, h4 > a.l=
ink:hover, h5 > a.link:hover, h6 > a.link:hover { color: rgb(165, 50, 33); =
}

details, .audioblock, .imageblock, .literalblock, .listingblock, .stemblock=
, .videoblock { margin-bottom: 1.25em; }

details > summary:first-of-type { cursor: pointer; display: list-item; outl=
ine: none; margin-bottom: 0.75em; }

.admonitionblock td.content > .title, .audioblock > .title, .exampleblock >=
 .title, .imageblock > .title, .listingblock > .title, .literalblock > .tit=
le, .stemblock > .title, .openblock > .title, .paragraph > .title, .quotebl=
ock > .title, table.tableblock > .title, .verseblock > .title, .videoblock =
> .title, .dlist > .title, .olist > .title, .ulist > .title, .qlist > .titl=
e, .hdlist > .title { text-rendering: optimizelegibility; text-align: left;=
 font-family: "Noto Serif", "DejaVu Serif", serif; font-size: 1rem; font-st=
yle: italic; }

table.tableblock.fit-content > caption.title { white-space: nowrap; width: =
0px; }

.paragraph.lead > p, #preamble > .sectionbody > [class=3D"paragraph"]:first=
-of-type p { font-size: 1.21875em; line-height: 1.6; color: rgba(0, 0, 0, 0=
.85); }

table.tableblock #preamble > .sectionbody > [class=3D"paragraph"]:first-of-=
type p { font-size: inherit; }

.admonitionblock > table { border-collapse: separate; border: 0px; backgrou=
nd: none; width: 100%; }

.admonitionblock > table td.icon { text-align: center; width: 80px; }

.admonitionblock > table td.icon img { max-width: none; }

.admonitionblock > table td.icon .title { font-weight: bold; font-family: "=
Open Sans", "DejaVu Sans", sans-serif; text-transform: uppercase; }

.admonitionblock > table td.content { padding-left: 1.125em; padding-right:=
 1.25em; border-left: 1px solid rgb(221, 221, 223); color: rgba(0, 0, 0, 0.=
6); }

.admonitionblock > table td.content > :last-child > :last-child { margin-bo=
ttom: 0px; }

.exampleblock > .content { border-style: solid; border-width: 1px; border-c=
olor: rgb(230, 230, 230); margin-bottom: 1.25em; padding: 1.25em; backgroun=
d: rgb(255, 255, 255); border-radius: 4px; }

.exampleblock > .content > :first-child { margin-top: 0px; }

.exampleblock > .content > :last-child { margin-bottom: 0px; }

.sidebarblock { border-style: solid; border-width: 1px; border-color: rgb(2=
19, 219, 214); margin-bottom: 1.25em; padding: 1.25em; background: rgb(243,=
 243, 242); border-radius: 4px; }

.sidebarblock > :first-child { margin-top: 0px; }

.sidebarblock > :last-child { margin-bottom: 0px; }

.sidebarblock > .content > .title { color: rgb(122, 37, 24); margin-top: 0p=
x; text-align: center; }

.exampleblock > .content > :last-child > :last-child, .exampleblock > .cont=
ent .olist > ol > li:last-child > :last-child, .exampleblock > .content .ul=
ist > ul > li:last-child > :last-child, .exampleblock > .content .qlist > o=
l > li:last-child > :last-child, .sidebarblock > .content > :last-child > :=
last-child, .sidebarblock > .content .olist > ol > li:last-child > :last-ch=
ild, .sidebarblock > .content .ulist > ul > li:last-child > :last-child, .s=
idebarblock > .content .qlist > ol > li:last-child > :last-child { margin-b=
ottom: 0px; }

.literalblock pre, .listingblock > .content > pre { border-radius: 4px; ove=
rflow-wrap: break-word; overflow-x: auto; padding: 1em; font-size: 0.8125em=
; }

@media screen and (min-width: 768px) {
  .literalblock pre, .listingblock > .content > pre { font-size: 0.90625em;=
 }
}

@media screen and (min-width: 1280px) {
  .literalblock pre, .listingblock > .content > pre { font-size: 1em; }
}

.literalblock pre, .listingblock > .content > pre:not(.highlight), .listing=
block > .content > pre[class=3D"highlight"], .listingblock > .content > pre=
[class^=3D"highlight "] { background: rgb(247, 247, 248); }

.literalblock.output pre { color: rgb(247, 247, 248); background: rgba(0, 0=
, 0, 0.9); }

.listingblock > .content { position: relative; }

.listingblock code[data-lang]::before { display: none; content: attr(data-l=
ang); position: absolute; font-size: 0.75em; top: 0.425rem; right: 0.5rem; =
line-height: 1; text-transform: uppercase; color: inherit; opacity: 0.5; }

.listingblock:hover code[data-lang]::before { display: block; }

.listingblock.terminal pre .command::before { content: attr(data-prompt); p=
adding-right: 0.5em; color: inherit; opacity: 0.5; }

.listingblock.terminal pre .command:not([data-prompt])::before { content: "=
$"; }

.listingblock pre.highlightjs { padding: 0px; }

.listingblock pre.highlightjs > code { padding: 1em; border-radius: 4px; }

.listingblock pre.prettyprint { border-width: 0px; }

.prettyprint { background: rgb(247, 247, 248); }

pre.prettyprint .linenums { line-height: 1.45; margin-left: 2em; }

pre.prettyprint li { background: none; list-style-type: inherit; padding-le=
ft: 0px; }

pre.prettyprint li code[data-lang]::before { opacity: 1; }

pre.prettyprint li:not(:first-child) code[data-lang]::before { display: non=
e; }

table.linenotable { border-collapse: separate; border: 0px; margin-bottom: =
0px; background: none; }

table.linenotable td[class] { color: inherit; vertical-align: top; padding:=
 0px; line-height: inherit; white-space: normal; }

table.linenotable td.code { padding-left: 0.75em; }

table.linenotable td.linenos { border-right: 1px solid currentcolor; opacit=
y: 0.35; padding-right: 0.5em; }

pre.pygments .lineno { border-right: 1px solid currentcolor; opacity: 0.35;=
 display: inline-block; margin-right: 0.75em; }

pre.pygments .lineno::before { content: ""; margin-right: -0.125em; }

.quoteblock { margin: 0px 1em 1.25em 1.5em; display: table; }

.quoteblock:not(.excerpt) > .title { margin-left: -1.5em; margin-bottom: 0.=
75em; }

.quoteblock blockquote, .quoteblock p { color: rgba(0, 0, 0, 0.85); font-si=
ze: 1.15rem; line-height: 1.75; word-spacing: 0.1em; letter-spacing: 0px; f=
ont-style: italic; text-align: justify; }

.quoteblock blockquote { margin: 0px; padding: 0px; border: 0px; }

.quoteblock blockquote::before { content: "=E2=80=9C"; float: left; font-si=
ze: 2.75em; font-weight: bold; line-height: 0.6em; margin-left: -0.6em; col=
or: rgb(122, 37, 24); text-shadow: rgba(0, 0, 0, 0.1) 0px 1px 2px; }

.quoteblock blockquote > .paragraph:last-child p { margin-bottom: 0px; }

.quoteblock .attribution { margin-top: 0.75em; margin-right: 0.5ex; text-al=
ign: right; }

.verseblock { margin: 0px 1em 1.25em; }

.verseblock pre { font-family: "Open Sans", "DejaVu Sans", sans; font-size:=
 1.15rem; color: rgba(0, 0, 0, 0.85); font-weight: 300; text-rendering: opt=
imizelegibility; }

.verseblock pre strong { font-weight: 400; }

.verseblock .attribution { margin-top: 1.25rem; margin-left: 0.5ex; }

.quoteblock .attribution, .verseblock .attribution { font-size: 0.9375em; l=
ine-height: 1.45; font-style: italic; }

.quoteblock .attribution br, .verseblock .attribution br { display: none; }

.quoteblock .attribution cite, .verseblock .attribution cite { display: blo=
ck; letter-spacing: -0.025em; color: rgba(0, 0, 0, 0.6); }

.quoteblock.abstract blockquote::before, .quoteblock.excerpt blockquote::be=
fore, .quoteblock .quoteblock blockquote::before { display: none; }

.quoteblock.abstract blockquote, .quoteblock.abstract p, .quoteblock.excerp=
t blockquote, .quoteblock.excerpt p, .quoteblock .quoteblock blockquote, .q=
uoteblock .quoteblock p { line-height: 1.6; word-spacing: 0px; }

.quoteblock.abstract { margin: 0px 1em 1.25em; display: block; }

.quoteblock.abstract > .title { margin: 0px 0px 0.375em; font-size: 1.15em;=
 text-align: center; }

.quoteblock.excerpt > blockquote, .quoteblock .quoteblock { padding: 0px 0p=
x 0.25em 1em; border-left: 0.25em solid rgb(221, 221, 223); }

.quoteblock.excerpt, .quoteblock .quoteblock { margin-left: 0px; }

.quoteblock.excerpt blockquote, .quoteblock.excerpt p, .quoteblock .quotebl=
ock blockquote, .quoteblock .quoteblock p { color: inherit; font-size: 1.06=
25rem; }

.quoteblock.excerpt .attribution, .quoteblock .quoteblock .attribution { co=
lor: inherit; text-align: left; margin-right: 0px; }

table.tableblock { max-width: 100%; border-collapse: separate; }

p.tableblock:last-child { margin-bottom: 0px; }

td.tableblock > .content > :last-child { margin-bottom: -1.25em; }

td.tableblock > .content > :last-child.sidebarblock { margin-bottom: 0px; }

table.tableblock, th.tableblock, td.tableblock { border: 0px solid rgb(222,=
 222, 222); }

table.grid-all > thead > tr > .tableblock, table.grid-all > tbody > tr > .t=
ableblock { border-width: 0px 1px 1px 0px; }

table.grid-all > tfoot > tr > .tableblock { border-width: 1px 1px 0px 0px; =
}

table.grid-cols > * > tr > .tableblock { border-width: 0px 1px 0px 0px; }

table.grid-rows > thead > tr > .tableblock, table.grid-rows > tbody > tr > =
.tableblock { border-width: 0px 0px 1px; }

table.grid-rows > tfoot > tr > .tableblock { border-width: 1px 0px 0px; }

table.grid-all > * > tr > .tableblock:last-child, table.grid-cols > * > tr =
> .tableblock:last-child { border-right-width: 0px; }

table.grid-all > tbody > tr:last-child > .tableblock, table.grid-all > thea=
d:last-child > tr > .tableblock, table.grid-rows > tbody > tr:last-child > =
.tableblock, table.grid-rows > thead:last-child > tr > .tableblock { border=
-bottom-width: 0px; }

table.frame-all { border-width: 1px; }

table.frame-sides { border-width: 0px 1px; }

table.frame-topbot, table.frame-ends { border-width: 1px 0px; }

table.stripes-all tr, table.stripes-odd tr:nth-of-type(2n+1), table.stripes=
-even tr:nth-of-type(2n), table.stripes-hover tr:hover { background: rgb(24=
8, 248, 247); }

th.halign-left, td.halign-left { text-align: left; }

th.halign-right, td.halign-right { text-align: right; }

th.halign-center, td.halign-center { text-align: center; }

th.valign-top, td.valign-top { vertical-align: top; }

th.valign-bottom, td.valign-bottom { vertical-align: bottom; }

th.valign-middle, td.valign-middle { vertical-align: middle; }

table thead th, table tfoot th { font-weight: bold; }

tbody tr th { display: table-cell; line-height: 1.6; background: rgb(247, 2=
48, 247); }

tbody tr th, tbody tr th p, tfoot tr th, tfoot tr th p { color: rgba(0, 0, =
0, 0.8); font-weight: bold; }

p.tableblock > code:only-child { background: none; padding: 0px; }

p.tableblock { font-size: 1em; }

ol { margin-left: 1.75em; }

ul li ol { margin-left: 1.5em; }

dl dd { margin-left: 1.125em; }

dl dd:last-child, dl dd:last-child > :last-child { margin-bottom: 0px; }

ol > li p, ul > li p, ul dd, ol dd, .olist .olist, .ulist .ulist, .ulist .o=
list, .olist .ulist { margin-bottom: 0.625em; }

ul.checklist, ul.none, ol.none, ul.no-bullet, ol.no-bullet, ol.unnumbered, =
ul.unstyled, ol.unstyled { list-style-type: none; }

ul.no-bullet, ol.no-bullet, ol.unnumbered { margin-left: 0.625em; }

ul.unstyled, ol.unstyled { margin-left: 0px; }

ul.checklist { margin-left: 0.625em; }

ul.checklist li > p:first-child > .fa-square-o:first-child, ul.checklist li=
 > p:first-child > .fa-check-square-o:first-child { width: 1.25em; font-siz=
e: 0.8em; position: relative; bottom: 0.125em; }

ul.checklist li > p:first-child > input[type=3D"checkbox"]:first-child { ma=
rgin-right: 0.25em; }

ul.inline { display: flex; flex-flow: row wrap; list-style: none; margin: 0=
px 0px 0.625em -1.25em; }

ul.inline > li { margin-left: 1.25em; }

.unstyled dl dt { font-weight: 400; font-style: normal; }

ol.arabic { list-style-type: decimal; }

ol.decimal { list-style-type: decimal-leading-zero; }

ol.loweralpha { list-style-type: lower-alpha; }

ol.upperalpha { list-style-type: upper-alpha; }

ol.lowerroman { list-style-type: lower-roman; }

ol.upperroman { list-style-type: upper-roman; }

ol.lowergreek { list-style-type: lower-greek; }

.hdlist > table, .colist > table { border: 0px; background: none; }

.hdlist > table > tbody > tr, .colist > table > tbody > tr { background: no=
ne; }

td.hdlist1, td.hdlist2 { vertical-align: top; padding: 0px 0.625em; }

td.hdlist1 { font-weight: bold; padding-bottom: 1.25em; }

.literalblock + .colist, .listingblock + .colist { margin-top: -0.5em; }

.colist td:not([class]):first-child { padding: 0.4em 0.75em 0px; line-heigh=
t: 1; vertical-align: top; }

.colist td:not([class]):first-child img { max-width: none; }

.colist td:not([class]):last-child { padding: 0.25em 0px; }

.thumb, .th { line-height: 0; display: inline-block; border: 4px solid rgb(=
255, 255, 255); box-shadow: rgb(221, 221, 221) 0px 0px 0px 1px; }

.imageblock.left { margin: 0.25em 0.625em 1.25em 0px; }

.imageblock.right { margin: 0.25em 0px 1.25em 0.625em; }

.imageblock > .title { margin-bottom: 0px; }

.imageblock.thumb, .imageblock.th { border-width: 6px; }

.imageblock.thumb > .title, .imageblock.th > .title { padding: 0px 0.125em;=
 }

.image.left, .image.right { margin-top: 0.25em; margin-bottom: 0.25em; disp=
lay: inline-block; line-height: 0; }

.image.left { margin-right: 0.625em; }

.image.right { margin-left: 0.625em; }

a.image { text-decoration: none; display: inline-block; }

a.image object { pointer-events: none; }

sup.footnote, sup.footnoteref { font-size: 0.875em; position: static; verti=
cal-align: super; }

sup.footnote a, sup.footnoteref a { text-decoration: none; }

sup.footnote a:active, sup.footnoteref a:active { text-decoration: underlin=
e; }

#footnotes { padding-top: 0.75em; padding-bottom: 0.75em; margin-bottom: 0.=
625em; }

#footnotes hr { width: 20%; min-width: 6.25em; margin: -0.25em 0px 0.75em; =
border-width: 1px 0px 0px; }

#footnotes .footnote { padding: 0px 0.375em 0px 0.225em; line-height: 1.333=
4; font-size: 0.875em; margin-left: 1.2em; margin-bottom: 0.2em; }

#footnotes .footnote a:first-of-type { font-weight: bold; text-decoration: =
none; margin-left: -1.05em; }

#footnotes .footnote:last-of-type { margin-bottom: 0px; }

#content #footnotes { margin-top: -0.625em; margin-bottom: 0px; padding: 0.=
75em 0px; }

.gist .file-data > table { border: 0px; background: rgb(255, 255, 255); wid=
th: 100%; margin-bottom: 0px; }

.gist .file-data > table td.line-data { width: 99%; }

div.unbreakable { break-inside: avoid; }

.big { font-size: larger; }

.small { font-size: smaller; }

.underline { text-decoration: underline; }

.overline { text-decoration: overline; }

.line-through { text-decoration: line-through; }

.aqua { color: rgb(0, 191, 191); }

.aqua-background { background: rgb(0, 250, 250); }

.black { color: rgb(0, 0, 0); }

.black-background { background: rgb(0, 0, 0); }

.blue { color: rgb(0, 0, 191); }

.blue-background { background: rgb(0, 0, 250); }

.fuchsia { color: rgb(191, 0, 191); }

.fuchsia-background { background: rgb(250, 0, 250); }

.gray { color: rgb(96, 96, 96); }

.gray-background { background: rgb(125, 125, 125); }

.green { color: rgb(0, 96, 0); }

.green-background { background: rgb(0, 125, 0); }

.lime { color: rgb(0, 191, 0); }

.lime-background { background: rgb(0, 250, 0); }

.maroon { color: rgb(96, 0, 0); }

.maroon-background { background: rgb(125, 0, 0); }

.navy { color: rgb(0, 0, 96); }

.navy-background { background: rgb(0, 0, 125); }

.olive { color: rgb(96, 96, 0); }

.olive-background { background: rgb(125, 125, 0); }

.purple { color: rgb(96, 0, 96); }

.purple-background { background: rgb(125, 0, 125); }

.red { color: rgb(191, 0, 0); }

.red-background { background: rgb(250, 0, 0); }

.silver { color: rgb(144, 144, 144); }

.silver-background { background: rgb(188, 188, 188); }

.teal { color: rgb(0, 96, 96); }

.teal-background { background: rgb(0, 125, 125); }

.white { color: rgb(191, 191, 191); }

.white-background { background: rgb(250, 250, 250); }

.yellow { color: rgb(191, 191, 0); }

.yellow-background { background: rgb(250, 250, 0); }

span.icon > .fa { cursor: default; }

a span.icon > .fa { cursor: inherit; }

.admonitionblock td.icon [class^=3D"fa icon-"] { font-size: 2.5em; text-sha=
dow: rgba(0, 0, 0, 0.5) 1px 1px 2px; cursor: default; }

.admonitionblock td.icon .icon-note::before { content: "=EF=81=9A"; color: =
rgb(25, 64, 124); }

.admonitionblock td.icon .icon-tip::before { content: "=EF=83=AB"; text-sha=
dow: rgba(155, 155, 0, 0.8) 1px 1px 2px; color: rgb(17, 17, 17); }

.admonitionblock td.icon .icon-warning::before { content: "=EF=81=B1"; colo=
r: rgb(191, 105, 0); }

.admonitionblock td.icon .icon-caution::before { content: "=EF=81=AD"; colo=
r: rgb(191, 52, 0); }

.admonitionblock td.icon .icon-important::before { content: "=EF=81=AA"; co=
lor: rgb(191, 0, 0); }

.conum[data-value] { display: inline-block; background: rgba(0, 0, 0, 0.8);=
 border-radius: 100px; text-align: center; font-size: 0.75em; width: 1.67em=
; height: 1.67em; line-height: 1.67em; font-family: "Open Sans", "DejaVu Sa=
ns", sans-serif; font-style: normal; font-weight: bold; color: rgb(255, 255=
, 255) !important; }

.conum[data-value] * { color: rgb(255, 255, 255) !important; }

.conum[data-value] + b { display: none; }

.conum[data-value]::after { content: attr(data-value); }

pre .conum[data-value] { position: relative; top: -0.125em; }

b.conum * { color: inherit !important; }

.conum:not([data-value]):empty { display: none; }

dt, th.tableblock, td.content, div.footnote { text-rendering: optimizelegib=
ility; }

h1, h2, p, td.content, span.alt { letter-spacing: -0.01em; }

p strong, td.content strong, div.footnote strong { letter-spacing: -0.005em=
; }

p, blockquote, dt, td.content, span.alt { font-size: 1.0625rem; }

p { margin-bottom: 1.25rem; }

.sidebarblock p, .sidebarblock dt, .sidebarblock td.content, p.tableblock {=
 font-size: 1em; }

.exampleblock > .content { background: rgb(255, 254, 247); border-color: rg=
b(224, 224, 220); box-shadow: rgb(224, 224, 220) 0px 1px 4px; }

.print-only { display: none !important; }

@page { margin: 1.25cm 0.75cm; }

@media print {
  * { box-shadow: none !important; text-shadow: none !important; }
  html { font-size: 80%; }
  a { color: inherit !important; text-decoration: underline !important; }
  a.bare, a[href^=3D"#"], a[href^=3D"mailto:"] { text-decoration: none !imp=
ortant; }
  a[href^=3D"http:"]:not(.bare)::after, a[href^=3D"https:"]:not(.bare)::aft=
er { content: "(" attr(href) ")"; display: inline-block; font-size: 0.875em=
; padding-left: 0.25em; }
  abbr[title]::after { content: " (" attr(title) ")"; }
  pre, blockquote, tr, img, object, svg { break-inside: avoid; }
  thead { display: table-header-group; }
  svg { max-width: 100%; }
  p, blockquote, dt, td.content { font-size: 1em; orphans: 3; widows: 3; }
  h2, h3, #toctitle, .sidebarblock > .content > .title { break-after: avoid=
; }
  #toc, .sidebarblock, .exampleblock > .content { background: none !importa=
nt; }
  #toc { border-bottom: 1px solid rgb(221, 221, 223) !important; padding-bo=
ttom: 0px !important; }
  body.book #header { text-align: center; }
  body.book #header > h1:first-child { margin: 2.5em 0px 1em; border: 0px !=
important; }
  body.book #header .details { display: block; border: 0px !important; padd=
ing: 0px !important; }
  body.book #header .details span:first-child { margin-left: 0px !important=
; }
  body.book #header .details br { display: block; }
  body.book #header .details br + span::before { content: none !important; =
}
  body.book #toc { border: 0px !important; text-align: left !important; pad=
ding: 0px !important; margin: 0px !important; }
  body.book #toc, body.book #preamble, body.book h1.sect0, body.book .sect1=
 > h2 { break-before: page; }
  .listingblock code[data-lang]::before { display: block; }
  #footer { padding: 0px 0.9375em; }
  .hide-on-print { display: none !important; }
  .print-only { display: block !important; }
  .hide-for-print { display: none !important; }
  .show-for-print { display: inherit !important; }
}

@media print, amzn-kf8 {
  #header > h1:first-child { margin-top: 1.25rem; }
  .sect1 { padding: 0px !important; }
  .sect1 + .sect1 { border: 0px; }
  #footer { background: none; }
  #footer-text { color: rgba(0, 0, 0, 0.6); font-size: 0.9em; }
}

@media amzn-kf8 {
  #header, #content, #footnotes, #footer { padding: 0px; }
}
------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-934ad147-a641-4d6a-a2f2-c23edef7d774@mhtml.blink

@charset "utf-8";

a { background-image: none; background-color: initial; }

a:focus { outline-color: initial; }

a:active, a:hover { outline-color: initial; }

abbr[title] { border-bottom-color: initial; }

mark { background-image: initial; background-color: rgb(153, 153, 0); color=
: rgb(232, 230, 227); }

img { border-color: initial; }

fieldset { border-color: rgb(66, 71, 74); }

legend { border-color: initial; }

body { background-image: initial; background-color: rgb(24, 26, 27); color:=
 rgba(232, 230, 227, 0.8); }

.subheader, .admonitionblock td.content > .title, .audioblock > .title, .ex=
ampleblock > .title, .imageblock > .title, .listingblock > .title, .literal=
block > .title, .stemblock > .title, .openblock > .title, .paragraph > .tit=
le, .quoteblock > .title, table.tableblock > .title, .verseblock > .title, =
.videoblock > .title, .dlist > .title, .olist > .title, .ulist > .title, .q=
list > .title, .hdlist > .title { color: rgb(230, 141, 127); }

a { color: rgb(114, 172, 227); text-decoration-color: initial; }

a:hover, a:focus { color: rgb(127, 180, 229); }

a img { border-color: initial; }

h1, h2, h3, #toctitle, .sidebarblock > .content > .title, h4, h5, h6 { colo=
r: rgb(221, 101, 82); }

h1 small, h2 small, h3 small, #toctitle small, .sidebarblock > .content > .=
title small, h4 small, h5 small, h6 small { color: rgb(231, 147, 134); }

hr { border-color: rgb(57, 62, 64); }

code { color: rgba(232, 230, 227, 0.9); }

ul.square li ul, ul.circle li ul, ul.disc li ul { list-style-image: inherit=
; }

abbr, acronym { color: rgba(232, 230, 227, 0.8); border-bottom-color: rgb(5=
8, 62, 65); }

blockquote { border-left-color: rgb(58, 62, 65); }

blockquote cite { color: rgba(232, 230, 227, 0.6); }

blockquote cite a, blockquote cite a:visited { color: rgba(232, 230, 227, 0=
.6); }

blockquote, blockquote p { color: rgba(232, 230, 227, 0.85); }

table { background-image: initial; background-color: rgb(24, 26, 27); borde=
r-color: rgb(57, 62, 64); }

table thead, table tfoot { background-image: initial; background-color: rgb=
(28, 31, 32); }

table thead tr th, table thead tr td, table tfoot tr th, table tfoot tr td =
{ color: rgba(232, 230, 227, 0.8); }

table tr th, table tr td { color: rgba(232, 230, 227, 0.8); }

table tr.even, table tr.alt { background-image: initial; background-color: =
rgb(28, 31, 32); }

:not(pre):not([class^=3D"L"]) > code { background-image: initial; backgroun=
d-color: rgb(28, 31, 32); }

pre { color: rgba(232, 230, 227, 0.9); }

pre code, pre pre { color: inherit; }

.keyseq { color: rgba(200, 195, 188, 0.8); }

kbd { color: rgba(232, 230, 227, 0.8); background-image: initial; backgroun=
d-color: rgb(29, 31, 32); border-color: rgb(62, 68, 70); box-shadow: rgba(0=
, 0, 0, 0.2) 0px 1px 0px, rgb(24, 26, 27) 0px 0px 0px 0.1em inset; }

.menuseq, .menuref { color: rgb(232, 230, 227); }

p a > code:hover { color: rgba(232, 230, 227, 0.9); }

#header > h1:first-child { color: rgba(232, 230, 227, 0.85); }

#header > h1:first-child + #toc { border-top-color: rgb(57, 62, 64); }

#header > h1:only-child, body.toc2 #header > h1:nth-last-child(2) { border-=
bottom-color: rgb(57, 62, 64); }

#header .details { border-bottom-color: rgb(57, 62, 64); color: rgba(232, 2=
30, 227, 0.6); }

#header .details span.email a { color: rgba(232, 230, 227, 0.85); }

#header .details br + span.author::before { color: rgba(232, 230, 227, 0.85=
); }

#content > h1:first-child:not([class]) { color: rgba(232, 230, 227, 0.85); =
border-bottom-color: rgb(57, 62, 64); }

#toc { border-bottom-color: rgb(54, 59, 61); }

#toc a { text-decoration-color: initial; }

#toc a:active { text-decoration-color: initial; }

#toctitle { color: rgb(230, 141, 127); }

@media screen and (min-width: 768px) {
  #toc.toc2 { background-image: initial; background-color: rgb(28, 31, 32);=
 border-right-color: rgb(54, 59, 61); }
  body.toc2.toc-right #toc.toc2 { border-left-color: rgb(54, 59, 61); }
}

#content #toc { border-color: rgb(57, 62, 64); background-image: initial; b=
ackground-color: rgb(28, 31, 32); }

#footer { background-image: initial; background-color: rgba(0, 0, 0, 0.8); =
}

#footer-text { color: rgba(232, 230, 227, 0.8); }

.sect1 + .sect1 { border-top-color: rgb(54, 59, 61); }

#content h1 > a.anchor, h2 > a.anchor, h3 > a.anchor, #toctitle > a.anchor,=
 .sidebarblock > .content > .title > a.anchor, h4 > a.anchor, h5 > a.anchor=
, h6 > a.anchor { text-decoration-color: initial !important; }

#content h1 > a.link, h2 > a.link, h3 > a.link, #toctitle > a.link, .sideba=
rblock > .content > .title > a.link, h4 > a.link, h5 > a.link, h6 > a.link =
{ color: rgb(221, 101, 82); text-decoration-color: initial; }

#content h1 > a.link:hover, h2 > a.link:hover, h3 > a.link:hover, #toctitle=
 > a.link:hover, .sidebarblock > .content > .title > a.link:hover, h4 > a.l=
ink:hover, h5 > a.link:hover, h6 > a.link:hover { color: rgb(223, 113, 97);=
 }

details > summary:first-of-type { outline-color: initial; }

.paragraph.lead > p, #preamble > .sectionbody > [class=3D"paragraph"]:first=
-of-type p { color: rgba(232, 230, 227, 0.85); }

.admonitionblock > table { border-color: initial; background-image: none; b=
ackground-color: initial; }

.admonitionblock > table td.content { border-left-color: rgb(57, 62, 64); c=
olor: rgba(232, 230, 227, 0.6); }

.exampleblock > .content { border-color: rgb(55, 60, 62); background-image:=
 initial; background-color: rgb(24, 26, 27); }

.sidebarblock { border-color: rgb(59, 64, 66); background-image: initial; b=
ackground-color: rgb(31, 34, 35); }

.sidebarblock > .content > .title { color: rgb(230, 141, 127); }

.literalblock pre, .listingblock > .content > pre:not(.highlight), .listing=
block > .content > pre[class=3D"highlight"], .listingblock > .content > pre=
[class^=3D"highlight "] { background-image: initial; background-color: rgb(=
28, 31, 32); }

.literalblock.output pre { color: rgb(227, 225, 221); background-image: ini=
tial; background-color: rgba(0, 0, 0, 0.9); }

.listingblock code[data-lang]::before { color: inherit; }

.listingblock.terminal pre .command::before { color: inherit; }

.prettyprint { background-image: initial; background-color: rgb(28, 31, 32)=
; }

pre.prettyprint li { background-image: none; background-color: initial; }

table.linenotable { border-color: initial; background-image: none; backgrou=
nd-color: initial; }

table.linenotable td[class] { color: inherit; }

table.linenotable td.linenos { border-right-color: currentcolor; }

pre.pygments .lineno { border-right-color: currentcolor; }

.quoteblock blockquote, .quoteblock p { color: rgba(232, 230, 227, 0.85); }

.quoteblock blockquote { border-color: initial; }

.quoteblock blockquote::before { color: rgb(230, 141, 127); text-shadow: rg=
ba(0, 0, 0, 0.1) 0px 1px 2px; }

.verseblock pre { color: rgba(232, 230, 227, 0.85); }

.quoteblock .attribution cite, .verseblock .attribution cite { color: rgba(=
232, 230, 227, 0.6); }

.quoteblock.excerpt > blockquote, .quoteblock .quoteblock { border-left-col=
or: rgb(57, 62, 64); }

.quoteblock.excerpt blockquote, .quoteblock.excerpt p, .quoteblock .quotebl=
ock blockquote, .quoteblock .quoteblock p { color: inherit; }

.quoteblock.excerpt .attribution, .quoteblock .quoteblock .attribution { co=
lor: inherit; }

table.tableblock, th.tableblock, td.tableblock { border-color: rgb(57, 62, =
64); }

table.stripes-all tr, table.stripes-odd tr:nth-of-type(2n+1), table.stripes=
-even tr:nth-of-type(2n), table.stripes-hover tr:hover { background-image: =
initial; background-color: rgb(28, 31, 32); }

tbody tr th { background-image: initial; background-color: rgb(28, 31, 32);=
 }

tbody tr th, tbody tr th p, tfoot tr th, tfoot tr th p { color: rgba(232, 2=
30, 227, 0.8); }

p.tableblock > code:only-child { background-image: none; background-color: =
initial; }

ul.inline { list-style-image: initial; }

.hdlist > table, .colist > table { border-color: initial; background-image:=
 none; background-color: initial; }

.hdlist > table > tbody > tr, .colist > table > tbody > tr { background-ima=
ge: none; background-color: initial; }

.thumb, .th { border-color: rgb(48, 52, 54); box-shadow: rgb(43, 47, 49) 0p=
x 0px 0px 1px; }

a.image { text-decoration-color: initial; }

sup.footnote a, sup.footnoteref a { text-decoration-color: initial; }

sup.footnote a:active, sup.footnoteref a:active { text-decoration-color: in=
itial; }

#footnotes .footnote a:first-of-type { text-decoration-color: initial; }

.gist .file-data > table { border-color: initial; background-image: initial=
; background-color: rgb(24, 26, 27); }

.underline { text-decoration-color: initial; }

.overline { text-decoration-color: initial; }

.line-through { text-decoration-color: initial; }

.aqua { color: rgb(70, 255, 255); }

.aqua-background { background-image: initial; background-color: rgb(0, 200,=
 200); }

.black { color: rgb(232, 230, 227); }

.black-background { background-image: initial; background-color: rgb(0, 0, =
0); }

.blue { color: rgb(89, 150, 255); }

.blue-background { background-image: initial; background-color: rgb(0, 0, 2=
00); }

.fuchsia { color: rgb(255, 70, 255); }

.fuchsia-background { background-image: initial; background-color: rgb(200,=
 0, 200); }

.gray { color: rgb(171, 164, 153); }

.gray-background { background-image: initial; background-color: rgb(94, 102=
, 106); }

.green { color: rgb(202, 197, 190); }

.green-background { background-image: initial; background-color: rgb(0, 100=
, 0); }

.lime { color: rgb(70, 255, 70); }

.lime-background { background-image: initial; background-color: rgb(0, 200,=
 0); }

.maroon { color: rgb(202, 197, 190); }

.maroon-background { background-image: initial; background-color: rgb(100, =
0, 0); }

.navy { color: rgb(202, 197, 190); }

.navy-background { background-image: initial; background-color: rgb(0, 0, 1=
00); }

.olive { color: rgb(202, 197, 190); }

.olive-background { background-image: initial; background-color: rgb(100, 1=
00, 0); }

.purple { color: rgb(202, 197, 190); }

.purple-background { background-image: initial; background-color: rgb(100, =
0, 100); }

.red { color: rgb(255, 70, 70); }

.red-background { background-image: initial; background-color: rgb(200, 0, =
0); }

.silver { color: rgb(162, 154, 142); }

.silver-background { background-image: initial; background-color: rgb(62, 6=
7, 70); }

.teal { color: rgb(202, 197, 190); }

.teal-background { background-image: initial; background-color: rgb(0, 100,=
 100); }

.white { color: rgb(192, 186, 178); }

.white-background { background-image: initial; background-color: rgb(27, 29=
, 30); }

.yellow { color: rgb(255, 255, 70); }

.yellow-background { background-image: initial; background-color: rgb(200, =
200, 0); }

.admonitionblock td.icon [class^=3D"fa icon-"] { text-shadow: rgba(0, 0, 0,=
 0.5) 1px 1px 2px; }

.admonitionblock td.icon .icon-note::before { color: rgb(138, 186, 231); }

.admonitionblock td.icon .icon-tip::before { text-shadow: rgba(124, 124, 0,=
 0.8) 1px 1px 2px; color: rgb(221, 218, 214); }

.admonitionblock td.icon .icon-warning::before { color: rgb(255, 172, 70); =
}

.admonitionblock td.icon .icon-caution::before { color: rgb(255, 121, 70); =
}

.admonitionblock td.icon .icon-important::before { color: rgb(255, 70, 70);=
 }

.conum[data-value] { background-image: initial; background-color: rgba(0, 0=
, 0, 0.8); color: rgb(232, 230, 227) !important; }

.conum[data-value] * { color: rgb(232, 230, 227) !important; }

b.conum * { color: inherit !important; }

.exampleblock > .content { background-image: initial; background-color: rgb=
(42, 37, 0); border-color: rgb(57, 62, 64); box-shadow: rgb(43, 46, 48) 0px=
 1px 4px; }
------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-639e7612-30b2-4ce3-af1e-e958cff263f2@mhtml.blink

@charset "utf-8";

.fa-border { border-color: rgb(53, 57, 59); }

.fa-inverse { color: rgb(232, 230, 227); }

.sr-only { border-color: initial; }
------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-7af85a82-746b-42ff-b784-67cd4ee0db39@mhtml.blink

@charset "utf-8";

#tocbot a.toc-link.node-name--H1 { font-style: italic; }

@media screen {
  #tocbot > ul.toc-list { margin-bottom: 0.5em; margin-left: 0.125em; }
  #tocbot ul.sectlevel0, #tocbot a.toc-link.node-name--H1 + ul { padding-le=
ft: 0px; }
  #tocbot a.toc-link { height: 100%; }
  .is-collapsible { max-height: 3000px; overflow: hidden; }
  .is-collapsed { max-height: 0px; }
  .is-active-link { font-weight: 700; }
}

@media print {
  #tocbot a.toc-link.node-name--H4 { display: none; }
}
------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-54770805-4691-4cc6-98c3-f0b9abe208ba@mhtml.blink

@charset "utf-8";
=0A
------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-2c7d003a-1176-4267-befd-5372ded08650@mhtml.blink

@charset "utf-8";

.vimvixen-hint { background-color: rgb(123, 83, 0) !important; border-color=
: rgb(216, 176, 19) !important; color: rgb(243, 232, 200) !important; }

::placeholder { opacity: 0.5 !important; }

#edge-translate-panel-body, .MuiTypography-body1 { color: var(--darkreader-=
neutral-text)  !important; }

gr-main-header { background-color: rgb(15, 58, 72) !important; }

.tou-z65h9k, .tou-mignzq, .tou-1b6i2ox, .tou-lnqlqk { background-color: var=
(--darkreader-neutral-background)  !important; }

.tou-75mvi { background-color: rgb(3, 32, 41) !important; }

.tou-ta9e87, .tou-1w3fhi0, .tou-1b8t2us, .tou-py7lfi, .tou-1lpmd9d, .tou-1f=
rrtv8, .tou-17ezmgn { background-color: rgb(10, 10, 10) !important; }

.tou-uknfeu { background-color: rgb(35, 22, 3) !important; }

.tou-6i3zyv { background-color: rgb(25, 87, 108) !important; }

embed[type=3D"application/pdf"][src=3D"about:blank"] { filter: invert(100%)=
 contrast(90%); }
------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-fbc75ea6-a1c3-4781-aaa9-e6d8d18ccab2@mhtml.blink

@charset "utf-8";

pre.rouge table td { padding: 5px; }

pre.rouge table pre { margin: 0px; }

pre.rouge .cm { color: rgb(153, 153, 136); font-style: italic; }

pre.rouge .cp { color: rgb(153, 153, 153); font-weight: bold; }

pre.rouge .c1 { color: rgb(153, 153, 136); font-style: italic; }

pre.rouge .cs { color: rgb(153, 153, 153); font-weight: bold; font-style: i=
talic; }

pre.rouge .c, pre.rouge .ch, pre.rouge .cd, pre.rouge .cpf { color: rgb(153=
, 153, 136); font-style: italic; }

pre.rouge .err { color: rgb(166, 23, 23); background-color: rgb(227, 210, 2=
10); }

pre.rouge .gd { color: rgb(0, 0, 0); background-color: rgb(255, 221, 221); =
}

pre.rouge .ge { color: rgb(0, 0, 0); font-style: italic; }

pre.rouge .gr { color: rgb(170, 0, 0); }

pre.rouge .gh { color: rgb(153, 153, 153); }

pre.rouge .gi { color: rgb(0, 0, 0); background-color: rgb(221, 255, 221); =
}

pre.rouge .go { color: rgb(136, 136, 136); }

pre.rouge .gp { color: rgb(85, 85, 85); }

pre.rouge .gs { font-weight: bold; }

pre.rouge .gu { color: rgb(170, 170, 170); }

pre.rouge .gt { color: rgb(170, 0, 0); }

pre.rouge .kc { color: rgb(0, 0, 0); font-weight: bold; }

pre.rouge .kd { color: rgb(0, 0, 0); font-weight: bold; }

pre.rouge .kn { color: rgb(0, 0, 0); font-weight: bold; }

pre.rouge .kp { color: rgb(0, 0, 0); font-weight: bold; }

pre.rouge .kr { color: rgb(0, 0, 0); font-weight: bold; }

pre.rouge .kt { color: rgb(68, 85, 136); font-weight: bold; }

pre.rouge .k, pre.rouge .kv { color: rgb(0, 0, 0); font-weight: bold; }

pre.rouge .mf { color: rgb(0, 153, 153); }

pre.rouge .mh { color: rgb(0, 153, 153); }

pre.rouge .il { color: rgb(0, 153, 153); }

pre.rouge .mi { color: rgb(0, 153, 153); }

pre.rouge .mo { color: rgb(0, 153, 153); }

pre.rouge .m, pre.rouge .mb, pre.rouge .mx { color: rgb(0, 153, 153); }

pre.rouge .sb { color: rgb(221, 17, 68); }

pre.rouge .sc { color: rgb(221, 17, 68); }

pre.rouge .sd { color: rgb(221, 17, 68); }

pre.rouge .s2 { color: rgb(221, 17, 68); }

pre.rouge .se { color: rgb(221, 17, 68); }

pre.rouge .sh { color: rgb(221, 17, 68); }

pre.rouge .si { color: rgb(221, 17, 68); }

pre.rouge .sx { color: rgb(221, 17, 68); }

pre.rouge .sr { color: rgb(0, 153, 38); }

pre.rouge .s1 { color: rgb(221, 17, 68); }

pre.rouge .ss { color: rgb(153, 0, 115); }

pre.rouge .s, pre.rouge .sa, pre.rouge .dl { color: rgb(221, 17, 68); }

pre.rouge .na { color: rgb(0, 128, 128); }

pre.rouge .bp { color: rgb(153, 153, 153); }

pre.rouge .nb { color: rgb(0, 134, 179); }

pre.rouge .nc { color: rgb(68, 85, 136); font-weight: bold; }

pre.rouge .no { color: rgb(0, 128, 128); }

pre.rouge .nd { color: rgb(60, 93, 93); font-weight: bold; }

pre.rouge .ni { color: rgb(128, 0, 128); }

pre.rouge .ne { color: rgb(153, 0, 0); font-weight: bold; }

pre.rouge .nf, pre.rouge .fm { color: rgb(153, 0, 0); font-weight: bold; }

pre.rouge .nl { color: rgb(153, 0, 0); font-weight: bold; }

pre.rouge .nn { color: rgb(85, 85, 85); }

pre.rouge .nt { color: rgb(0, 0, 128); }

pre.rouge .vc { color: rgb(0, 128, 128); }

pre.rouge .vg { color: rgb(0, 128, 128); }

pre.rouge .vi { color: rgb(0, 128, 128); }

pre.rouge .nv, pre.rouge .vm { color: rgb(0, 128, 128); }

pre.rouge .ow { color: rgb(0, 0, 0); font-weight: bold; }

pre.rouge .o { color: rgb(0, 0, 0); font-weight: bold; }

pre.rouge .w { color: rgb(187, 187, 187); }

pre.rouge { background-color: rgb(248, 248, 248); }
------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-4fd9c1e9-19a9-4fc4-a965-40a46016046d@mhtml.blink

@charset "utf-8";

pre.rouge .cm { color: rgb(162, 154, 142); }

pre.rouge .cp { color: rgb(168, 160, 149); }

pre.rouge .c1 { color: rgb(162, 154, 142); }

pre.rouge .cs { color: rgb(168, 160, 149); }

pre.rouge .c, pre.rouge .ch, pre.rouge .cd, pre.rouge .cpf { color: rgb(162=
, 154, 142); }

pre.rouge .err { color: rgb(233, 94, 94); background-color: rgb(58, 36, 36)=
; }

pre.rouge .gd { color: rgb(232, 230, 227); background-color: rgb(71, 0, 0);=
 }

pre.rouge .ge { color: rgb(232, 230, 227); }

pre.rouge .gr { color: rgb(255, 85, 85); }

pre.rouge .gh { color: rgb(168, 160, 149); }

pre.rouge .gi { color: rgb(232, 230, 227); background-color: rgb(18, 71, 0)=
; }

pre.rouge .go { color: rgb(157, 148, 136); }

pre.rouge .gp { color: rgb(178, 172, 162); }

pre.rouge .gu { color: rgb(178, 172, 162); }

pre.rouge .gt { color: rgb(255, 85, 85); }

pre.rouge .kc { color: rgb(232, 230, 227); }

pre.rouge .kd { color: rgb(232, 230, 227); }

pre.rouge .kn { color: rgb(232, 230, 227); }

pre.rouge .kp { color: rgb(232, 230, 227); }

pre.rouge .kr { color: rgb(232, 230, 227); }

pre.rouge .kt { color: rgb(139, 166, 197); }

pre.rouge .k, pre.rouge .kv { color: rgb(232, 230, 227); }

pre.rouge .mf { color: rgb(97, 255, 255); }

pre.rouge .mh { color: rgb(97, 255, 255); }

pre.rouge .il { color: rgb(97, 255, 255); }

pre.rouge .mi { color: rgb(97, 255, 255); }

pre.rouge .mo { color: rgb(97, 255, 255); }

pre.rouge .m, pre.rouge .mb, pre.rouge .mx { color: rgb(97, 255, 255); }

pre.rouge .sb { color: rgb(239, 53, 100); }

pre.rouge .sc { color: rgb(239, 53, 100); }

pre.rouge .sd { color: rgb(239, 53, 100); }

pre.rouge .s2 { color: rgb(239, 53, 100); }

pre.rouge .se { color: rgb(239, 53, 100); }

pre.rouge .sh { color: rgb(239, 53, 100); }

pre.rouge .si { color: rgb(239, 53, 100); }

pre.rouge .sx { color: rgb(239, 53, 100); }

pre.rouge .sr { color: rgb(97, 255, 136); }

pre.rouge .s1 { color: rgb(239, 53, 100); }

pre.rouge .ss { color: rgb(255, 97, 216); }

pre.rouge .s, pre.rouge .sa, pre.rouge .dl { color: rgb(239, 53, 100); }

pre.rouge .na { color: rgb(114, 255, 255); }

pre.rouge .bp { color: rgb(168, 160, 149); }

pre.rouge .nb { color: rgb(79, 211, 255); }

pre.rouge .nc { color: rgb(139, 166, 197); }

pre.rouge .no { color: rgb(114, 255, 255); }

pre.rouge .nd { color: rgb(184, 178, 168); }

pre.rouge .ni { color: rgb(255, 114, 255); }

pre.rouge .ne { color: rgb(255, 97, 97); }

pre.rouge .nf, pre.rouge .fm { color: rgb(255, 97, 97); }

pre.rouge .nl { color: rgb(255, 97, 97); }

pre.rouge .nn { color: rgb(178, 172, 162); }

pre.rouge .nt { color: rgb(127, 174, 255); }

pre.rouge .vc { color: rgb(114, 255, 255); }

pre.rouge .vg { color: rgb(114, 255, 255); }

pre.rouge .vi { color: rgb(114, 255, 255); }

pre.rouge .nv, pre.rouge .vm { color: rgb(114, 255, 255); }

pre.rouge .ow { color: rgb(232, 230, 227); }

pre.rouge .o { color: rgb(232, 230, 227); }

pre.rouge .w { color: rgb(189, 183, 175); }

pre.rouge { background-color: rgb(28, 30, 31); }
------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://fonts.googleapis.com/css?family=Open+Sans:300,300italic,400,400italic,600,600italic%7CNoto+Serif:400,400italic,700,700italic%7CDroid+Sans+Mono:400,700

@charset "utf-8";

@font-face { font-family: "Droid Sans Mono"; font-style: normal; font-weigh=
t: 400; src: url("https://fonts.gstatic.com/s/droidsansmono/v20/6NUO8FuJNQ2=
MbkrZ5-J8lKFrp7pRef2r.woff2") format("woff2"); unicode-range: U+0-FF, U+131=
, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U=
+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 40=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Kaw1J5X9T9RW6j9bN=
fFImZzC7TMQ.woff2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C88,=
 U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 40=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Kaw1J5X9T9RW6j9bN=
fFImbjC7TMQ.woff2") format("woff2"); unicode-range: U+301, U+400-45F, U+490=
-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 40=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Kaw1J5X9T9RW6j9bN=
fFImZjC7TMQ.woff2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 40=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Kaw1J5X9T9RW6j9bN=
fFImaTC7TMQ.woff2") format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 40=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Kaw1J5X9T9RW6j9bN=
fFImZTC7TMQ.woff2") format("woff2"); unicode-range: U+102-103, U+110-111, U=
+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 40=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Kaw1J5X9T9RW6j9bN=
fFImZDC7TMQ.woff2") format("woff2"); unicode-range: U+100-24F, U+259, U+1E0=
0-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;=
 }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 40=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Kaw1J5X9T9RW6j9bN=
fFImajC7.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, =
U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191=
, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 70=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Vaw1J5X9T9RW6j9bN=
fFIu0RWufuVMCoY.woff2") format("woff2"); unicode-range: U+460-52F, U+1C80-1=
C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 70=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Vaw1J5X9T9RW6j9bN=
fFIu0RWud-VMCoY.woff2") format("woff2"); unicode-range: U+301, U+400-45F, U=
+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 70=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Vaw1J5X9T9RW6j9bN=
fFIu0RWuf-VMCoY.woff2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 70=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Vaw1J5X9T9RW6j9bN=
fFIu0RWucOVMCoY.woff2") format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 70=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Vaw1J5X9T9RW6j9bN=
fFIu0RWufOVMCoY.woff2") format("woff2"); unicode-range: U+102-103, U+110-11=
1, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 70=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Vaw1J5X9T9RW6j9bN=
fFIu0RWufeVMCoY.woff2") format("woff2"); unicode-range: U+100-24F, U+259, U=
+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A=
7FF; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 70=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Vaw1J5X9T9RW6j9bN=
fFIu0RWuc-VM.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-1=
53, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2122, U+=
2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 40=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Iaw1J5X9T9RW6j9bN=
fFoWaCi_.woff2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C88, U+=
20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 40=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Iaw1J5X9T9RW6j9bN=
fFMWaCi_.woff2") format("woff2"); unicode-range: U+301, U+400-45F, U+490-49=
1, U+4B0-4B1, U+2116; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 40=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Iaw1J5X9T9RW6j9bN=
fFsWaCi_.woff2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 40=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Iaw1J5X9T9RW6j9bN=
fFQWaCi_.woff2") format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 40=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Iaw1J5X9T9RW6j9bN=
fFgWaCi_.woff2") format("woff2"); unicode-range: U+102-103, U+110-111, U+12=
8-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 40=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Iaw1J5X9T9RW6j9bN=
fFkWaCi_.woff2") format("woff2"); unicode-range: U+100-24F, U+259, U+1E00-1=
EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 40=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Iaw1J5X9T9RW6j9bN=
fFcWaA.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+=
2BB-2BC, U+2C6, U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, =
U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 70=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Law1J5X9T9RW6j9bN=
dOwzfRqecf1I.woff2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C88=
, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 70=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Law1J5X9T9RW6j9bN=
dOwzfROecf1I.woff2") format("woff2"); unicode-range: U+301, U+400-45F, U+49=
0-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 70=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Law1J5X9T9RW6j9bN=
dOwzfRuecf1I.woff2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 70=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Law1J5X9T9RW6j9bN=
dOwzfRSecf1I.woff2") format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 70=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Law1J5X9T9RW6j9bN=
dOwzfRiecf1I.woff2") format("woff2"); unicode-range: U+102-103, U+110-111, =
U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 70=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Law1J5X9T9RW6j9bN=
dOwzfRmecf1I.woff2") format("woff2"); unicode-range: U+100-24F, U+259, U+1E=
00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF=
; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 70=
0; src: url("https://fonts.gstatic.com/s/notoserif/v21/ga6Law1J5X9T9RW6j9bN=
dOwzfReecQ.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153=
, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2122, U+21=
91, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 300=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWtE6F15M.woff2") format("woff2"); unic=
ode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E=
-FE2F; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 300=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWvU6F15M.woff2") format("woff2"); unic=
ode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 300=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWtU6F15M.woff2") format("woff2"); unic=
ode-range: U+1F00-1FFF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 300=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWuk6F15M.woff2") format("woff2"); unic=
ode-range: U+370-3FF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 300=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWu06F15M.woff2") format("woff2"); unic=
ode-range: U+590-5FF, U+200C-2010, U+20AA, U+25CC, U+FB1D-FB4F; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 300=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWtk6F15M.woff2") format("woff2"); unic=
ode-range: U+102-103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0=
, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 300=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWt06F15M.woff2") format("woff2"); unic=
ode-range: U+100-24F, U+259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF,=
 U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 300=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWuU6F.woff2") format("woff2"); unicode=
-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+2000-20=
6F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;=
 }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWtE6F15M.woff2") format("woff2"); unic=
ode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E=
-FE2F; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWvU6F15M.woff2") format("woff2"); unic=
ode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWtU6F15M.woff2") format("woff2"); unic=
ode-range: U+1F00-1FFF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWuk6F15M.woff2") format("woff2"); unic=
ode-range: U+370-3FF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWu06F15M.woff2") format("woff2"); unic=
ode-range: U+590-5FF, U+200C-2010, U+20AA, U+25CC, U+FB1D-FB4F; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWtk6F15M.woff2") format("woff2"); unic=
ode-range: U+102-103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0=
, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWt06F15M.woff2") format("woff2"); unic=
ode-range: U+100-24F, U+259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF,=
 U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWuU6F.woff2") format("woff2"); unicode=
-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+2000-20=
6F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;=
 }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 600=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWtE6F15M.woff2") format("woff2"); unic=
ode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E=
-FE2F; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 600=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWvU6F15M.woff2") format("woff2"); unic=
ode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 600=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWtU6F15M.woff2") format("woff2"); unic=
ode-range: U+1F00-1FFF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 600=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWuk6F15M.woff2") format("woff2"); unic=
ode-range: U+370-3FF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 600=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWu06F15M.woff2") format("woff2"); unic=
ode-range: U+590-5FF, U+200C-2010, U+20AA, U+25CC, U+FB1D-FB4F; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 600=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWtk6F15M.woff2") format("woff2"); unic=
ode-range: U+102-103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0=
, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 600=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWt06F15M.woff2") format("woff2"); unic=
ode-range: U+100-24F, U+259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF,=
 U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 600=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mtYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWuU6F.woff2") format("woff2"); unicode=
-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+2000-20=
6F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;=
 }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 300=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSKmu1aB.woff2") format("woff2"); unicode=
-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE=
2F; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 300=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSumu1aB.woff2") format("woff2"); unicode=
-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 300=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSOmu1aB.woff2") format("woff2"); unicode=
-range: U+1F00-1FFF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 300=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSymu1aB.woff2") format("woff2"); unicode=
-range: U+370-3FF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 300=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTS2mu1aB.woff2") format("woff2"); unicode=
-range: U+590-5FF, U+200C-2010, U+20AA, U+25CC, U+FB1D-FB4F; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 300=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSCmu1aB.woff2") format("woff2"); unicode=
-range: U+102-103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U=
+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 300=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSGmu1aB.woff2") format("woff2"); unicode=
-range: U+100-24F, U+259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+=
2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 300=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTS-muw.woff2") format("woff2"); unicode-r=
ange: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+2000-206F=
, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSKmu1aB.woff2") format("woff2"); unicode=
-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE=
2F; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSumu1aB.woff2") format("woff2"); unicode=
-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSOmu1aB.woff2") format("woff2"); unicode=
-range: U+1F00-1FFF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSymu1aB.woff2") format("woff2"); unicode=
-range: U+370-3FF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTS2mu1aB.woff2") format("woff2"); unicode=
-range: U+590-5FF, U+200C-2010, U+20AA, U+25CC, U+FB1D-FB4F; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSCmu1aB.woff2") format("woff2"); unicode=
-range: U+102-103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U=
+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSGmu1aB.woff2") format("woff2"); unicode=
-range: U+100-24F, U+259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+=
2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTS-muw.woff2") format("woff2"); unicode-r=
ange: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+2000-206F=
, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 600=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSKmu1aB.woff2") format("woff2"); unicode=
-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE=
2F; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 600=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSumu1aB.woff2") format("woff2"); unicode=
-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 600=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSOmu1aB.woff2") format("woff2"); unicode=
-range: U+1F00-1FFF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 600=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSymu1aB.woff2") format("woff2"); unicode=
-range: U+370-3FF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 600=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTS2mu1aB.woff2") format("woff2"); unicode=
-range: U+590-5FF, U+200C-2010, U+20AA, U+25CC, U+FB1D-FB4F; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 600=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSCmu1aB.woff2") format("woff2"); unicode=
-range: U+102-103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U=
+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 600=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSGmu1aB.woff2") format("woff2"); unicode=
-range: U+100-24F, U+259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+=
2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 600=
; font-stretch: 100%; src: url("https://fonts.gstatic.com/s/opensans/v29/me=
mvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTS-muw.woff2") format("woff2"); unicode-r=
ange: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+2000-206F=
, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }
------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css

@charset "utf-8";

@font-face { font-family: FontAwesome; src: url("../fonts/fontawesome-webfo=
nt.eot?#iefix&v=3D4.7.0") format("embedded-opentype"), url("../fonts/fontaw=
esome-webfont.woff2?v=3D4.7.0") format("woff2"), url("../fonts/fontawesome-=
webfont.woff?v=3D4.7.0") format("woff"), url("../fonts/fontawesome-webfont.=
ttf?v=3D4.7.0") format("truetype"), url("../fonts/fontawesome-webfont.svg?v=
=3D4.7.0#fontawesomeregular") format("svg"); font-weight: normal; font-styl=
e: normal; }

.fa { display: inline-block; font-style: normal; font-variant: normal; font=
-weight: normal; font-stretch: normal; line-height: 1; font-family: FontAwe=
some; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: ant=
ialiased; }

.fa-lg { font-size: 1.33333em; line-height: 0.75em; vertical-align: -15%; }

.fa-2x { font-size: 2em; }

.fa-3x { font-size: 3em; }

.fa-4x { font-size: 4em; }

.fa-5x { font-size: 5em; }

.fa-fw { width: 1.28571em; text-align: center; }

.fa-ul { padding-left: 0px; margin-left: 2.14286em; list-style-type: none; =
}

.fa-ul > li { position: relative; }

.fa-li { position: absolute; left: -2.14286em; width: 2.14286em; top: 0.142=
857em; text-align: center; }

.fa-li.fa-lg { left: -1.85714em; }

.fa-border { padding: 0.2em 0.25em 0.15em; border: 0.08em solid rgb(238, 23=
8, 238); border-radius: 0.1em; }

.fa-pull-left { float: left; }

.fa-pull-right { float: right; }

.fa.fa-pull-left { margin-right: 0.3em; }

.fa.fa-pull-right { margin-left: 0.3em; }

.pull-right { float: right; }

.pull-left { float: left; }

.fa.pull-left { margin-right: 0.3em; }

.fa.pull-right { margin-left: 0.3em; }

.fa-spin { animation: 2s linear 0s infinite normal none running fa-spin; }

.fa-pulse { animation: 1s steps(8) 0s infinite normal none running fa-spin;=
 }

@-webkit-keyframes fa-spin {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(359deg); }
}

@keyframes fa-spin {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(359deg); }
}

.fa-rotate-90 { transform: rotate(90deg); }

.fa-rotate-180 { transform: rotate(180deg); }

.fa-rotate-270 { transform: rotate(270deg); }

.fa-flip-horizontal { transform: scale(-1, 1); }

.fa-flip-vertical { transform: scale(1, -1); }

:root .fa-rotate-90, :root .fa-rotate-180, :root .fa-rotate-270, :root .fa-=
flip-horizontal, :root .fa-flip-vertical { filter: none; }

.fa-stack { position: relative; display: inline-block; width: 2em; height: =
2em; line-height: 2em; vertical-align: middle; }

.fa-stack-1x, .fa-stack-2x { position: absolute; left: 0px; width: 100%; te=
xt-align: center; }

.fa-stack-1x { line-height: inherit; }

.fa-stack-2x { font-size: 2em; }

.fa-inverse { color: rgb(255, 255, 255); }

.fa-glass::before { content: "=EF=80=80"; }

.fa-music::before { content: "=EF=80=81"; }

.fa-search::before { content: "=EF=80=82"; }

.fa-envelope-o::before { content: "=EF=80=83"; }

.fa-heart::before { content: "=EF=80=84"; }

.fa-star::before { content: "=EF=80=85"; }

.fa-star-o::before { content: "=EF=80=86"; }

.fa-user::before { content: "=EF=80=87"; }

.fa-film::before { content: "=EF=80=88"; }

.fa-th-large::before { content: "=EF=80=89"; }

.fa-th::before { content: "=EF=80=8A"; }

.fa-th-list::before { content: "=EF=80=8B"; }

.fa-check::before { content: "=EF=80=8C"; }

.fa-remove::before, .fa-close::before, .fa-times::before { content: "=EF=80=
=8D"; }

.fa-search-plus::before { content: "=EF=80=8E"; }

.fa-search-minus::before { content: "=EF=80=90"; }

.fa-power-off::before { content: "=EF=80=91"; }

.fa-signal::before { content: "=EF=80=92"; }

.fa-gear::before, .fa-cog::before { content: "=EF=80=93"; }

.fa-trash-o::before { content: "=EF=80=94"; }

.fa-home::before { content: "=EF=80=95"; }

.fa-file-o::before { content: "=EF=80=96"; }

.fa-clock-o::before { content: "=EF=80=97"; }

.fa-road::before { content: "=EF=80=98"; }

.fa-download::before { content: "=EF=80=99"; }

.fa-arrow-circle-o-down::before { content: "=EF=80=9A"; }

.fa-arrow-circle-o-up::before { content: "=EF=80=9B"; }

.fa-inbox::before { content: "=EF=80=9C"; }

.fa-play-circle-o::before { content: "=EF=80=9D"; }

.fa-rotate-right::before, .fa-repeat::before { content: "=EF=80=9E"; }

.fa-refresh::before { content: "=EF=80=A1"; }

.fa-list-alt::before { content: "=EF=80=A2"; }

.fa-lock::before { content: "=EF=80=A3"; }

.fa-flag::before { content: "=EF=80=A4"; }

.fa-headphones::before { content: "=EF=80=A5"; }

.fa-volume-off::before { content: "=EF=80=A6"; }

.fa-volume-down::before { content: "=EF=80=A7"; }

.fa-volume-up::before { content: "=EF=80=A8"; }

.fa-qrcode::before { content: "=EF=80=A9"; }

.fa-barcode::before { content: "=EF=80=AA"; }

.fa-tag::before { content: "=EF=80=AB"; }

.fa-tags::before { content: "=EF=80=AC"; }

.fa-book::before { content: "=EF=80=AD"; }

.fa-bookmark::before { content: "=EF=80=AE"; }

.fa-print::before { content: "=EF=80=AF"; }

.fa-camera::before { content: "=EF=80=B0"; }

.fa-font::before { content: "=EF=80=B1"; }

.fa-bold::before { content: "=EF=80=B2"; }

.fa-italic::before { content: "=EF=80=B3"; }

.fa-text-height::before { content: "=EF=80=B4"; }

.fa-text-width::before { content: "=EF=80=B5"; }

.fa-align-left::before { content: "=EF=80=B6"; }

.fa-align-center::before { content: "=EF=80=B7"; }

.fa-align-right::before { content: "=EF=80=B8"; }

.fa-align-justify::before { content: "=EF=80=B9"; }

.fa-list::before { content: "=EF=80=BA"; }

.fa-dedent::before, .fa-outdent::before { content: "=EF=80=BB"; }

.fa-indent::before { content: "=EF=80=BC"; }

.fa-video-camera::before { content: "=EF=80=BD"; }

.fa-photo::before, .fa-image::before, .fa-picture-o::before { content: "=EF=
=80=BE"; }

.fa-pencil::before { content: "=EF=81=80"; }

.fa-map-marker::before { content: "=EF=81=81"; }

.fa-adjust::before { content: "=EF=81=82"; }

.fa-tint::before { content: "=EF=81=83"; }

.fa-edit::before, .fa-pencil-square-o::before { content: "=EF=81=84"; }

.fa-share-square-o::before { content: "=EF=81=85"; }

.fa-check-square-o::before { content: "=EF=81=86"; }

.fa-arrows::before { content: "=EF=81=87"; }

.fa-step-backward::before { content: "=EF=81=88"; }

.fa-fast-backward::before { content: "=EF=81=89"; }

.fa-backward::before { content: "=EF=81=8A"; }

.fa-play::before { content: "=EF=81=8B"; }

.fa-pause::before { content: "=EF=81=8C"; }

.fa-stop::before { content: "=EF=81=8D"; }

.fa-forward::before { content: "=EF=81=8E"; }

.fa-fast-forward::before { content: "=EF=81=90"; }

.fa-step-forward::before { content: "=EF=81=91"; }

.fa-eject::before { content: "=EF=81=92"; }

.fa-chevron-left::before { content: "=EF=81=93"; }

.fa-chevron-right::before { content: "=EF=81=94"; }

.fa-plus-circle::before { content: "=EF=81=95"; }

.fa-minus-circle::before { content: "=EF=81=96"; }

.fa-times-circle::before { content: "=EF=81=97"; }

.fa-check-circle::before { content: "=EF=81=98"; }

.fa-question-circle::before { content: "=EF=81=99"; }

.fa-info-circle::before { content: "=EF=81=9A"; }

.fa-crosshairs::before { content: "=EF=81=9B"; }

.fa-times-circle-o::before { content: "=EF=81=9C"; }

.fa-check-circle-o::before { content: "=EF=81=9D"; }

.fa-ban::before { content: "=EF=81=9E"; }

.fa-arrow-left::before { content: "=EF=81=A0"; }

.fa-arrow-right::before { content: "=EF=81=A1"; }

.fa-arrow-up::before { content: "=EF=81=A2"; }

.fa-arrow-down::before { content: "=EF=81=A3"; }

.fa-mail-forward::before, .fa-share::before { content: "=EF=81=A4"; }

.fa-expand::before { content: "=EF=81=A5"; }

.fa-compress::before { content: "=EF=81=A6"; }

.fa-plus::before { content: "=EF=81=A7"; }

.fa-minus::before { content: "=EF=81=A8"; }

.fa-asterisk::before { content: "=EF=81=A9"; }

.fa-exclamation-circle::before { content: "=EF=81=AA"; }

.fa-gift::before { content: "=EF=81=AB"; }

.fa-leaf::before { content: "=EF=81=AC"; }

.fa-fire::before { content: "=EF=81=AD"; }

.fa-eye::before { content: "=EF=81=AE"; }

.fa-eye-slash::before { content: "=EF=81=B0"; }

.fa-warning::before, .fa-exclamation-triangle::before { content: "=EF=81=B1=
"; }

.fa-plane::before { content: "=EF=81=B2"; }

.fa-calendar::before { content: "=EF=81=B3"; }

.fa-random::before { content: "=EF=81=B4"; }

.fa-comment::before { content: "=EF=81=B5"; }

.fa-magnet::before { content: "=EF=81=B6"; }

.fa-chevron-up::before { content: "=EF=81=B7"; }

.fa-chevron-down::before { content: "=EF=81=B8"; }

.fa-retweet::before { content: "=EF=81=B9"; }

.fa-shopping-cart::before { content: "=EF=81=BA"; }

.fa-folder::before { content: "=EF=81=BB"; }

.fa-folder-open::before { content: "=EF=81=BC"; }

.fa-arrows-v::before { content: "=EF=81=BD"; }

.fa-arrows-h::before { content: "=EF=81=BE"; }

.fa-bar-chart-o::before, .fa-bar-chart::before { content: "=EF=82=80"; }

.fa-twitter-square::before { content: "=EF=82=81"; }

.fa-facebook-square::before { content: "=EF=82=82"; }

.fa-camera-retro::before { content: "=EF=82=83"; }

.fa-key::before { content: "=EF=82=84"; }

.fa-gears::before, .fa-cogs::before { content: "=EF=82=85"; }

.fa-comments::before { content: "=EF=82=86"; }

.fa-thumbs-o-up::before { content: "=EF=82=87"; }

.fa-thumbs-o-down::before { content: "=EF=82=88"; }

.fa-star-half::before { content: "=EF=82=89"; }

.fa-heart-o::before { content: "=EF=82=8A"; }

.fa-sign-out::before { content: "=EF=82=8B"; }

.fa-linkedin-square::before { content: "=EF=82=8C"; }

.fa-thumb-tack::before { content: "=EF=82=8D"; }

.fa-external-link::before { content: "=EF=82=8E"; }

.fa-sign-in::before { content: "=EF=82=90"; }

.fa-trophy::before { content: "=EF=82=91"; }

.fa-github-square::before { content: "=EF=82=92"; }

.fa-upload::before { content: "=EF=82=93"; }

.fa-lemon-o::before { content: "=EF=82=94"; }

.fa-phone::before { content: "=EF=82=95"; }

.fa-square-o::before { content: "=EF=82=96"; }

.fa-bookmark-o::before { content: "=EF=82=97"; }

.fa-phone-square::before { content: "=EF=82=98"; }

.fa-twitter::before { content: "=EF=82=99"; }

.fa-facebook-f::before, .fa-facebook::before { content: "=EF=82=9A"; }

.fa-github::before { content: "=EF=82=9B"; }

.fa-unlock::before { content: "=EF=82=9C"; }

.fa-credit-card::before { content: "=EF=82=9D"; }

.fa-feed::before, .fa-rss::before { content: "=EF=82=9E"; }

.fa-hdd-o::before { content: "=EF=82=A0"; }

.fa-bullhorn::before { content: "=EF=82=A1"; }

.fa-bell::before { content: "=EF=83=B3"; }

.fa-certificate::before { content: "=EF=82=A3"; }

.fa-hand-o-right::before { content: "=EF=82=A4"; }

.fa-hand-o-left::before { content: "=EF=82=A5"; }

.fa-hand-o-up::before { content: "=EF=82=A6"; }

.fa-hand-o-down::before { content: "=EF=82=A7"; }

.fa-arrow-circle-left::before { content: "=EF=82=A8"; }

.fa-arrow-circle-right::before { content: "=EF=82=A9"; }

.fa-arrow-circle-up::before { content: "=EF=82=AA"; }

.fa-arrow-circle-down::before { content: "=EF=82=AB"; }

.fa-globe::before { content: "=EF=82=AC"; }

.fa-wrench::before { content: "=EF=82=AD"; }

.fa-tasks::before { content: "=EF=82=AE"; }

.fa-filter::before { content: "=EF=82=B0"; }

.fa-briefcase::before { content: "=EF=82=B1"; }

.fa-arrows-alt::before { content: "=EF=82=B2"; }

.fa-group::before, .fa-users::before { content: "=EF=83=80"; }

.fa-chain::before, .fa-link::before { content: "=EF=83=81"; }

.fa-cloud::before { content: "=EF=83=82"; }

.fa-flask::before { content: "=EF=83=83"; }

.fa-cut::before, .fa-scissors::before { content: "=EF=83=84"; }

.fa-copy::before, .fa-files-o::before { content: "=EF=83=85"; }

.fa-paperclip::before { content: "=EF=83=86"; }

.fa-save::before, .fa-floppy-o::before { content: "=EF=83=87"; }

.fa-square::before { content: "=EF=83=88"; }

.fa-navicon::before, .fa-reorder::before, .fa-bars::before { content: "=EF=
=83=89"; }

.fa-list-ul::before { content: "=EF=83=8A"; }

.fa-list-ol::before { content: "=EF=83=8B"; }

.fa-strikethrough::before { content: "=EF=83=8C"; }

.fa-underline::before { content: "=EF=83=8D"; }

.fa-table::before { content: "=EF=83=8E"; }

.fa-magic::before { content: "=EF=83=90"; }

.fa-truck::before { content: "=EF=83=91"; }

.fa-pinterest::before { content: "=EF=83=92"; }

.fa-pinterest-square::before { content: "=EF=83=93"; }

.fa-google-plus-square::before { content: "=EF=83=94"; }

.fa-google-plus::before { content: "=EF=83=95"; }

.fa-money::before { content: "=EF=83=96"; }

.fa-caret-down::before { content: "=EF=83=97"; }

.fa-caret-up::before { content: "=EF=83=98"; }

.fa-caret-left::before { content: "=EF=83=99"; }

.fa-caret-right::before { content: "=EF=83=9A"; }

.fa-columns::before { content: "=EF=83=9B"; }

.fa-unsorted::before, .fa-sort::before { content: "=EF=83=9C"; }

.fa-sort-down::before, .fa-sort-desc::before { content: "=EF=83=9D"; }

.fa-sort-up::before, .fa-sort-asc::before { content: "=EF=83=9E"; }

.fa-envelope::before { content: "=EF=83=A0"; }

.fa-linkedin::before { content: "=EF=83=A1"; }

.fa-rotate-left::before, .fa-undo::before { content: "=EF=83=A2"; }

.fa-legal::before, .fa-gavel::before { content: "=EF=83=A3"; }

.fa-dashboard::before, .fa-tachometer::before { content: "=EF=83=A4"; }

.fa-comment-o::before { content: "=EF=83=A5"; }

.fa-comments-o::before { content: "=EF=83=A6"; }

.fa-flash::before, .fa-bolt::before { content: "=EF=83=A7"; }

.fa-sitemap::before { content: "=EF=83=A8"; }

.fa-umbrella::before { content: "=EF=83=A9"; }

.fa-paste::before, .fa-clipboard::before { content: "=EF=83=AA"; }

.fa-lightbulb-o::before { content: "=EF=83=AB"; }

.fa-exchange::before { content: "=EF=83=AC"; }

.fa-cloud-download::before { content: "=EF=83=AD"; }

.fa-cloud-upload::before { content: "=EF=83=AE"; }

.fa-user-md::before { content: "=EF=83=B0"; }

.fa-stethoscope::before { content: "=EF=83=B1"; }

.fa-suitcase::before { content: "=EF=83=B2"; }

.fa-bell-o::before { content: "=EF=82=A2"; }

.fa-coffee::before { content: "=EF=83=B4"; }

.fa-cutlery::before { content: "=EF=83=B5"; }

.fa-file-text-o::before { content: "=EF=83=B6"; }

.fa-building-o::before { content: "=EF=83=B7"; }

.fa-hospital-o::before { content: "=EF=83=B8"; }

.fa-ambulance::before { content: "=EF=83=B9"; }

.fa-medkit::before { content: "=EF=83=BA"; }

.fa-fighter-jet::before { content: "=EF=83=BB"; }

.fa-beer::before { content: "=EF=83=BC"; }

.fa-h-square::before { content: "=EF=83=BD"; }

.fa-plus-square::before { content: "=EF=83=BE"; }

.fa-angle-double-left::before { content: "=EF=84=80"; }

.fa-angle-double-right::before { content: "=EF=84=81"; }

.fa-angle-double-up::before { content: "=EF=84=82"; }

.fa-angle-double-down::before { content: "=EF=84=83"; }

.fa-angle-left::before { content: "=EF=84=84"; }

.fa-angle-right::before { content: "=EF=84=85"; }

.fa-angle-up::before { content: "=EF=84=86"; }

.fa-angle-down::before { content: "=EF=84=87"; }

.fa-desktop::before { content: "=EF=84=88"; }

.fa-laptop::before { content: "=EF=84=89"; }

.fa-tablet::before { content: "=EF=84=8A"; }

.fa-mobile-phone::before, .fa-mobile::before { content: "=EF=84=8B"; }

.fa-circle-o::before { content: "=EF=84=8C"; }

.fa-quote-left::before { content: "=EF=84=8D"; }

.fa-quote-right::before { content: "=EF=84=8E"; }

.fa-spinner::before { content: "=EF=84=90"; }

.fa-circle::before { content: "=EF=84=91"; }

.fa-mail-reply::before, .fa-reply::before { content: "=EF=84=92"; }

.fa-github-alt::before { content: "=EF=84=93"; }

.fa-folder-o::before { content: "=EF=84=94"; }

.fa-folder-open-o::before { content: "=EF=84=95"; }

.fa-smile-o::before { content: "=EF=84=98"; }

.fa-frown-o::before { content: "=EF=84=99"; }

.fa-meh-o::before { content: "=EF=84=9A"; }

.fa-gamepad::before { content: "=EF=84=9B"; }

.fa-keyboard-o::before { content: "=EF=84=9C"; }

.fa-flag-o::before { content: "=EF=84=9D"; }

.fa-flag-checkered::before { content: "=EF=84=9E"; }

.fa-terminal::before { content: "=EF=84=A0"; }

.fa-code::before { content: "=EF=84=A1"; }

.fa-mail-reply-all::before, .fa-reply-all::before { content: "=EF=84=A2"; }

.fa-star-half-empty::before, .fa-star-half-full::before, .fa-star-half-o::b=
efore { content: "=EF=84=A3"; }

.fa-location-arrow::before { content: "=EF=84=A4"; }

.fa-crop::before { content: "=EF=84=A5"; }

.fa-code-fork::before { content: "=EF=84=A6"; }

.fa-unlink::before, .fa-chain-broken::before { content: "=EF=84=A7"; }

.fa-question::before { content: "=EF=84=A8"; }

.fa-info::before { content: "=EF=84=A9"; }

.fa-exclamation::before { content: "=EF=84=AA"; }

.fa-superscript::before { content: "=EF=84=AB"; }

.fa-subscript::before { content: "=EF=84=AC"; }

.fa-eraser::before { content: "=EF=84=AD"; }

.fa-puzzle-piece::before { content: "=EF=84=AE"; }

.fa-microphone::before { content: "=EF=84=B0"; }

.fa-microphone-slash::before { content: "=EF=84=B1"; }

.fa-shield::before { content: "=EF=84=B2"; }

.fa-calendar-o::before { content: "=EF=84=B3"; }

.fa-fire-extinguisher::before { content: "=EF=84=B4"; }

.fa-rocket::before { content: "=EF=84=B5"; }

.fa-maxcdn::before { content: "=EF=84=B6"; }

.fa-chevron-circle-left::before { content: "=EF=84=B7"; }

.fa-chevron-circle-right::before { content: "=EF=84=B8"; }

.fa-chevron-circle-up::before { content: "=EF=84=B9"; }

.fa-chevron-circle-down::before { content: "=EF=84=BA"; }

.fa-html5::before { content: "=EF=84=BB"; }

.fa-css3::before { content: "=EF=84=BC"; }

.fa-anchor::before { content: "=EF=84=BD"; }

.fa-unlock-alt::before { content: "=EF=84=BE"; }

.fa-bullseye::before { content: "=EF=85=80"; }

.fa-ellipsis-h::before { content: "=EF=85=81"; }

.fa-ellipsis-v::before { content: "=EF=85=82"; }

.fa-rss-square::before { content: "=EF=85=83"; }

.fa-play-circle::before { content: "=EF=85=84"; }

.fa-ticket::before { content: "=EF=85=85"; }

.fa-minus-square::before { content: "=EF=85=86"; }

.fa-minus-square-o::before { content: "=EF=85=87"; }

.fa-level-up::before { content: "=EF=85=88"; }

.fa-level-down::before { content: "=EF=85=89"; }

.fa-check-square::before { content: "=EF=85=8A"; }

.fa-pencil-square::before { content: "=EF=85=8B"; }

.fa-external-link-square::before { content: "=EF=85=8C"; }

.fa-share-square::before { content: "=EF=85=8D"; }

.fa-compass::before { content: "=EF=85=8E"; }

.fa-toggle-down::before, .fa-caret-square-o-down::before { content: "=EF=85=
=90"; }

.fa-toggle-up::before, .fa-caret-square-o-up::before { content: "=EF=85=91"=
; }

.fa-toggle-right::before, .fa-caret-square-o-right::before { content: "=EF=
=85=92"; }

.fa-euro::before, .fa-eur::before { content: "=EF=85=93"; }

.fa-gbp::before { content: "=EF=85=94"; }

.fa-dollar::before, .fa-usd::before { content: "=EF=85=95"; }

.fa-rupee::before, .fa-inr::before { content: "=EF=85=96"; }

.fa-cny::before, .fa-rmb::before, .fa-yen::before, .fa-jpy::before { conten=
t: "=EF=85=97"; }

.fa-ruble::before, .fa-rouble::before, .fa-rub::before { content: "=EF=85=
=98"; }

.fa-won::before, .fa-krw::before { content: "=EF=85=99"; }

.fa-bitcoin::before, .fa-btc::before { content: "=EF=85=9A"; }

.fa-file::before { content: "=EF=85=9B"; }

.fa-file-text::before { content: "=EF=85=9C"; }

.fa-sort-alpha-asc::before { content: "=EF=85=9D"; }

.fa-sort-alpha-desc::before { content: "=EF=85=9E"; }

.fa-sort-amount-asc::before { content: "=EF=85=A0"; }

.fa-sort-amount-desc::before { content: "=EF=85=A1"; }

.fa-sort-numeric-asc::before { content: "=EF=85=A2"; }

.fa-sort-numeric-desc::before { content: "=EF=85=A3"; }

.fa-thumbs-up::before { content: "=EF=85=A4"; }

.fa-thumbs-down::before { content: "=EF=85=A5"; }

.fa-youtube-square::before { content: "=EF=85=A6"; }

.fa-youtube::before { content: "=EF=85=A7"; }

.fa-xing::before { content: "=EF=85=A8"; }

.fa-xing-square::before { content: "=EF=85=A9"; }

.fa-youtube-play::before { content: "=EF=85=AA"; }

.fa-dropbox::before { content: "=EF=85=AB"; }

.fa-stack-overflow::before { content: "=EF=85=AC"; }

.fa-instagram::before { content: "=EF=85=AD"; }

.fa-flickr::before { content: "=EF=85=AE"; }

.fa-adn::before { content: "=EF=85=B0"; }

.fa-bitbucket::before { content: "=EF=85=B1"; }

.fa-bitbucket-square::before { content: "=EF=85=B2"; }

.fa-tumblr::before { content: "=EF=85=B3"; }

.fa-tumblr-square::before { content: "=EF=85=B4"; }

.fa-long-arrow-down::before { content: "=EF=85=B5"; }

.fa-long-arrow-up::before { content: "=EF=85=B6"; }

.fa-long-arrow-left::before { content: "=EF=85=B7"; }

.fa-long-arrow-right::before { content: "=EF=85=B8"; }

.fa-apple::before { content: "=EF=85=B9"; }

.fa-windows::before { content: "=EF=85=BA"; }

.fa-android::before { content: "=EF=85=BB"; }

.fa-linux::before { content: "=EF=85=BC"; }

.fa-dribbble::before { content: "=EF=85=BD"; }

.fa-skype::before { content: "=EF=85=BE"; }

.fa-foursquare::before { content: "=EF=86=80"; }

.fa-trello::before { content: "=EF=86=81"; }

.fa-female::before { content: "=EF=86=82"; }

.fa-male::before { content: "=EF=86=83"; }

.fa-gittip::before, .fa-gratipay::before { content: "=EF=86=84"; }

.fa-sun-o::before { content: "=EF=86=85"; }

.fa-moon-o::before { content: "=EF=86=86"; }

.fa-archive::before { content: "=EF=86=87"; }

.fa-bug::before { content: "=EF=86=88"; }

.fa-vk::before { content: "=EF=86=89"; }

.fa-weibo::before { content: "=EF=86=8A"; }

.fa-renren::before { content: "=EF=86=8B"; }

.fa-pagelines::before { content: "=EF=86=8C"; }

.fa-stack-exchange::before { content: "=EF=86=8D"; }

.fa-arrow-circle-o-right::before { content: "=EF=86=8E"; }

.fa-arrow-circle-o-left::before { content: "=EF=86=90"; }

.fa-toggle-left::before, .fa-caret-square-o-left::before { content: "=EF=86=
=91"; }

.fa-dot-circle-o::before { content: "=EF=86=92"; }

.fa-wheelchair::before { content: "=EF=86=93"; }

.fa-vimeo-square::before { content: "=EF=86=94"; }

.fa-turkish-lira::before, .fa-try::before { content: "=EF=86=95"; }

.fa-plus-square-o::before { content: "=EF=86=96"; }

.fa-space-shuttle::before { content: "=EF=86=97"; }

.fa-slack::before { content: "=EF=86=98"; }

.fa-envelope-square::before { content: "=EF=86=99"; }

.fa-wordpress::before { content: "=EF=86=9A"; }

.fa-openid::before { content: "=EF=86=9B"; }

.fa-institution::before, .fa-bank::before, .fa-university::before { content=
: "=EF=86=9C"; }

.fa-mortar-board::before, .fa-graduation-cap::before { content: "=EF=86=9D"=
; }

.fa-yahoo::before { content: "=EF=86=9E"; }

.fa-google::before { content: "=EF=86=A0"; }

.fa-reddit::before { content: "=EF=86=A1"; }

.fa-reddit-square::before { content: "=EF=86=A2"; }

.fa-stumbleupon-circle::before { content: "=EF=86=A3"; }

.fa-stumbleupon::before { content: "=EF=86=A4"; }

.fa-delicious::before { content: "=EF=86=A5"; }

.fa-digg::before { content: "=EF=86=A6"; }

.fa-pied-piper-pp::before { content: "=EF=86=A7"; }

.fa-pied-piper-alt::before { content: "=EF=86=A8"; }

.fa-drupal::before { content: "=EF=86=A9"; }

.fa-joomla::before { content: "=EF=86=AA"; }

.fa-language::before { content: "=EF=86=AB"; }

.fa-fax::before { content: "=EF=86=AC"; }

.fa-building::before { content: "=EF=86=AD"; }

.fa-child::before { content: "=EF=86=AE"; }

.fa-paw::before { content: "=EF=86=B0"; }

.fa-spoon::before { content: "=EF=86=B1"; }

.fa-cube::before { content: "=EF=86=B2"; }

.fa-cubes::before { content: "=EF=86=B3"; }

.fa-behance::before { content: "=EF=86=B4"; }

.fa-behance-square::before { content: "=EF=86=B5"; }

.fa-steam::before { content: "=EF=86=B6"; }

.fa-steam-square::before { content: "=EF=86=B7"; }

.fa-recycle::before { content: "=EF=86=B8"; }

.fa-automobile::before, .fa-car::before { content: "=EF=86=B9"; }

.fa-cab::before, .fa-taxi::before { content: "=EF=86=BA"; }

.fa-tree::before { content: "=EF=86=BB"; }

.fa-spotify::before { content: "=EF=86=BC"; }

.fa-deviantart::before { content: "=EF=86=BD"; }

.fa-soundcloud::before { content: "=EF=86=BE"; }

.fa-database::before { content: "=EF=87=80"; }

.fa-file-pdf-o::before { content: "=EF=87=81"; }

.fa-file-word-o::before { content: "=EF=87=82"; }

.fa-file-excel-o::before { content: "=EF=87=83"; }

.fa-file-powerpoint-o::before { content: "=EF=87=84"; }

.fa-file-photo-o::before, .fa-file-picture-o::before, .fa-file-image-o::bef=
ore { content: "=EF=87=85"; }

.fa-file-zip-o::before, .fa-file-archive-o::before { content: "=EF=87=86"; =
}

.fa-file-sound-o::before, .fa-file-audio-o::before { content: "=EF=87=87"; =
}

.fa-file-movie-o::before, .fa-file-video-o::before { content: "=EF=87=88"; =
}

.fa-file-code-o::before { content: "=EF=87=89"; }

.fa-vine::before { content: "=EF=87=8A"; }

.fa-codepen::before { content: "=EF=87=8B"; }

.fa-jsfiddle::before { content: "=EF=87=8C"; }

.fa-life-bouy::before, .fa-life-buoy::before, .fa-life-saver::before, .fa-s=
upport::before, .fa-life-ring::before { content: "=EF=87=8D"; }

.fa-circle-o-notch::before { content: "=EF=87=8E"; }

.fa-ra::before, .fa-resistance::before, .fa-rebel::before { content: "=EF=
=87=90"; }

.fa-ge::before, .fa-empire::before { content: "=EF=87=91"; }

.fa-git-square::before { content: "=EF=87=92"; }

.fa-git::before { content: "=EF=87=93"; }

.fa-y-combinator-square::before, .fa-yc-square::before, .fa-hacker-news::be=
fore { content: "=EF=87=94"; }

.fa-tencent-weibo::before { content: "=EF=87=95"; }

.fa-qq::before { content: "=EF=87=96"; }

.fa-wechat::before, .fa-weixin::before { content: "=EF=87=97"; }

.fa-send::before, .fa-paper-plane::before { content: "=EF=87=98"; }

.fa-send-o::before, .fa-paper-plane-o::before { content: "=EF=87=99"; }

.fa-history::before { content: "=EF=87=9A"; }

.fa-circle-thin::before { content: "=EF=87=9B"; }

.fa-header::before { content: "=EF=87=9C"; }

.fa-paragraph::before { content: "=EF=87=9D"; }

.fa-sliders::before { content: "=EF=87=9E"; }

.fa-share-alt::before { content: "=EF=87=A0"; }

.fa-share-alt-square::before { content: "=EF=87=A1"; }

.fa-bomb::before { content: "=EF=87=A2"; }

.fa-soccer-ball-o::before, .fa-futbol-o::before { content: "=EF=87=A3"; }

.fa-tty::before { content: "=EF=87=A4"; }

.fa-binoculars::before { content: "=EF=87=A5"; }

.fa-plug::before { content: "=EF=87=A6"; }

.fa-slideshare::before { content: "=EF=87=A7"; }

.fa-twitch::before { content: "=EF=87=A8"; }

.fa-yelp::before { content: "=EF=87=A9"; }

.fa-newspaper-o::before { content: "=EF=87=AA"; }

.fa-wifi::before { content: "=EF=87=AB"; }

.fa-calculator::before { content: "=EF=87=AC"; }

.fa-paypal::before { content: "=EF=87=AD"; }

.fa-google-wallet::before { content: "=EF=87=AE"; }

.fa-cc-visa::before { content: "=EF=87=B0"; }

.fa-cc-mastercard::before { content: "=EF=87=B1"; }

.fa-cc-discover::before { content: "=EF=87=B2"; }

.fa-cc-amex::before { content: "=EF=87=B3"; }

.fa-cc-paypal::before { content: "=EF=87=B4"; }

.fa-cc-stripe::before { content: "=EF=87=B5"; }

.fa-bell-slash::before { content: "=EF=87=B6"; }

.fa-bell-slash-o::before { content: "=EF=87=B7"; }

.fa-trash::before { content: "=EF=87=B8"; }

.fa-copyright::before { content: "=EF=87=B9"; }

.fa-at::before { content: "=EF=87=BA"; }

.fa-eyedropper::before { content: "=EF=87=BB"; }

.fa-paint-brush::before { content: "=EF=87=BC"; }

.fa-birthday-cake::before { content: "=EF=87=BD"; }

.fa-area-chart::before { content: "=EF=87=BE"; }

.fa-pie-chart::before { content: "=EF=88=80"; }

.fa-line-chart::before { content: "=EF=88=81"; }

.fa-lastfm::before { content: "=EF=88=82"; }

.fa-lastfm-square::before { content: "=EF=88=83"; }

.fa-toggle-off::before { content: "=EF=88=84"; }

.fa-toggle-on::before { content: "=EF=88=85"; }

.fa-bicycle::before { content: "=EF=88=86"; }

.fa-bus::before { content: "=EF=88=87"; }

.fa-ioxhost::before { content: "=EF=88=88"; }

.fa-angellist::before { content: "=EF=88=89"; }

.fa-cc::before { content: "=EF=88=8A"; }

.fa-shekel::before, .fa-sheqel::before, .fa-ils::before { content: "=EF=88=
=8B"; }

.fa-meanpath::before { content: "=EF=88=8C"; }

.fa-buysellads::before { content: "=EF=88=8D"; }

.fa-connectdevelop::before { content: "=EF=88=8E"; }

.fa-dashcube::before { content: "=EF=88=90"; }

.fa-forumbee::before { content: "=EF=88=91"; }

.fa-leanpub::before { content: "=EF=88=92"; }

.fa-sellsy::before { content: "=EF=88=93"; }

.fa-shirtsinbulk::before { content: "=EF=88=94"; }

.fa-simplybuilt::before { content: "=EF=88=95"; }

.fa-skyatlas::before { content: "=EF=88=96"; }

.fa-cart-plus::before { content: "=EF=88=97"; }

.fa-cart-arrow-down::before { content: "=EF=88=98"; }

.fa-diamond::before { content: "=EF=88=99"; }

.fa-ship::before { content: "=EF=88=9A"; }

.fa-user-secret::before { content: "=EF=88=9B"; }

.fa-motorcycle::before { content: "=EF=88=9C"; }

.fa-street-view::before { content: "=EF=88=9D"; }

.fa-heartbeat::before { content: "=EF=88=9E"; }

.fa-venus::before { content: "=EF=88=A1"; }

.fa-mars::before { content: "=EF=88=A2"; }

.fa-mercury::before { content: "=EF=88=A3"; }

.fa-intersex::before, .fa-transgender::before { content: "=EF=88=A4"; }

.fa-transgender-alt::before { content: "=EF=88=A5"; }

.fa-venus-double::before { content: "=EF=88=A6"; }

.fa-mars-double::before { content: "=EF=88=A7"; }

.fa-venus-mars::before { content: "=EF=88=A8"; }

.fa-mars-stroke::before { content: "=EF=88=A9"; }

.fa-mars-stroke-v::before { content: "=EF=88=AA"; }

.fa-mars-stroke-h::before { content: "=EF=88=AB"; }

.fa-neuter::before { content: "=EF=88=AC"; }

.fa-genderless::before { content: "=EF=88=AD"; }

.fa-facebook-official::before { content: "=EF=88=B0"; }

.fa-pinterest-p::before { content: "=EF=88=B1"; }

.fa-whatsapp::before { content: "=EF=88=B2"; }

.fa-server::before { content: "=EF=88=B3"; }

.fa-user-plus::before { content: "=EF=88=B4"; }

.fa-user-times::before { content: "=EF=88=B5"; }

.fa-hotel::before, .fa-bed::before { content: "=EF=88=B6"; }

.fa-viacoin::before { content: "=EF=88=B7"; }

.fa-train::before { content: "=EF=88=B8"; }

.fa-subway::before { content: "=EF=88=B9"; }

.fa-medium::before { content: "=EF=88=BA"; }

.fa-yc::before, .fa-y-combinator::before { content: "=EF=88=BB"; }

.fa-optin-monster::before { content: "=EF=88=BC"; }

.fa-opencart::before { content: "=EF=88=BD"; }

.fa-expeditedssl::before { content: "=EF=88=BE"; }

.fa-battery-4::before, .fa-battery::before, .fa-battery-full::before { cont=
ent: "=EF=89=80"; }

.fa-battery-3::before, .fa-battery-three-quarters::before { content: "=EF=
=89=81"; }

.fa-battery-2::before, .fa-battery-half::before { content: "=EF=89=82"; }

.fa-battery-1::before, .fa-battery-quarter::before { content: "=EF=89=83"; =
}

.fa-battery-0::before, .fa-battery-empty::before { content: "=EF=89=84"; }

.fa-mouse-pointer::before { content: "=EF=89=85"; }

.fa-i-cursor::before { content: "=EF=89=86"; }

.fa-object-group::before { content: "=EF=89=87"; }

.fa-object-ungroup::before { content: "=EF=89=88"; }

.fa-sticky-note::before { content: "=EF=89=89"; }

.fa-sticky-note-o::before { content: "=EF=89=8A"; }

.fa-cc-jcb::before { content: "=EF=89=8B"; }

.fa-cc-diners-club::before { content: "=EF=89=8C"; }

.fa-clone::before { content: "=EF=89=8D"; }

.fa-balance-scale::before { content: "=EF=89=8E"; }

.fa-hourglass-o::before { content: "=EF=89=90"; }

.fa-hourglass-1::before, .fa-hourglass-start::before { content: "=EF=89=91"=
; }

.fa-hourglass-2::before, .fa-hourglass-half::before { content: "=EF=89=92";=
 }

.fa-hourglass-3::before, .fa-hourglass-end::before { content: "=EF=89=93"; =
}

.fa-hourglass::before { content: "=EF=89=94"; }

.fa-hand-grab-o::before, .fa-hand-rock-o::before { content: "=EF=89=95"; }

.fa-hand-stop-o::before, .fa-hand-paper-o::before { content: "=EF=89=96"; }

.fa-hand-scissors-o::before { content: "=EF=89=97"; }

.fa-hand-lizard-o::before { content: "=EF=89=98"; }

.fa-hand-spock-o::before { content: "=EF=89=99"; }

.fa-hand-pointer-o::before { content: "=EF=89=9A"; }

.fa-hand-peace-o::before { content: "=EF=89=9B"; }

.fa-trademark::before { content: "=EF=89=9C"; }

.fa-registered::before { content: "=EF=89=9D"; }

.fa-creative-commons::before { content: "=EF=89=9E"; }

.fa-gg::before { content: "=EF=89=A0"; }

.fa-gg-circle::before { content: "=EF=89=A1"; }

.fa-tripadvisor::before { content: "=EF=89=A2"; }

.fa-odnoklassniki::before { content: "=EF=89=A3"; }

.fa-odnoklassniki-square::before { content: "=EF=89=A4"; }

.fa-get-pocket::before { content: "=EF=89=A5"; }

.fa-wikipedia-w::before { content: "=EF=89=A6"; }

.fa-safari::before { content: "=EF=89=A7"; }

.fa-chrome::before { content: "=EF=89=A8"; }

.fa-firefox::before { content: "=EF=89=A9"; }

.fa-opera::before { content: "=EF=89=AA"; }

.fa-internet-explorer::before { content: "=EF=89=AB"; }

.fa-tv::before, .fa-television::before { content: "=EF=89=AC"; }

.fa-contao::before { content: "=EF=89=AD"; }

.fa-500px::before { content: "=EF=89=AE"; }

.fa-amazon::before { content: "=EF=89=B0"; }

.fa-calendar-plus-o::before { content: "=EF=89=B1"; }

.fa-calendar-minus-o::before { content: "=EF=89=B2"; }

.fa-calendar-times-o::before { content: "=EF=89=B3"; }

.fa-calendar-check-o::before { content: "=EF=89=B4"; }

.fa-industry::before { content: "=EF=89=B5"; }

.fa-map-pin::before { content: "=EF=89=B6"; }

.fa-map-signs::before { content: "=EF=89=B7"; }

.fa-map-o::before { content: "=EF=89=B8"; }

.fa-map::before { content: "=EF=89=B9"; }

.fa-commenting::before { content: "=EF=89=BA"; }

.fa-commenting-o::before { content: "=EF=89=BB"; }

.fa-houzz::before { content: "=EF=89=BC"; }

.fa-vimeo::before { content: "=EF=89=BD"; }

.fa-black-tie::before { content: "=EF=89=BE"; }

.fa-fonticons::before { content: "=EF=8A=80"; }

.fa-reddit-alien::before { content: "=EF=8A=81"; }

.fa-edge::before { content: "=EF=8A=82"; }

.fa-credit-card-alt::before { content: "=EF=8A=83"; }

.fa-codiepie::before { content: "=EF=8A=84"; }

.fa-modx::before { content: "=EF=8A=85"; }

.fa-fort-awesome::before { content: "=EF=8A=86"; }

.fa-usb::before { content: "=EF=8A=87"; }

.fa-product-hunt::before { content: "=EF=8A=88"; }

.fa-mixcloud::before { content: "=EF=8A=89"; }

.fa-scribd::before { content: "=EF=8A=8A"; }

.fa-pause-circle::before { content: "=EF=8A=8B"; }

.fa-pause-circle-o::before { content: "=EF=8A=8C"; }

.fa-stop-circle::before { content: "=EF=8A=8D"; }

.fa-stop-circle-o::before { content: "=EF=8A=8E"; }

.fa-shopping-bag::before { content: "=EF=8A=90"; }

.fa-shopping-basket::before { content: "=EF=8A=91"; }

.fa-hashtag::before { content: "=EF=8A=92"; }

.fa-bluetooth::before { content: "=EF=8A=93"; }

.fa-bluetooth-b::before { content: "=EF=8A=94"; }

.fa-percent::before { content: "=EF=8A=95"; }

.fa-gitlab::before { content: "=EF=8A=96"; }

.fa-wpbeginner::before { content: "=EF=8A=97"; }

.fa-wpforms::before { content: "=EF=8A=98"; }

.fa-envira::before { content: "=EF=8A=99"; }

.fa-universal-access::before { content: "=EF=8A=9A"; }

.fa-wheelchair-alt::before { content: "=EF=8A=9B"; }

.fa-question-circle-o::before { content: "=EF=8A=9C"; }

.fa-blind::before { content: "=EF=8A=9D"; }

.fa-audio-description::before { content: "=EF=8A=9E"; }

.fa-volume-control-phone::before { content: "=EF=8A=A0"; }

.fa-braille::before { content: "=EF=8A=A1"; }

.fa-assistive-listening-systems::before { content: "=EF=8A=A2"; }

.fa-asl-interpreting::before, .fa-american-sign-language-interpreting::befo=
re { content: "=EF=8A=A3"; }

.fa-deafness::before, .fa-hard-of-hearing::before, .fa-deaf::before { conte=
nt: "=EF=8A=A4"; }

.fa-glide::before { content: "=EF=8A=A5"; }

.fa-glide-g::before { content: "=EF=8A=A6"; }

.fa-signing::before, .fa-sign-language::before { content: "=EF=8A=A7"; }

.fa-low-vision::before { content: "=EF=8A=A8"; }

.fa-viadeo::before { content: "=EF=8A=A9"; }

.fa-viadeo-square::before { content: "=EF=8A=AA"; }

.fa-snapchat::before { content: "=EF=8A=AB"; }

.fa-snapchat-ghost::before { content: "=EF=8A=AC"; }

.fa-snapchat-square::before { content: "=EF=8A=AD"; }

.fa-pied-piper::before { content: "=EF=8A=AE"; }

.fa-first-order::before { content: "=EF=8A=B0"; }

.fa-yoast::before { content: "=EF=8A=B1"; }

.fa-themeisle::before { content: "=EF=8A=B2"; }

.fa-google-plus-circle::before, .fa-google-plus-official::before { content:=
 "=EF=8A=B3"; }

.fa-fa::before, .fa-font-awesome::before { content: "=EF=8A=B4"; }

.fa-handshake-o::before { content: "=EF=8A=B5"; }

.fa-envelope-open::before { content: "=EF=8A=B6"; }

.fa-envelope-open-o::before { content: "=EF=8A=B7"; }

.fa-linode::before { content: "=EF=8A=B8"; }

.fa-address-book::before { content: "=EF=8A=B9"; }

.fa-address-book-o::before { content: "=EF=8A=BA"; }

.fa-vcard::before, .fa-address-card::before { content: "=EF=8A=BB"; }

.fa-vcard-o::before, .fa-address-card-o::before { content: "=EF=8A=BC"; }

.fa-user-circle::before { content: "=EF=8A=BD"; }

.fa-user-circle-o::before { content: "=EF=8A=BE"; }

.fa-user-o::before { content: "=EF=8B=80"; }

.fa-id-badge::before { content: "=EF=8B=81"; }

.fa-drivers-license::before, .fa-id-card::before { content: "=EF=8B=82"; }

.fa-drivers-license-o::before, .fa-id-card-o::before { content: "=EF=8B=83"=
; }

.fa-quora::before { content: "=EF=8B=84"; }

.fa-free-code-camp::before { content: "=EF=8B=85"; }

.fa-telegram::before { content: "=EF=8B=86"; }

.fa-thermometer-4::before, .fa-thermometer::before, .fa-thermometer-full::b=
efore { content: "=EF=8B=87"; }

.fa-thermometer-3::before, .fa-thermometer-three-quarters::before { content=
: "=EF=8B=88"; }

.fa-thermometer-2::before, .fa-thermometer-half::before { content: "=EF=8B=
=89"; }

.fa-thermometer-1::before, .fa-thermometer-quarter::before { content: "=EF=
=8B=8A"; }

.fa-thermometer-0::before, .fa-thermometer-empty::before { content: "=EF=8B=
=8B"; }

.fa-shower::before { content: "=EF=8B=8C"; }

.fa-bathtub::before, .fa-s15::before, .fa-bath::before { content: "=EF=8B=
=8D"; }

.fa-podcast::before { content: "=EF=8B=8E"; }

.fa-window-maximize::before { content: "=EF=8B=90"; }

.fa-window-minimize::before { content: "=EF=8B=91"; }

.fa-window-restore::before { content: "=EF=8B=92"; }

.fa-times-rectangle::before, .fa-window-close::before { content: "=EF=8B=93=
"; }

.fa-times-rectangle-o::before, .fa-window-close-o::before { content: "=EF=
=8B=94"; }

.fa-bandcamp::before { content: "=EF=8B=95"; }

.fa-grav::before { content: "=EF=8B=96"; }

.fa-etsy::before { content: "=EF=8B=97"; }

.fa-imdb::before { content: "=EF=8B=98"; }

.fa-ravelry::before { content: "=EF=8B=99"; }

.fa-eercast::before { content: "=EF=8B=9A"; }

.fa-microchip::before { content: "=EF=8B=9B"; }

.fa-snowflake-o::before { content: "=EF=8B=9C"; }

.fa-superpowers::before { content: "=EF=8B=9D"; }

.fa-wpexplorer::before { content: "=EF=8B=9E"; }

.fa-meetup::before { content: "=EF=8B=A0"; }

.sr-only { position: absolute; width: 1px; height: 1px; padding: 0px; margi=
n: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); border: 0px; }

.sr-only-focusable:active, .sr-only-focusable:focus { position: static; wid=
th: auto; height: auto; margin: 0px; overflow: visible; clip: auto; }
------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://junit.org/junit5/docs/current/user-guide/images/writing-tests_nested_test_ide.png

iVBORw0KGgoAAAANSUhEUgAABgwAAAOCCAYAAACrkvmRAAAKyGlDQ1BJQ0MgUHJvZmlsZQAASImV
lwdUk8kWx+f7vvRCC4QiJfQmSBEIICX0ANK7qIQkkFBiSAgKdmVxBdeCiggqK7oqouBaAFkLIoqF
RbCAfYMsKuq6WBAVlfcBj7D73nnvnXfPmTO/3Ny59853Zs75DwBUAkcszoJVAMgW5UqiAn0YCYlJ
DPzvgAAMgBLAAT0OVypmRUSEAtSm5r/bhx4Ajc+3bMZz/fv//9VUeXwpFwAoAuVUnpSbjfJJdAxx
xZJcAJD9qN94ca54nK+grC5BG0T54TinT/LQOKdOMAYzERMT5YuyFgAECocjSQeAYoL6GXncdDQP
xQ9lOxFPKEIZ/Q08uQIOD2W0LpiZnb1onOUoW6T+JU/633KmKnJyOOkKntzLhBH8hFJxFif///wc
/9uys2RTNczQQRFIgqLQGe0Lupu5KETBotSw8CkW8ibiJ1ggC4qdYq7UN2mKeRy/EMXarLDQKU4T
BrAVeXLZMVPMl/pHT7FkUZSiVprElzXFHMl0XVlmrMIv4LMV+QsEMfFTnCeMC5tiaWZ0yHSMr8Iv
kUUp+ueLAn2m6wYo9p4t/ct+hWzF2lxBTJBi75zp/vki1nROaYKiNx7fz386JlYRL871UdQSZ0Uo
4vlZgQq/NC9asTYXPZDTayMU3zCDExwxxSAUBAIGiAVZIBdIAAcEACEQAX4uf8n4GQW+i8T5EmG6
IJfBQm8Zn8EWcW1nMhzsHOwAGL+zk0fiHX3iLkL0a9O+/F4AmJEoJE/7Yu4B0IzWJldO+yzQ80RN
AaDdiSuT5E36xq8TwAISUAbqQBvoA2NgAWyAA3AG7sAb+INgEA5iQCJYALhAALLRzheDZWA1KAIl
YDPYDipAFdgHDoGj4DhoBGfABXAZXAdd4A54AORgALwEQ+ADGIUgCA9RIRqkDRlAppA15AAxIU/I
HwqFoqBEKAVKh0SQDFoGrYVKoFKoAtoL1UA/Q6ehC9BVqBu6B/VBg9Bb6DOMwBRYHdaDzeBZMBNm
wSFwDDwfTodz4AK4EN4Il8PV8BG4Ab4AX4fvwHL4JTyMAISM0BFDxAZhIr5IOJKEpCESZAVSjJQh
1Ugd0oy0I7cQOfIK+YTBYWgYBsYG444JwsRiuJgczArMBkwF5hCmAdOGuYXpwwxhvmGpWF2sNdYN
y8YmYNOxi7FF2DLsAewp7CXsHewA9gMOh6PjzHEuuCBcIi4DtxS3AbcbV49rwXXj+nHDeDxeG2+N
98CH4zn4XHwRfif+CP48/iZ+AP+RQCYYEBwIAYQkgoiwhlBGOEw4R7hJeEYYJaoQTYluxHAij5hP
3ETcT2wm3iAOEEdJqiRzkgcphpRBWk0qJ9WRLpEekt6RyWQjsis5kiwkryKXk4+Rr5D7yJ8oahQr
ii8lmSKjbKQcpLRQ7lHeUalUM6o3NYmaS91IraFepD6mflSiKdkqsZV4SiuVKpUalG4qvVYmKpsq
s5QXKBcolymfUL6h/EqFqGKm4qvCUVmhUqlyWqVXZViVpmqvGq6arbpB9bDqVdXnang1MzV/NZ5a
odo+tYtq/TSEZkzzpXFpa2n7aZdoA+o4dXN1tnqGeon6UfVO9SENNY3ZGnEaSzQqNc5qyOkI3YzO
pmfRN9GP03vonzX1NFmafM31mnWaNzVHtGZoeWvxtYq16rXuaH3WZmj7a2dqb9Fu1H6kg9Gx0onU
WayzR+eSzqsZ6jPcZ3BnFM84PuO+LqxrpRulu1R3n26H7rCevl6gnlhvp95FvVf6dH1v/Qz9bfrn
9AcNaAaeBkKDbQbnDV4wNBgsRhajnNHGGDLUNQwylBnuNew0HDUyN4o1WmNUb/TImGTMNE4z3mbc
ajxkYmAy12SZSa3JfVOiKdNUYLrDtN10xMzcLN5snVmj2XNzLXO2eYF5rflDC6qFl0WORbXFbUuc
JdMy03K3ZZcVbOVkJbCqtLphDVs7Wwutd1t3z8TOdJ0pmlk9s9eGYsOyybOptemzpduG2q6xbbR9
PctkVtKsLbPaZ32zc7LLsttv98BezT7Yfo19s/1bBysHrkOlw21HqmOA40rHJsc3s61n82fvmX3X
ieY012mdU6vTV2cXZ4lznfOgi4lLissul16mOjOCuYF5xRXr6uO60vWM6yc3Z7dct+Nuf7rbuGe6
H3Z/Psd8Dn/O/jn9HkYeHI+9HnJPhmeK54+eci9DL45XtdcTb2NvnvcB72csS1YG6wjrtY+dj8Tn
lM+Ir5vvct8WP8Qv0K/Yr9NfzT/Wv8L/cYBRQHpAbcBQoFPg0sCWIGxQSNCWoF62HpvLrmEPBbsE
Lw9uC6GERIdUhDwJtQqVhDbPhecGz90692GYaZgorDEchLPDt4Y/ijCPyIn4JRIXGRFZGfk0yj5q
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
YU3Nink0S879TMAETMAETMAETMAETMAETMAETMAETMAETGD0Ech81037v/uptep/lz9d/veanwwi
E/UIjntEhhUMoIwNvPdy9MvpTyo9ggqUEeoIKLBYifpqPtKlnrF5cv0FOIIz8LLjtE0EcJJPmTIl
PPHEE2HevHlddxEyd1xwRn8zxxAVITSPIiquMwETMAETMAETMAETMAETMAETMAETMAETMAETKCfQ
77eWX5tUL93Lx43/G9+6/N+YkI+cvPzp8r+T8uBbR9At97/LNjqMiaCXP6my2gc56Kvp0KbJM6ge
9aFNDn7qaGdS2KaeCcnhr7wWRj06skmKoKe+2Fc9NslrwTFrGUoCONzb5XQfynkOl23zGC7SHscE
TMAETMAETMAETMAETMAETMAETMAETMAEupPA2LHJXY7THz83/mz5wFWWz5uUB1Eq/ze6iHTlI6cO
/zo25UOXvxxd8vK/00dPzJbGIF8oaeaFLQMr5cDHOHk9cuAzAdVpYZQl1KlMyrhMXH1iNuU5nkhj
yA5t5OlDW24rFi0mYAImYAImYAImYAImYAImYAImYAImYAImYAImYAIm0BkEXnstubZb9X/jO2/F
/65gQu6Xrwmo3oCBnPUYx2mvfkRJCBZQhwCBR/rUKSigiUFLjv/cjuzKFqnskVLGBn3UL2YtJmAC
JmACJmACJmACJmACJmACJmACJmACJmACJmACJtAZBPqPJNJL8EwKP3oz/u92+d/lk68JqF7HOwa1
jUGOf1Ic+UQ5EBaMHvXSwT71uQ59BEgTVXtsSn3pg9CusTU+5dC/rYOsxQRMwARMwARMwARMwARM
wARMwARMwARMwARMwARMwAQ6gsD48cndLX957h9nfvjOa/q/ow5+8Gb973rJHxuMVW8coG5FDOph
AC2KgRUgUJBAwYDYFDhiCElO/r5sCjxATFColg3GkC7tChIARuOTxiCNhosliwmYgAmYgAmYgAmY
gAmYgAmYgAmYgAmYgAmYgAmYgAl0AIEFC3CRt+b/jv3xgzfrf8efXuR/j9XVhUHrEXnnNUH1Sc77
WCBVnmAAeXRJmZyCANhRWUGCWFVqJ0+72hajIorGh3Sy5YBB4uIPJmACJmACJmACJmACJmACJmAC
JmACJmACJmACJmACHUSg/3Qc+biZmfzj5Ovyf6MYRT53UuUb8b8nI/GD/OsqV0wZpB7R4tDPIxPk
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
MAETMIEXFAF8zSXJ/eD419khIIc+fnAJ/m989arTEUXoYkxl9NAh5UEoy18vHz5l2tWfedBGWleK
Bgw0qCakgUlpU5kJICxA9xloUmojZVz1ETS1iyZ2EVIebGr8Yc0MFtS72DiOaTEBEzABEzABEzAB
EzABEzABEzABEzABEzABEzABEzCBQgRKRxLh/8bXLWd97v+mLvd/Y5e6sv+71E5/+smXLhv4ymnD
htrVprJsVY4fu9SWogEDLDAAwuTIayDVaXIECtChzMMY6kuZNk1ek6bMAmU7L0uXNiTpEKXhWKLe
yoQJE8LUqVP75Hij3s7N/U3ABEzABEzABEzABEzABEzABEzABEzABEzABEzABAYXgdJR+vi15SMn
jy9cTn75yVmYnNz4vfN6vUCPDm3Y4JEfXfbl49dY0pVPPnYpBxXQqSsyVlcpNjIJTQhd8gyMMAiT
p8yjicVsKiuwQL2gCAJlPbKf70zAnvrIbhqvGcGCaDuMHDmSZLOV+7506Ga7Ni/MBEzABEzABEzA
BEzABEzABEzABEzABEzABExgcBC48847B8dEmztLfNvymeP/zn3l8pdLhzZ0EPLyySd/eCxX+t+p
pw5dbMie+sWqVE+KyHZ7qcZXDBYRAgIYVPRCfZgEdTxMiocJakGVk41NnY4WoqyFkmph2pWg/owv
m+g93xcXHke7FhMwARMwARMwARMwARMwARMwARMwARMwARMwARMwARPoLQF850iP/N/tXVMQAN+7
/OW99b+XzNZOmGx3RFEQJokwQQUTFMHAJrsEcPCTRwf9HFAsJkEnv+gBffSoR+inPHY0/vBm3mHA
QBYTMAETMAETMAETMAETMAETMAETMAETMAETMAETMAET6C2BzHfdY/93aQ699b/Ln05aSLpzJBEG
ZZiF4tynjA2c/HL0y+lPKj0dWRSrUh0BBRYrUV/Nh74I9QQNeHL9DewwyMDHZosJmIAJmIAJmIAJ
mIAJmIAJmIAJmIAJmIAJmIAJmMALhcCMGTMCT6tJyW8tvzapXrqXj1u+dfm/WYJ85OTlT5f/nZRH
L9ejW+l/l210GBNBL39SZb0vctDX06GNyWCYQfXEbBLa5OCngnYmhW3q6SeHv/JaGPXoyCYpgp76
Yl/12CSvBcesxQRMwARMwARMwARMwARMwARMwARMwARMwARMwARMwARag8CQIcldjtNfPnX5wFWW
z5uUB1Eq/ze6iHTlI6cO/zo25UOXvxxd8vK/00dPzJbHIF9V0syrtnSulAMf4+T1yIHPBFSnhVGW
UKcyKeMycfWJ2ZTneCKNITu0kacPbbmtWLSYgAmYgAmYgAmYgAmYgAmYgAmYgAmYgAmYgAmYgAmY
QGsQ2LQpubZ76//Gd94b/7uCCblfviGgogEDOesxjtNe/YiSECygDgECj/SpU1BAE4OWHP+5HdmV
LVLZI6WMDfqoX8xaTMAETMAETMAETMAETMAETMAETMAETMAETMAETMAETKA1CJSOJNJL8EwKP3pP
/N/N8r/LJ98QUFHHOwa1jUGOf1Ic+UQ5EBaMHvXSwT71uQ59BEgTVXtsSn3pg9CusTU+5VDa1kHW
YgImYAImYAImYAImYAImYAImYAImYAImYAImYAImYAItQWDYsOTulr88948zP3znDf3fUQc/eE/9
73rJHxuMVTQOUFgRg3oYQItiYAUIFCRQMCA2BY4YQpKTvz2bAg8QExSqZYMxpEu7ggSA0fikMUij
4WLJYgImYAImYAImYAImYAImYAImYAImYAImYAImYAImYAItQGDDBlzkvfN/x/74wXvqf8efXs3/
HqvrC4MWEXnnNUH1Sc77WCBVnmAAeXRJmZyCANhRWUGCWFVuJ0+72rakIorGh3Sy5YBB4uIvJmAC
JmACJmACJmACJmACJmACJmACJmACJmACJmACLUSgdDqOfNzMTP5x8oX83yhGkc+dVPnu+N+TkfhF
/nWVa6YMUkS0OPTzyAR5Fks7edop85DnIXCgIEHMJqEdfRZHX9opExBAH5Ft2ZceNi0mYAImYAIm
YAImYAImYAImYAImYAImYAImYAImYAIm0HIESgGDZvi/5SPvrv9d+gpO4FPHVkMp6nxHj0EkypPK
Bo7+PFBAW67H5BBNTPrU0Q/RUUX5eOTzMnqyS95iAiZgAiZgAiZgAiZgAiZgAiZgAiZgAiZgAiZg
AiZgAq1EoBn+79743/G5y++utCEfOfsbKcogzv48EEB/BQCwQVAgHdBEIUreBiD6khIYUABBi2aM
PE+Z/jzkVU7jb7FFbjq2WkzABEzgBUrgjDPOCNOmTUvP6aef/gKl4GWbgAmYgAmYgAmYgAmYgAmY
gAmYgAmYQGsQ2LgRF3jv/N+llfTU/47vXb7/3OdeMls7UafaGu0t6PGwUlJ56xUEYFAmQZm25NTP
0phN/TRRtVNPXpIHBrAj+4xJkKE8vu8wEDKnJtAzAqvWrexZx270Wrt2bdhxxx3DNttsk54vfvGL
3eht1aIEVqxYEZYuXZqe5cuXF+1mPRMwARMwARMwARMwARMwARMwARMwARMwgb4jIL+3UkYq7P8u
TUv+cWz01P9eMlUswQlfRFgITvtKYaI49mlDB5EeC1BggXraKfOQV7vK9KNONpmbbEo/VllMwAR6
S+CGJX8Mdyy7Phw3+6QwdcyM3pqr2f/SSy8N8+fPL7efffbZ4VOf+lS53EqZK664Ilx22WVpSkce
eWQ4+uijW2l6nosJmIAJmIAJmIAJmIAJmIAJmIAJmEAvCJTe+E4Whg7FBVlMnnzyyfDII4+EVatW
hRkzZoTtttsuDB8+vFjnTKun42cmnB1EBIYNK7vd8X3j9+ZUHvI06IQe8uvjg8h33l7q+Eo9/Xnk
KyePyL9OHp+62inLHmMiKqNXV8ozr6vVvhgZU8pgcvAT6ZAtTZ52Fs9PEO1aAJMjj576oatFKa9x
YlOCqXJKvcMALBYT6D4BggU3Lbk6dbz4/h/1adDg//7v/zpN8MEHHwzXXXddePnLX96pvhUKV155
ZTjzzDPTVCZMmOCAQSt8KJ6DCZiACZiACZiACZiACZiACZiACfSSwPr168Pll18ebr311mSJY85P
PfXUhlbvuuuu1O/ZZ5/tpMtltjvttFN4/etfH0aMGNGprVqhp+NXs+W6wUOgFCCS/xt/t/K5j1t5
FlbLJ45vHX86fnb519GlDlG9/O/Ukc/HZOy8Dzo1BeUikutp8kyKh4UxWSaCHpNUG7qarACgi6BD
O0Je9aqTPdo1Pm08z3cnEogBiwmYQAh5sAAeazeuCQQNlq1e3HQ8jz32WPrDWmn4Jz/5SWWVyyZg
AiZgAiZgAiZgAiZgAiZgAiZgAibQdAIc3/u9732vHCwoOsBNN90UfvWrX4XKYAH9N23aFObNmxfw
b1Rrz8fo6fi5DecHNYFe+b/jyvGPY6M3/ncBzP3vqquayhFftTGrZHIITn1NkHLZgU+hJNhEjzYF
AWiin+zQhiiIwIT1yCYpdaTqVzl+bLKYQAcBfmk3Q5plpxlzaZaNymCB7PZV0OC8884LGzYQPwxh
991313DhF7/4RVizZk257IwJmIAJmIAJmIAJmIAJmIAJmIAJmIAJNJvA9ddfHzgamSOFuiN33nln
+N3vfhd0usmcOXPSboKTTjopHHbYYWH06NHJ3KOPPhoqT1bIx+np+LkN5zcLAr31f8tXLjtA6Y7/
PYdYyHGqY4TyjtXymhhGmZwmKIc+ZWzhHURXgQLpkio4gfOfdjn/c310KGNXNtDHturTHPRDG+st
JpAI4Jz++c9/HqZMmRJe/epX95gKf0jOPffcdCQNW8w2B6kVLNDaFDRo5p0G+R/Nz33uc+H0009P
Ef2nn346cLfBm970Jg3f1JQLgP/2t7+FBx54ICxbtixMnz49zJo1K7z0pS8NY8eO7TQWbwKwxRB5
+OGHy20LFy4MN954Y7m81157lf9BUK4sZdha+Ne//jUsWLAgnWnIGHzf8A+K2bNnV6rXLXNJ9D33
3BNuv/32ZGv77bcPu+yyS2D8cePG1e1bpPGJJ54IHAsl2XXXXcP48eNVdGoCJmACJmACJmACJmAC
JmACJmACg57A6tWr0+6A/P+/u+22W/r/8Lp16xquj//jS/j/+PHHH69i4P/pO++8c9pdgC38Dvgf
qJP0dnzZcbpZEMDXLX+3fOEqy19OKp86i8b3zSM98gh6+Mi584C8fOfk9dCHPP50fOmU6U+ep5Aw
SBGRcU2GQTVp+jMgg+cTVR1jaGFq10SxpwlrDOkCir70oQ1d2pI9BwwiCUuZgIIF/JLmQXoSNCBY
wJayZ555JvzsZz8Lb3nLW5LztzzQIMw0ChZoSUOGDA1Dt9CPqGp7luKEv+2221JnHN3HHHNMwAmv
8wJh3OyAAZ/ZV77ylfC1r30tfX6VM996663DBz7wgXDKKaeUzxgk2v8P//APlarhpz/9aXrUwP0G
r3rVq1RMKYGCM844I3zzm98MS5Ys6dSmwmtf+9rwpS99KeCYryfY+sxnPpPsaVdGro9Tn3l/8IMf
LM89by+S54KmQw89NDz00ENJfdq0aeHPf/6zAwZF4FnHBEzABEzABEzABEzABEzABExg0BDgRTwF
C7ic+Mgjjwz77bdf+J//+Z+Ga8B3QRAAmThxYjjuuOO69OHFxNe85jXh17/+dWrj+KI8YNCb8bsM
VqACP0J2wW7VHvgdenJRM8boi33ufrAUJ8BdF1HwZeuhTCV+dfzciAIFcsjRJv83bfKJo0+eNnRJ
ZUP69EXQ48OSLfnU1SY9ylUF53sRYWBEi2JiGoxU3zGkXMRApAOdfFGxWF4M46KrBWoRKtOeL452
6bOooQ4YRAqWMgFuqtcvdCoVDe5O0CAPFmCDX7i8NT7Quwz4Xl+/aV3Ycmjji3SYdy5FgwWjho8J
r9vlpDB59LZ59x7n890Fr3vd68LIkSNT8OUTn/hEOuvviiuuSJ/X1KlTezxG3pHPn8863xWQt5Nn
58F//dd/BbYWXnDBBQ3/mFb2z8scqcQ/GlhHPeEfD1dffXXaMVDr+wgH/pvf/OZwyy231DTFrgzY
XXTRReGaa67pdtBg0aJFadtkHixgXrXmVHMibjABEzABEzABEzABEzABEzABEzCBQUIAn8Mb3vCG
MHny5MIzvvnmm8u67C4oOX3Ldcrsscce6dgifEe8uPrUU0+FCRMmqDmlPRm/k4GscOGFF4bly5cH
XoZkTQQleObPnx84rWDmzJkpaPGSl7wkbLnllqkn9yzce++9SYf5jRo1KjAnjlVip0Q9ufvuuwOB
EE4q4HQG7pLlhdAdd9wxvOxlL0vBlHr93Ra99RuTXx5/Nn5uOfepxOetYAB5/O4KHMRs8pcn/3ep
jXb55mUHHzr+d+xX87+jTz1Cij1006RiWleKBgwUFMAwQpmBKRMgoCwd1avMRBQgiNkyIPR48jlQ
xp4WEbMJkmwxXhqLb9QSeHQsL3AC/FJ+5zvfWd4dAI7uBA0qgwX05xdg5Vvl1PenECz4/YILwlNr
nggcFzRi6MjCww9UsICfS450krz1rW9N2RkzZoRDDjkkObyl89GPflRqvUpPPfXUcrCAiDdvDxDt
33PPPdOuBs4exEGOXHLJJeG73/1u2m1AO3mEHSU44xGCD69//etTni/o5fL1r3+9U7Bgn332Sd8r
L37xiwNbEq+66qrEgHUSzDjhhBPK34+5HT5f+OTBggMOOCDNn6OI2Lnw4x//OP2Bp98NN9wQ3vve
96bv89xOvfzixYvTzgK9XcGbELDo7nFJ9cZwmwmYgAmYgAmYgAmYgAmYgAmYgAm0CgFeWuT/1vzf
vtGb95Vz5l4CSaUvQPWkI0aMSC/h3XfffemuA/opYNCb8fMx8jz/t+dFSN72x5nPi5C58MIrD6cL
8FLiHXfckY6Dzl+4fu6555IOfoZ/+qd/Cvvuu29uIuXxaeDTyY9tpgH/ho6A5kQJghYc82RpSABf
t4ID5BH5wzkfS85+AgBy5pf931kd/nL65TakR0pfbCD4ziXS1ziqr5vmzvp6ihjNJ8VE9KheA1Nm
giorpZ4+jMnEZTNmUz2pdLVQdFkwUOiDDWSL/Bu+vcpfX+gEJk2a1KOgQa1gQXd2J/QFewUL7nvy
jmT+4vt/VDhoMFDBAib6hz/8IegP7DbbbNPpyJ+3ve1tZac8uxCaFTDgj53ky1/+cvjYxz6mYnLk
Uz7iiCPCH//4x1RPcIDjiYisv+9970t1vBGggMGBBx5Yri8byjLf/va3y6WDDz442VUEnwaCVxzD
pGOXOPoI5z/O+lz4I0zEXvLxj388fPGLX0yRe9Uxd47G0j8G4MbxRQQUGglj8uaAgwWNSLndBEzA
BEzABEzABEzABEzABExgcyHAzgCengjHHSM4/RvtTNhuu+0CAQNE/cj3Znz615PHH388vQjJy5Kc
GsCxSZy4wVFKCPM577zzkh8AvxI7CQhkbNq0KbURcEj+pt//Pt29yK6DXDgpQcECXtZm58KsWbPC
ypUrU7CBXQ7YYsfD+9///oaMctsvtHzpCCd83RL83TyV/m/q8H9TTyqHf66LT5w26mgnnwcIZFO+
c/nUqVcdfRHZby9V+Vo0YEBXjGpSDKS8BkOHSSBMGh2VpUOqSTI5FkbKQ5sWq7ZYVV487bITvzdl
BhWLCbQT6G7QYLAEC1jdstWLQ5GgwUAGC5hnfhwRDnP+wEh4ax9HPRFrot0cD7T33nuruUcpW+/4
wyXBQV4pbCHkD+Zvf/vb1NTbi37PPPPMQGQe4Q6EPFiQKuOXN77xjenugrlz56Yq1poHDPgd9qlP
fUrq6ZJtgh2VAr+zzjorXHvtteGxxx5LzVzuTdCgnhC0gQVbEBF2eLCzoEigoZ5dt5mACZiACZiA
CZiACZiACZiACZjA5kiA/+fjUEdGjx7dcIljxowp6+R+iXJlH2VwRHOSQVtbW3kE3vq/9NJLU5kX
ItHhiOjc58IOge9///uBY5ZZK7sR8tMHOHqIY44QAiYnn3xyp4AAgQbupCQ4wY4D7q+s5oNJBvxF
dz7Ix02KM5tU/m8o4TSjXj5y+b5po56yUuoQ+duxgz3KpOqrPtQhale5vbbO16IBAyaGMCCDkDII
T97GFgtsSidmyxPW5NDXuFpwh0exXR9dFs3OAgS70iGl3WICVQkUDRoMpmCBFtooaDDQwQL+QF58
8cWabmBHQS5EvvOLgfhD89WvfjVX6XaebYBbbbVVOi+Qzryhj93KKPmUKVPCiSee2G371Toce+yx
1aq71M2ZMycoYMD2wVz4w5zXfe5zn8ubO+V5q4HdEbrQe/fdd+/UXllYunRp+qN9//33pyYHCyoJ
uWwCJmACJmACJmACJmACJmACJmACnQnkuwTyYEBnrY5SHlTI+3Zo9E3ula98ZadgAaO86EUvCn/7
29/KfgaOG8qDBehw/wFHNfFCIoJfLBeOVNYL2pwYUbnDgiAERxFxLwKiI5hyG853ECDAUhL83xTw
Z8sXrrKOK6JMHp87j/zg6itjtKkP9lQve/SjD4/aySMqq097bZWvctxXaepUhUEmhBNfQp0e2jQ4
7QzMBNFHB6EdPZWpI6++zEU6WiQ61CkIQZ5nPd+kGfhYZTGBDgIEDTjuJg8KcKcBz3777Zfeus5/
mXNfwUAfQcTs07aweGeBjiHqWFFHrlbQYKCDBczwl7/8ZfnN+x122CG89KUv7Zh4KUcQgS1uCG/9
f+lLX+q0C6Gk1q3k8MMPTxcC04k54Fw/+eSTw/HHHx/233//MHy4Yo/dMltYmc+NSD0PFxRzmRCP
jmaqZkjOfNqmTZuW5llNT3WcnVjv/ETpESyAh7ZFEizgqKWdd95ZKk5NwARMwARMwARMwARMwARM
wARMwAQqCPCGvYQ37BtJrpP3bdSvt+2VgQDZ40VJvZhY63QBdCQ6OUHlPACyaNGigN8i34GA3tix
YwMXK1saE8j81vJ/y09Oij+8mv8bwwQEaEMP/7r6x2wn37z6yy7t+M2RSv87dbTJX0+5phQNGGCQ
gfLBmJSc/RoQrxz1SD5ZLZJ2AdGipK8FKUqidsYUSEEa5oABiC2NCFTbbXDrrbd26tYqwQImten5
jWHNhvajbjpNsqJQGTRohWABU8yPI9pjjz06nc+vJXBvgATn9u/juXlHHXWUqnqUcgkx9wTIQc+Z
ehzvw8MfPAIXbMXjgmF2OTRDCAx885vfDH/605/SOvMAVBH7ecCgra2tSJdCOuecc04nPQJhDhZ0
QuKCCZiACZiACZiACZiACZiACZiACXQhkDvMObankeQ6laccNOrb03ZeiMRpX03yI6E5iaGacEpD
LcEuLzTiW8HZff755wcCDPvss0+YNWtW2HbbbQNHPluKESixkr9bnVRWUIAyvnLAyidOHr849dIn
la8d/zp5RHW004cU/zmiOuxU+t+TQq0vRT9l9DQIKQ/CgIgm0n7QV3s9bZq8dOhHHW2ySRtlPdRj
jzJCH8qkLI7+Gj9mLSZQn4CCBtV+WbZSsIBVDB0yLByz09vCDuNn119UbFXQ4C+PXB5uWnJ1Q/1R
w8eE1+1yUpg8etuGuj1RmD9/fvjzn/9c7sp9AQcddFCX5/DDDy/rkOH4oN4Kl/BwRwAXGFf+4STK
z44D7k7gbXuOQNIWu56Oe+WVV6Yo+6mnnppsdzdYwLj51j+2BfaVcCE0lytbTMAETMAETMAETMAE
TMAETMAETMAEahMYN25cuXH16tXlfK1Mvqsg71tLvxn1RR32vGjdE+Fly9xHwV2Kf/jDH8IPfvCD
dELERRddFB566KGemH7B9Sn5nvgg5Mcmr6c7/m99mEX87/K3y/9ebfyGnwVGioiiEJWLop5Fa3Am
Th1lUuyTV0p7PiZ59PTIvvrGprIt6mRrCJdrWEygKIFqQYNWCxZoLd0NGty67C/qWjPt62ABA//0
pz/t0TFhl1xySTrGp+bkCzZwtt53v/vdFAnnD9iHPvShdIZf/seU6P/HP/7xXt2bwB9LjlXSBcRM
j+14//qv/5rs/u///m86HokLhgmY1BKi8xJtGVS5t2nlroL3vOc9oXJnTW/HcH8TMAETMAETMAET
MAETMAETMAET2JwIcMSQjjTOgwG11pgHFaq9pFqrXyvXc3fBP//zP4cjjjgiTJ8+vdNU165dmy46
xv9zwQUXpIuPOym4UI2AfNnyfcu/TT0+dfnJKUtHfWiTr72Z/vdotr4UPZJIE8Uak2eSWgQTZ8sE
qRZLyoOgJ+++6iijT8o2CgGSXdoQ6ZPKPvUbcAJmZ0FRZzGBugQUNOCN9r322qsl7iyoNWEFDS57
8Lyw8On2i2tr6Taq749gAXPIjyPiYuNG5+3/8Ic/TOf848T/xS9+EXBqN0PYYUBEnAfh2KNvfetb
4ayzzkp3DFDHzoAPf/jD5X8IUFdUmOvjjz+e1PmHxK9+9atw9NFHV+2eR+UrFfLzBInOE3nOgxuV
+kXL/FH/zW9+ky5IPvDAAwMXUXMuITxuueWWwB9/iwmYgAmYgAmYgAmYgAmYgAmYgAmYQFcC+BS4
nxBfxRNPPNHl4t+8R/7y3+YSMGB9+Do42pmHoMjChQvDggULUrBAxzDdfffdAT/bYYcdliNxPiOQ
HRGV+8EJAnBCDz5wBL+5BP83vnrV6YgidPGLq4weOqQ8CGX51RWEoEy7+jMP2kjrStGAgQbVhDQw
KW0qMwGEBRAIUD8WpTZSxlUfQVO7ggX0RUh5sKnxhzlYEGlYuk2AX2YcW1PktvtuG29yh2YEDfor
WHDdddeFBx98sEzgO9/5Tthxxx3L5WoZjvH5/ve/n5oINjQrYFA5FmfsfeELXwgvfvGL0yXItPMH
jjsEuGehmtTbwXTXXXeVu7z5zW+uGSxAqd5b/XnAAKc+lzVjr5awBZBjlxAucj700ENTvvILlx8N
GzYs7LrrrimIQ6CA35cPP/xweNOb3pS2EtJuMQETMAETMAETMAETMAETMAETMAET6EyAt+oJGCA4
xV/5yld2ViiV1q1bl17Uo8jxP/geNkfBf7b77run51WvelW6h1K+jnvuuccBgzofeulIIvzf+Lrl
rM/939Tl/m+sUVf2f5fa5VeXL1028JXThg3qaFebyrJVOX5UrS0aqLZGRwsDIPQhz8BalOxQx0QV
DaFdwQF0KJOip/5aFDbpq4WgJ7sxW85Tt0UWpaGtqcIPfSMhyoiT9Ne//nU6H5xzwjkGhWNIiLw5
oNGI4MC1D4ZggegoaFDkTgP1UdpfwQLGy3cXcAxPo2ABfTjWR/KXv/ylx2fg8Tb9G9/4xvRwT0Et
Zz9/2HKp/DnP3+5fsmRJrtopv369rmqJv7CG8iurupx99tlh2bJl1RtjLUcocSyW5POf/3yonJPa
5s2bF4477rh0nBJHKt1+++1qqpsee+yx4T/+4z/KOtdcc0346Ec/Wi47YwImYAImYAImYAImYAIm
YAImYAIm0EGAI4clvDBY6w5EggkbNuCvDckHMnHiRHUbtCk+jAceeCA9q1at6rIOLkzOfStPP/10
Fx1XdBAo3SPRK/93tJYHFeQn74n/nYnRT/59yjWl6GumeMUwyoOQapI4/PkJocxDmQehrAgGdQoK
UIdQ1iP7+c4E+quP7JJuqOUUjG29Ft7ixT7HeeRCEOCOO+4I1157bafzy3Md8lywilMaZyDbd7bc
cstKFZdNoDABBQ26czxRfwYLdKSQFvTWt75V2brpK17xinQJsbbwEXT47Gc/W7dPtcbRo0ens/PU
xpmDX/nKV1RMKX/gP/3pT5fr+PnM3/CngYuTJZdeemnagTB7dtfLp/fdd1+ppV0B733vezs5/vk9
wVo++MEPlvVqZc4444z0O4I+ROb5w3vhhReGKVOmlLs88sgj4YQTTgg6P5HABjsFigpMb7vtthTc
pA/HM7FD4Z3vfGdRE9YzARMwARMwARMwARMwARMwARMwgRcEgR122CH9n5x7C5988smAf4AX+HJ5
9NFHw+WXX16uOuCAA8r5wZyZO3du4EVDZOrUqeHkk0/ucpTzokWLUjtf+uui5/KAgzeDb1s+c/zf
ua9c/nLp0Cb/O3n55JM/vGRHtqjjkf8dG7KnfrEq+dZJEdluL9X4WjRg0B4ya58kppgwwiSYACnC
xGijjJc83xpBG6LggvooKEAbdTzMixRb5DX+iJhPUIjS9OVb/JdddlkcKpSDBkTZcOTVe/M4dSh9
4YwvjhC5/vrrwxve8Iaw8847583Om0C3CHQnaNCfwQIWwR/Pp556Kq2HN+7rHauTLxrH91ve8pby
BcRcmtOTgMEhhxwSdtppp/KRSF/96lcDP79sG6T+hhtuSH/wtKWQOXCBD+cS5sIRPhJ058yZE/ij
T9CAOw8UYOB+BoISBEpw4r/85S9Px/8QAGH9f/3rX8tHBxGYyC9Bkn2lBCXZaXHuueemKnZaMA67
NDg+i21+9913n9RT+qlPfarLxUOdFCoK/K4855xz0lpki2O52FKYvzlR0c1FEzABEzABEzABEzAB
EzABEzABE3hBEuD/+dxXiPDiMP//50hj/o/PS30333xz+YQA7gmUv2Cww2KNf/rTn5K/FT8op6ng
K5kxY0Y6pon7FzneWbLffvsp67Q2gdz/rTxOe/m/8X3z4DfH/02bfO3yh6NLnQICMZt0ZQM9teX+
97wOfzpCn4ZBg6IBg2SxZFCTJGVgTYo8g+thseRVr8VrgrEpAaGeeagfdtUXGOQFhQVRHt6XwYJo
P/1wKGiA4+78888P3AbeXWELD5fsvvrVrw44Ni0m0FMCRYIG/R0sYC35cUSHH354ikIXXSPOchz8
CH94cJgffPDBRbsnPZz0BOdw2Gu3Ao5xOccrjRHQOP300yur09v9jM0cJDfddFPgOfHEE8v/ACCQ
wFv6+Z0LROF5cuHoIH5PaX15W57n6CIuRz7zzDNTNfcZ/P73v89Vyvm3v/3t4bTTTiuXi2aI+l98
8cUpaMDdEfwuO/7449MlyLw1YDEBEzABEzABEzABEzABEzABEzABE2gnwN2ABAnYRcD/62v5GLi3
4B3veEe6w2BzYMfRycccc0x6CZN189J0rRenCS7wsqOlNoHMd40vu+N863YfOHVy3OP3Vjt+dOp5
OIWHVP73mE0iHzopfnn52lWWL172lVLP01BksJEiE+eRsCiEAeXsp6x6nP7Y1oQUVJAObbJJqiAB
7YjmRX2ulxrjlw2lc6BU7pOUD5agAQ7RymABl6AcddRR4d/+7d/CKaecEv7zP/8zfOQjHwmvf/3r
0xvJ+YSwgwOQN48tJtAbAgoaVLvTYCCCBc8991wn53Z+L0GRdRKNzi8exqndE2lra0vn+vNzyB+4
SuH3BQE7fg5/9rOfpUuBq+mwWwIHf+VRRJW/b9797nen+0o42icXghdcrvy1r30tfPnLX+60da/W
RcPsViAAcckllySH/qhRo3KT6R8ejMM/VNgpUDkXlHPbeT43xFsB7OJQf7YR5kGPXNd5EzABEzAB
EzABEzABEzABEzABE9jcCOjuwlr/b87Xy4kDvGi31VZb5dUpz//98RvwciG7DopKd8avtNnd486Z
YzVptHb8NBxhzEkp8h/kdvCH8iImp6loPXm78x0ESgGD3K/dbf93yVpv/e/42QkUML589SXT1ZNC
UYXYVUalr5RBGJSHQRHyBA4IJFCHbj6xXBdoapNerCr3UV7f5dgcHZ9Z8S3Zy7NIDXpNk1tuuSW9
jVvNIM48om377LNPteZyHc64Cy64IHA5soQftHe9612hra1NVX2Wzp8/P9kmKmrZ/Ahs3LQh5Hca
DESwoFWp8nth6dKl6fJxLhFmeyA/czjmiwo2li9fnu4y4Y9pvcuLOL6Itw34+Sb4UXnUUdExpcf9
KWzx47xEgh9cIF0ZRJCuUxMwARMwARMwARMwARMwARMwARMwgb4lwDHMHEXEKSIcz4PTvJHjvW9n
1D/WudSZtbNu7o/kdIThw3npvefCvbFIf/hGez7L5vQkoBJ9RK+O1h6Jz3PxwV+Or5yHvJz3eV51
6CCkehEf3zntaqOf/OzU0Y6gQ552hLzaKGsM8lUlV66qkFUyAUSDkseRz4TyOmxSJye/xlB/ygoS
oEdebdjh7gMtUnr0IViATe4xaIsBgyv6O2DADwdv5OKALCI4KzmOaOHChWV1HI/sSujtD1jZYI2M
AwY1wGxG1QoaPPbs4vC6XU4Kk0dvuxmtzksxARMwARMwARMwARMwARMwARMwARMwARPYnAi8kAIG
fG7xiOgjYzI/PgQM8HvzcPwQPm4CAfjAedSGL5yyggTk8YvTrgCA+qgtNpXtoEt9LvSlXm2V7blu
ystR36WhokKOe01E/Zg8k2VAhMXySJ86+uihrEmS5nawkfejLHukWhQ66hez/Sccv8I560WF7UIn
nHBCmDBhQrkLby3fdttt5bIzJtBTAjqe6E27vs/Bgp5CdD8TMAETMAETMAETMAETMAETMAETMAET
MAETaDKB0ovuzfB/N8v/Lp98w5UWdbxjMI9iYJggAI583vxHcOijlwcHFADIdeijKIkmqvbYlPpj
C6FdY2t8ygNyThYfNHca3HjjjUyhkHAMynHHHddJtzv9O3V0wQQqCBA0GD9iYkWtiyZgAiZgAiZg
AiZgAiZgAiZgAiZgAiZgAiZgAgNFoHRslfzlpN32f8c++MF76n/XS/7YYPyicYDCihjUwwAEBUgZ
WAECUkTBAPK64Tk5+amIQh8A0V8iG4whXdlHBzAanzT67jUczf0nPQkacFEIZ5xJli1bls5HV9mp
CZiACZiACZiACZiACZiACZiACZiACZiACZiACZjA5kGAOyCi9Mr/HfvjB++p/x1/erXxY3V9ySMb
9TTxzucOfA2WnPexjZQ6nP0KBrAY6rWjQLqUFdmQ158y9YjaaeM+A9o0PqQpEzEgGRBR0IDBDzzw
wEJz4DLUxYsXl3W5LKXeRaplRWdMwARMwARMwARMwARMwARMwARMwARMwARMwARMwAS6EMDfumTJ
kk71XEydv7zdqbGfClx6HAUHtpzY8odTj/9bL9rj/yYvPfzf5JOBUpqX85fx6Sf/O3n88+jKvx6z
ZaFePv1yZbVMdwIG9JfTX7YYRIEB2ni0ePJqZ5LokSLoMDZlLQLdFHqJKXke9GQPPfpgt09l7733
DuwKaKYcdNBBAbsSjiqymIAJmIAJmIAJmIAJmIAJmIAJmIAJmIAJmIAJmIAJbF4ESgED/Nv4s9fE
R35wOfZZcO7/poyghz9cgg5+dVL53/Oy2umHb12+c3zp0sdeXh+LtYUJFxEMynGPPgMiGpg8E0WY
nBZLmTx61COUEelLl3bmQ5nxNIYWpnJsKreRb7pwWTFPM6UvbDZzfrZlAiZgAiZgAiZgAiZgAiZg
AiZgAiZgAiZgAiZgAibQNAL4v+X8l28d/7cc+GqTM1+BACYgXzipfOW0q4wPXS/fx2yqx79Ou/zv
GpN2jUm+rmgydZVioybPYAzKg9BfE6DMpPKJ5m1aEClgFEDQIhkjz2tB2CCvchp/iy1y07HVYgIm
YAImYAImYAImYAImYAImYAImYAImYAImYAImYAIDTGDjRlzgvfN/l5bQU/87vnf5/nOfe8ls7aQ7
OwywwkoZiEEQynjuKWMrLyfHfqxD0KFfHiRQvWxRzgMDlDUe/bCh8hZ9cYfBZz7zGcZsKKeddlpD
HRSaba/QoFYyARMwARMwARMwARMwARMwARMwARMwARMwARMwARMYaALyeytlPnopHl+3/N20KzAg
/zd61FNGyOMj52V9+lHOH+qwId+92mJV9wQDRYQJVhMGRrAjHdlUFENl2isXqoVQT56gg2zmwQzZ
js0WEzABEzABEzABEzABEzABEzABEzABEzABEzABEzABE2hNAsOGlV3bvfV/yy/eXf+7+jE+j/zv
DYGVZ95AE6Ny5CuljqAAZSIdsqXJ007EY3ipXbsEmJyCCeon+5o4NjVOzJajJuRTfV/sMMA40tbW
lp72UvvX+fPnB56eSLPt9WQO7mMCJmACJmACJmACJmACJmACJmACJmACJmACJmACJtD3BEpHEuEn
x/+N71t5+bxJlY/Zsv+7sg7fOj5z/Ozyr2OPOkT1jEM7UjkmY+d9klKtL3Ly12pXvYIAlGU8nzyT
kfOfSUrQ1WTRp6yJKziALnnmIh3qZI8846sNG88PHTo0lMDT3lRpa2sLhx9+eCebV111Va8CBs20
12liLpiACZiACZiACZiACZiACZiACZiACZiACZiACZiACbQagUr/N35xfOf4txH83/i985Q2Hvqq
P35x+d9J18dHgq7879JHR/2lR1k2VFc1ZUJFhEERjGqClLUA6iTYRI82Ugk6skMbon5agBYluyqr
X+X47Vb81QRMwARMwARMwARMwARMwARMwARMwARMwARMwARMwARai0Bv/d/yk8sOq+uO/z2nga+9
oRQNGGhiGGVymmBeZocAEZJ8YOmSMhYPzv+8jG0FFminrHby6OfjpzH78kiiOJ7FBEzABEzABEzA
BEzABEzABEzABEzABEzABEzABEzABHpKQP7wHvm/46D0663/XX510kLCpIsIenL+49xnovmCyVNH
m3RjNtXpqCEFAdQffT3oqh91iI42ym3Shr1NDhiAyGICJmACJmACJmACJmACJmACJmACJmACJmAC
JmACJtBKBIYMwdVd9n3L390t/3fsjz4Pzn5S7OS+8lis6X/HF4++UnSx0VBwvheRfFG88c/ENBip
IhSkXMTAOUr55NFBNEnGRRcd6sjLLmXaBSPfYYB+0uvLgAGXG3NnQS49vfAYG822l8/LeRMwARMw
ARMwARMwARMwARMwARMwARMwARMwARMwgdYhULp7F583fm75xvFr4/PmRXlSHnzh+b0GZf93qY12
HkR20MH/jn1sUK826VOPkMq/TtpQigYMGJAJ8CCUGZwyAQJNirLq1YeJKEAQs10mn8+BvtjTItAH
gGxhP43Vl5ce4+DvTYCASefSbHu5bedNwARMwARMwARMwARMwARMwARMwARMwARMwARMwARajgC+
bgUHyCOk+MPXxUfOfgUJYlXyt8vXLgc//nL65TbkJydFDxsIfSXS1ziqr5sq0lBXKTbKqAZhInqo
0+SZEHn0NUn1pR5dgKCXjy1b0tVCo1rZHn3K4/flDgMGtZiACZiACZiACZiACZiACZiACZiACZiA
CZiACZiACZhAdwlssQXu7d75v0v9MdRM/zvzqiv52/11FWOjnPpy3FMmn1Zf6qwggIIDKkuHVE5/
+mr3gOzQT3UKOCilr+xsihKLzZXTTjutqQabba+pk7MxEzABEzABEzABEzABEzABEzABEzABEzAB
EzABE2hxAs8880wYPXp04MSZ3gjHBD377LNhq6226o2ZQn1LAYPc/40zm7L839hhQdSTyj8es0mo
ly9dPnEa5G/HDn3yF/BpVx/aELWr3F5b56sGqKOSmrQgCvRRPwaiDWEyuqi4Uoc2faLoq7/sUkaH
Rwtl0ZQR7GpR2FF/2iwmYAImYAImYAImYAImYAImYAImYAImYAImYAImYAKbGYGVK1eG+++/P8yd
OzeU7gXo0Qrpiw1sPf300z2y0Z1O2ek4vfV/N9v/3nAZRXcYyKGPE19CnR4c+woc0M5CcOyjL+c+
7eipHLMpr77MRToKGqBDHW30I8+znihNBj5WNU+WLVsW7r777rLBnXbaKeywww7lcr3MnXfeGZ54
4ol6Kqmtra0t8FhMwARMwARMwARMwARMwARMwARMwARMwARMwARMwAQ6EyBYMG/evMBJM+wMwOG/
6667dnungYIF2EAeeOCBsPPOO4fx48d3HrCJpcxvjU8b/7f85HpJvpr/mxnoxXn09OI8/RHqJOov
u9TjN0cq/e/U0SZ/PeWaUjRggEEGygdjUnL2a0BdgMyA+WTRpUw7fShrUaSIFqSLINTOmPSlnyAN
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
8rU1RWchjahn35fcA/8K7kD1WW3sJJ1H7AQ7hozATJNHe4R2njLidl57pi0jTbuUj+1rhxDb+9pX
RxuE5I0bef4j1Ld8Kpr7hw72x/atY798xxV17Atl1GWz7mjbcvKIj2LauvvaR5+6+/bfMkJtmEcd
pPYXNvHv+PN8W86MLQ/Pnc6/7Rjm2EHY+NP42/Vne81nvHAs8TrrGOL5Yn7X366/HBvNP7bnDOcI
4jnkudP1t+uv91Dj8dH8o/lH84/mH/pcmn9tr53OM72GMm6SZ37zz+afj5f553H+V455xLnDePwz
ZjhecC5YRuj8c4rOddUlbbn62KacNGJdQ/LQGVlb1/ZNo4vYH+uRRhdBV9uEXv/I194YEkdnrD8l
zyYYOKvYoPVIs0N0FHHnCI2T784Zt4z61CVNf7TDKoyAhKCeOpZTlzzLsWm/pugsY/vjhYVC6qmv
nv+Asdx2bQs77gf1tEMd+0CcfA8m4+Qrtokt+za2b7nh2L7t1H78O/62A6LnBeeY59x43njuEXpe
df41/jT+LmdG15/tueD4YDiOI44zXX+7/nb97frLeIA4LhBv/tH9T/d/y3ngucB5oXhdbf69nXM0
/9qy8PgwbP61vaZ4nWn+2fyz+efx80/HDkLv8cfrD+fR7vXHc4qQ8jGkLnbG889yyswn7jVvHLfU
IbSe7VOX8Z98xP+r4ZJ7tB5liO1ii02xnLR20B3z1T02pFNnlbExO8SOGSdUB6CkKactOqgu+Zar
M2VtdmDcGeIIdYm7aVM76Ng+cfMNqWd8bB9d+jxu6NKeQpntk0c57ZPPyhZp4mM9Hw8xnIqPHGTW
Ix/bY/vmESK2b5zQfdVO7ce/42973nreGXLOcP7DiM3zZop2/k0MGn+2DDwmCJHG3+15BQuk689y
XDiOdP3t+tv1dztOeN01ZMzo+tv8o/lX88/m391/OG/iupD/Y3vv4fx6n/8JVpY3/27+zbHgedT9
x2H3H5w3bHKboqeOP5yLno9yxgbi/JZ88tQzX58z1zznv2P73jNQH9E+dihTTFuu/177tm+5+dSj
PWxZNvZT+6eGNniq4h4FGlZsHHt00jI7qGOdtADsOGl2iCcKzCNkwy6yW58y6ijo0S56/JOsr+19
9Xd13AfqaN++UkYeos1xP49rH33/WWN92x7t2UfybN92DUd99x/d2t///4dX/Jfjo+OPo2E7aI48
OEY6/7ZjXOPP0XGj8Xd7bHj96/ozDyfztbrrb9ffffNPjpDmH80/dq8fXF+bfyzjp9eT5l/bY6L5
19Fxc/f8YUxt/rGcPxwrzT+afzT/uNb/xxnS/Kv513j94Jjw+kq4O/8gz3LqcfygY776nG+INkij
j/+ZOuQjHn+EyGhrrDvOf9CzHjr2g3zjYxvk7Z7/6CLWty3aR0ifWejkecSdo6MCwA5pxHz11BGC
nTY9wrcudtxJ9BDtoSMIbZN2f+wHaeqiQ+g/dYrOYpntmz6uXHvYR9d2iFvXPts/8hFC2nHfKbcO
BxliOWWI5fZvbFdd9dSt/e0xKS8Zjczivz2+Ov44Qjr/PD8af5bjwTG18Xfh4XhK6LFCCZxk1fWn
649zMo8Xj5HxmOn6uz1nuv5yhGzHlK4/Cw/H1K4/Cw/Hk64/23MFMl1/t2Np84/mH80/tv4xxgaE
sPlX/rf8j/PpMPuPnV+N82/mForny3HzL3S53rjJ1tBy7I3XaMcnr1W77ZtPnXGuo//ZkDJtqUtb
touetsY+2j90zyQYPI/QODKG2BLs2CH/KeSxkUZs23zy2FE2dNxZ65tvelI5IugDnj4JDAX17RNp
xLSheaTZD2wgHjTkU9d99B+ADvGxfXRls9ue9bW/r33quA+77VOmfduo/fh3/G3Pf8+P6VTZjDee
Z51/UNmOb3Ihjzhb40/jb9ef5Rre9ffouND8o/kX1wjmnM0/JwhrDs2/mn95/+n5wbHBeImQhzT/
XDh0/7tw8LggRZyt+Xfz7+bfzb+ZX3X/cXRcvB73H3BlnDWcorM4/sJ89/xDgba9nlN33Jj/PbTO
0zbl6nu9M40OYpv2hTQ6o7465LORtu0pOufxhh7nH/adMvQQ7Y31lpIz/GUnLyJ0wp2hI3ZKm+T5
8WLyaE8gpN0Z4pQJk7T/NGyyUTbas+0pe2NzX/vYHSdptG96bM9+0QabOuTbPvrsj32bohuhDF1E
G+SN+2WftT22bxvWRce27dtu+7ZnufuPDaT249/xtx1XOv+WMaXxZzs+LrHtGN/4u73+df1Zjguv
r11/j85/mn8so4fHR/OvhUfzz+31pflX8y/v85p/Nv/kWtH8ezs+LrHm34wNjBPdf3T/wTGQ/+/s
/k/vRzyH9H/CkjzLjxt/1dvlP1Wdz82T7v+oe9z83/Zofxz/zac96o5p2lLfsWFf++pogzRxhHDf
/NPyWeksfzB+vcWVDmwLEBDjjrETCHmCcefQxQZl5FGOnX31KUPURc/2iY/ta0Po1hvbR4c0/dMm
/dGOeZTbN0LzCWmflSbbm6Kbk59y7ZNPWjbYoQ7pk9q3fu0vLOPf8df5t4xHjT+Nv11/uv42/2j+
1fxzmRdN0+nNHLv5d/cf3j9xXHT/tT03uv/s/jv/Q/6X/E/5324l/yO/ytd/tG/8o5x8xPmC/l/O
Ff2PzCso5/77wWmzzhSdf/lP2W590rZPfeqQlj95+oen6DX1Kbdd++H9v+1RDx2EPPTOLXTsokIH
6QjCDtMhO0U+naUdAZImTmh8is5CPez5TyKtTRSIC5AQuWvahDMCoS5p9I5rnzL7hT4buv4TbZ9+
Itojjg4y7r/ta0v93fbJx6btq39o+9qlfWyTRghHW+rV/vb/DHe4xL/jr/NvO746bhwy/jmuTKdR
4896PIFF42/XH88jQs+Trr9df51nNv9o/tX8s/l39x/df3T/0f2H/i3njd1/ne5/c17NPRe8SCOE
cmz+3f2Hx8l4/8WYa/5J4y/HE9dozk9CZaxPnsefx9t4/FGOvjqknf+Tbxl1EMrwJ5OPjDbpM9tY
Hx3938Ttq/bUJ58NsWxJnfEvO3I9xJ3AFh0aO6h9dCgDCHF01GXHEPOIq2OIrpv9ph55ADauvoCm
olmHfHSpSyhMQjZEG6NNbGPL+pTt2h7/weprc1K/pn1sUW6IDjK2b5n2jmufevvaH1nSZ+uz/9o2
xAZS+8v/Sl7wiP/Jxz/HTccfFJZjx+Ol82/hIZfGn4VH42/XH6+7hvPgMf3p+tv1l7lH84/tGOH1
1OsHbMb5N+dO8w8oLMeNvJp/LDzk4vHT9Xd7bnX9Wa6588kz/en62/W362/zj+Zf22uE8wmvn4+F
+RfjuGO513/2g3045PqPntfGi+w/bSMwww7h6P+2DfvqvNbjb1Lf9Jk8N/aBOPUQ7ViOHW3NCmsd
yi8kNHxRsRN0nk4SsgPmE7pjhKTNQ584+gih/1ChaJNy9Y0LijSirv8c8rCvjO2Tp72xffJIW2bf
0SeurnFtUj62r56h/SDNJoMxPR6cY/vojvXH+FR0pE+kefoBW0jtLxxGZvHv+ON48Bz2eOj8W8Yw
eDT+bM8RjpVx/BjjjC6OsRxPSONv15+uv8u54LkxnjOOt42/y9ghj64/XX+47nI8dP3t+suY6f3l
OH6OcUZZx9jmH9Bo/tX8s/ln889lLHBsHMdM51vNPx+f80+O/d3/+75rqXMsj4d98290EOtr12PH
6zM66JLGzu75N2XNgh23sX0KbZ9y2zW0fULEdsfQ9t0f9KxH/MJyPRYM7ASdpaPsAGJo3AUAdIy7
80Khjhvw7B8XQPMJ0aeu/7wpOpdTh3LE0PbGOrZPGXZsn3oIdf3nkeadwOSNm+27D5TZzyl6pH3s
j+2P8UPaxy5S+1sG8V+O/46/7bnR+bcddxgrEMa4xp/G3/GaM8a7/px+/e/6Ow8lzT8mDM7Bmn80
//D+gbOj+X/3P80/m3867zZs/t39R/df3X+N91xjvPuvq3H/pR/Nudzo/z3u/g8d6/E/Ha//2EEo
51rg/3y06/zRMvS9box6o/8ZXXWor5BH2jJDyqkztkHeuUSH/LkqH1OJjgIJ2+7AuDPE3RlCdgQ9
9XXmq6Mt9UjzjyFtfWH4zyFUHx024ZpW1zLbH+tN1TZ9U29sn3L0raNN2jKPesjYPml1tau+4ViP
vpHvAer+Y4d862iz9rdMRo7wMi2r+C/HpseQoZw4ljr+Ov84Lhp/lnG78Xc5HxhPOS4cMxxTu/5s
mYzjKLxMy6rrT9ef8XzxXPI46frb/KP51zKeNv9o/sF1s/nXcj4wn2j+tZ1rOacar6fjdRReptVt
/tX8azxemn8tx4Pnya0w/9Q5Px4Hu/tP+rT5B/UdT5izoU/avCl6ZPzhWNMu+o5JhmOZxyVt2E/K
nRuSh5BHffLtD3mWT9HzC4aup/h+JjvHTtJ5hFBAxNER0hTd7Chl9kt9wGNbEYppbWtvbF8dbVh3
bN/6hLZvHvrUxTZi3yhXsEVf/SeN7atn+9Qhb7d9+0WZ8XH/bZ/6iHaJ1378O/46/xp/lrGw8Zer
wjImep3o+rOdQ3T9bf7R/Gs7/x7nnGO8+ecyFx/n/8vI2vzb6wo8uv/o/qP7j+4/uv/o/oNrQfdf
yyyBMdHrZPdfV/P+i2N1nPOO8XH+S3wU/6+E4/yH//N4/Bsf55BjHeKjLeL4f7VJ3LrqTVl76xw3
/o71qHtu2XVCn9vQuiI7yQ4iOr1303Tef4Rw1EeXjX5ZRigIymiDPMR/IiF5gLW9KTrrmiZEx3+E
5YSUjXraU4c09ZCxfW2qzy8ftIPu2B/yqbuvfXStR6g98tUnRLDp/qNLXP3a33KcsMR/YjAeVx1/
2/OJ48NzivjIyfNJHdLqdv41/jT+cmYs50zXn66/jpfNP7bXEc6P5n9bHlxfm380/+AYYLxAnFMR
b/4FhYWD4ylpecmq+Wfzz+afnBnLudL8s/mn42Xzz+11lPOj+eeWx/WYfzLW7F5/4Yxtyjj+PBan
6IY/ZepwHXeuYz665hFqwzqkvf4bqk9dypHRtnVHvUXrAn+v94KBXRk7S9wdMlSPNNAUdN3B0Qbl
6Fmf0EUEIBHnH0monv8MbRJaf4rOerZhH0gj1jWfkM362qJtNvLH9in3n0dcu9afsjZtoGc76pEm
bj6h7UzRuQxb5Jlf+9v/P+zgQug2RTf/P+IyRk/O6CKWmU8oZ8rRi3/HH8eEx0XnX+ef1x/GB44L
xx7Hlcb/CcpaHGPh5DgrJ8vMJ/Q8ozp6jb+NvxwTHheNv42/jb/buSvnRdefLYMJR/N/IKzFayzH
idfZrr8LHNnIhdDrDBrNP5p/Nf9s/smY4LjQ/POxOf8cx/jzXv+Yd7JYMM4/vYZ4rZiK5+vGbsjx
o9g+6TFOGnuMOdpz/DHf49B2x5D610XYwcuQ3Z1lZ9wB2iOOkM+rhkjTF9Jsu/VJU06ILv8cxHqu
7Ahxt77tW4eTW13bJU0+uoh9xBYb5cjYPrrUt330dvuP/r720XWQofy49qei2l/zgUX8t8d/x1/n
X+NP42/Xn+1kquvv0flT84/mX80/t/N5zgfm3c2/u//o/mt739395/77f+45u//P/5H/hzMh/0v+
p8en/0k/MHMChP+zsjv+o+N91eh/8RqK/ijqm0+aOPNy/d/WHe9f7QO6tENou4Rs1LPOGJ+yj+wD
6QsLnbgMcUewTVxQ7jA7xkaanSWOHkKfjKtPvv9I4sKznPoI9djQdd+EOYZjfXSpTzl1R1van7I3
7aOjbcsJkbF992lsFz37Rtz0bvva0Sah+1/78e/444zYDqCdfwsPxw3HNNKNP9vrjOPtaeO/HKFK
HGn8XTjAo/FnYcHxBI/Gn4WH503jz3ZO2/jb+Mv44HHAudH1ZzkmvB53/3P0/tNxlFGVONL8Y+EA
j+YfC4vmH82/OB+af27HBng0/2z+eV7/q9cWr7uGu9dfzjnnLeP5x5G4e/zZF/Qoow3yTFs+ZW2u
bc4Xd9sn37rUp3y3ffJGm1Py+ohwro+1a63Qcdpwh9BwJ4kjAmEHBTFCEYg2CNkAb55w0GXFZkzb
vrqE2EeXzfhx7VOOjPWJ+5QDZbaHru1p3zR65B3XPvnYQbBDXF3yiCOEbLUPjUXivz2WPd46/hYm
8uBI6fzbjikeH45/jCmNP8t40vjb9afr73as4Kxo/rGMDc2/mn82/+7+o/uvZTzkb/df3X9xP5H/
I/+P99veX5pmnOj+ezunlk/339vj4qr5H7yuee/DMXzc/J//477xD3/0KNT3f29IOW3t7v/YvvXI
I05binrY83wby9W7cIjxyxR2xI6zM+wobZJHnE2h3HzrWG4/0UFcpRnToz3zd9un7m771qNNFyGI
a8M6pO3Xce3THoIu2277tHVc+9pHx3aII8ftP2XUs9+1D5H4d/x1/jX+NP52/dleSzkfuv42/2j+
tZ1ncz64cX4w7yTd/HOCMAkskObfCweOEcT7H+Lkdf+xHCvdf3FEdP/FOcHW/Gt7LYEH42nX3+11
1msvIXy6/jb/4Fho/jVBmAQWyPWcf41jsvZpA+bOY4hzPir72scOOmz8eABb4/UfG6SxiaCnDmXE
x223/al4LiekfdsirW3iYz72EMovRQRxKcYno0IypB1hmQdUd9Q8+yUYoBNntQZd0v7D0B3Bj7r+
I7HrP3O3fetOKnN/Cc/TPvXsm30d26cMoX/E3dfj2qfc/XSf3Ffzace8KVr7a2bxX86Vjr+j5xrn
SOffUSaNPwsPjg3GXIQxtfG364/X2a6/y/zLuYZcmn80//KYYNzkWuK5wly9+cfRay2M4NP8v/uf
7v+W86D558KBsaH5JxSaf3f/0f1X95+Xc//JPcs4/9L/TJ5y6PnH/whdfdHYGOe/3ic5rmN/X/vk
77Y/6mLHtsa+j3nawP6lydjJS2tkMgxUJ8ru8AiRPPsiUPOsR/+siz0EG+qTJp/0bnvU0442bH8X
usBPa596x7XPATS2d1z72qC/6CC1v3CI/3JMeBxBBSYerx47+47/jr/OP4+b3fPIY8jjx+OJfKTx
Z+Gwy41c2TFey6/zb3vt8vrb+NP40/iznBe744hjiONH4+8yX4cL0vVn4bB73JDrsdP1p+uv40fz
j+Yfjp3Nv5brR/PP5p/NP5t/OociHI8Hr52GjJuOoYfMPxlfrHvS9XdSm+3ua5962ECwt699yuwP
cXSoM87/tEH5pQsN3whhpwTiDo+QyFOH0H8IfSPuRhniP4mD4K5pE6Q20CHPg4QQGwh12W/S6FhX
m2P7xve1Tx51fOoB3d32KUfv0PbRtc0pOottW0amdms//h1/23O4829hwRjBuOY40fhz2PjvGEuo
NP4u7GQDF4+rrj9df7r+dP1xDt31t+svxwLS/GN7nWz+1fzLOSVzpuP8D86x1OU8Iu7G+Io0/1qY
NP9s/tn8s/nn9Zh/co3WjuOwvljSlpF33PhLvnLc/Id2Thv/bQtbjv32iTzn2YTYGvUpvzShsRst
7Dhg2VmEnR23OXOdN+oRVw8byGhDiOg4QSOOoE8cHeKUe4CMNtWfijf6tjEeDLZvnratp23StqnO
2L769kEd98X9J21b1Kl9KGyZyI084vFfOMCj4+/48x8+47nncdT5t3Bp/FnOn8bf7VjLOdP1Bwpb
Jo4b5HX96frb/KP5B+MA0vyr+RfXS68R3f9t7785P+Aybpwvzb8XJs2/m397PuT/YbRYpPuPhYPH
hNcWcok3/1w4wOPQ+ZfXaOogMqU+AuvxOmUeobqWw3+0Z759wdauPY9p29Om6VF/1KVcnSl6uXIz
FgzYOWG6o8IBCmW7EMY6goOM/ScPsR4hNpXdNG2wWQ89dHjnqvmkFeKu5JzUPvrWO6T9UZc47dMO
ccum6Byv/eV/Gv/tsb17/HusEHb8QWERzqWRh+e/5xhlxDv/Gn8af7v+MBY4NkzRrr8Tg+YfzT+4
Tjb/2s4lmn8xOl57H0XeON9iLB3Tzb+297myav7Z/Lv7j+4/uv/o/qP7j5tz//XQdDHe5/9lzks+
Mi7GnDT/W7SXv6fNf9BCx3Z2//+U075+KtI3RdzhG924QPwnkCY+hsChf4Ii7c2Kgyr/POtM0Y0+
ceHalnnYoL7/HPKxIwv7cVL76lDPPtEONqiH7GuffNulrnZcqKCcPG0Sx47bmE97tb9lFf+Ov86/
xp/G3+nCMEnXn2VuMF7/4dL1d5ljNP9o/tX8cxkjmn8v5wLjY/cf23uK7r+2957MJ7r/XHg4bnb/
vT0muv/u/rv77+6/Hw/334xl7AfH8zgHMH8c/83bN/5N1Wf/tDqkuYZi12spZWzaNDytferfcKHj
N1ME5UE2gqVfwjRETx2AAZd9MI8QMU05MupggxsEQv9p6I22p+Qs2GFDT5u2y2QBu6NtdBB197VP
3nizTlo962EDIc1W+1um8V+Ol46/zr/Gn8bfrj/bawPXSsTrqNfVkVHX3+Yfzb+O3qB4nnjeLGfR
ch41/2z+3f3H9prS/Uf3H84hmn83/x7nls0/l5mD8wjnFSMjzx1C9AjVs95ipfkHPNi6/t786y//
A2T3+u9xrP8YHY9jj+vx+EeP+w/10SGOWG9JLWmPActMq3NDQ3bkZgsAFODxDwGgQAmF6j9gyprF
uvtOKOqN/xgqmMeHUpDdfwLlHhjqEto+8VG0b/uUmUfchQn7aXntQyL+HX/b81wWnX/LudH4sx1L
G3+318Tl6Fj+eq3p+rNcS6AiE+Jdf7fjKzwQ+DT/mFE0/5swcJ3h2tv1d2HR/GM5N5p/bK8lzT+a
f3A+sI3iXKP5V/Mvrp+IxwTx5p/b+QU8kOafzb8fq/cfo/+ZawHjPqHnvnnOFxwLnFNOqnMd/e7O
ua1PPW1ql1B76mHnpogdvymN72lUOALmwBKS/wyqEUcMBUo94/6zsGGcOpRrk5D0+E8yPWXPN9bq
0hZ2rEP5bvuUwRQbtln7WxYTlvhPDDymPJY6/pZzifOp828ZjzhXdse/xp/GX8cMjo+uP1BYxgxY
dP1t/tH8q/ln8+/tnLv7jy0LrxXNvyGxnUt1/9H9B/On7r+6/+z+u/tvrgdI/oetr46x8VD/i7ow
5H7E6ytpzi/nH6TRJU3Itu/8o3ysMyVvjly1BYMRjGBHUOQhgEWETZwy0h7sxE2P/4Qpe9Yhj/3H
vnU9IKaszT9We+Zpl7T2CbWhvnmkbd+65tV+/Dv+tudO59/2wsCYwbHheDJFN2MM4whCSLljjWnL
HHcMKVeHvMafxp/Gn+151fjT+MP5gDT+dv3p+tv8o/nXMh46JjqHJO1ckpDx0rRlzjsNrdv978Kr
+Xfz7+bf27Gj+Xfz78fS/JvrnPMDrm3ImPa6R8h+ef3znDef0GvnuP+cD1dKuGBdVREw/ROs/5Sx
z+bxjxr/Ef7j1MUGoi10/eeg6z8THeK2T9w6toWOYt5Z2ldXG7a120ds1378O/6256PnjGHn30LC
MYVjhY30KOPYoq7ljT/bcRYm4/nW+HuUh8eMYeffQsJzqvOv8afxt+tP11+vEEvY/GPLwWuFhJp/
Nf9ynskx0fxze78nF88RzxnD5p8LCceU5p/NP5t/Xmz+yZjCeKOQ5vwyf7cMvbOcf9QfbRDHNpsy
lptXeEYC4wIHcElzcgjackPLLLe53XroIejxGI6i3pg2Xvvx9/jw+PK4M+z4u3Yg5PzZ5db5t4wq
jT+Nv11/vMJuxwlzHFdJd/3d8un6sxwhHh+GXX+7/nJueH4sR8m1503zj4UMnLr+eJRsjxNzHFdI
w4q0Ywx5lhta1vEHna3scuv8W9h0/jX+NP5eO06Y47hKuvG368/udcTjw/Cxdv31OC+8jgR2DwIn
Yx4kNDVOQEijMw4wuzbUH3WJI9SjXJ3durUPpe1kmbisZEPI5gm+y1B96qpLHCFNuTq7dSlH+v8v
HPgrK9nINP7bY0kmIy/iY77pjr/tMdX5d/QY8Rxr/OFsWaTxZ+HgseGY0vjb+Ou1xGOCI8XzhfiY
b9o6pImPOsSRxp+FA3/lKRt5df51/nkueUyMxwvxMd+0ddQddYgjnX8LB/52/i0sPDY8Xhp/Gn8c
SzwmxvOF+Jhv2jrqjjrEkcafhQN/G38WFh4bHi+NP1dz/NkeuVc85ol1xbt5pHs++jE+ssF+/P/t
2tFunDAURdH//+hKzZG1i0vT5yrpsjQYjIFk5foaa7L2lQZJSbbfcf279u67/jtevQHVfe9veuv/
cfrT4vn8ixHxd4aI8fdMThORf+Tf5YjiYDGxXGH+Mf96//D+5f3T+7f1h/WX9efejH7/T/PWVufM
n1vrb+vvYsT6+4wP62/r72JgEdG6s3pt1p//bv29v0Nz/f4WX6Lc30p+iR/4Lz9k8BsAGyQ73v4m
kV4mVq+tc5+1f5z+Ve6+23+Xte0eKz1n+2vrGbVX3/f0/Mctl/lValu9z7usjf9RKb52JP6MP/lH
/l9+LC9Ur63YMP88Prksf1ZqW73Pu6zN/HNUiq8dmX+eMZZL9R1Txp/x946LM5rO9o4V+eeWeXzk
32NRHO1I/pV/e8crLqrvnGL+Mf+84+Jkk7O9Y8X8c8s8PuafY1Ec7cj88/n8c6Rsv4TAgnhJb3X7
JcEdr+zLk7XVvrb6dq621Sv1v+9xzvy+7T6r2+8597Xdr6vr6/nP3yWvGeVV29++AMtxdfv8T5Td
dnmeM4+V+BN/7/GyGCle7hgqdu66Mbe6/ff9irHad319O1fb6hXPPwZzWpH/jsN7Wxytbr84u+2K
p66vr/iT/97xshgpXu4YKnbuujha3f77fsVY7bu+vp2rbfWK58t/i4HFyYr8fxze28bR6vYbZ7dd
46nr62v8yf/veFmMFC93DBU7d10crW7/fb9irPZdX9/O1bZ6xfPl/8XA4mRF/j8O723jaHX7jbPb
rvHU9fU1/uT/d7wsRoqXYqi4+bb1//KL7huwfeu+uv0dr+x4pfaCYPXaVv/4+Kwscey6EnN9u9f6
rO1ONGtb6fnbX5938fznm7lc+Yu/xYLxd7KF/CP/mn/Mv94/Tj7sPcH71/M2ORPvn+e9qXEyHe/f
z1pnMfIu1h/WHxsj5dTV1l/WX4sD66+TLa2/rL+sv/7P9VdrjM2JlbXtc7d1Tk2AAAECBAgQIECA
AAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAEC
BAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ
IECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECA
AAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQ+NYCPwE4l1dW5D9SiAAAAABJRU5ErkJg
gg==

------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://junit.org/junit5/docs/current/user-guide/images/writing-tests_execution_mode.svg

<svg id=3D"mermaid-1561796450112" width=3D"100%" xmlns=3D"http://www.w3.org=
/2000/svg" height=3D"100%" viewBox=3D"0 0 1022 660"><style>


#mermaid-1561796450112 .label {
  font-family: 'trebuchet ms', verdana, arial;
  color: #333; }

#mermaid-1561796450112 .node rect,
#mermaid-1561796450112 .node circle,
#mermaid-1561796450112 .node ellipse,
#mermaid-1561796450112 .node polygon {
  fill: #eee;
  stroke: #999;
  stroke-width: 1px; }

#mermaid-1561796450112 .node.clickable {
  cursor: pointer; }

#mermaid-1561796450112 .arrowheadPath {
  fill: #333333; }

#mermaid-1561796450112 .edgePath .path {
  stroke: #666;
  stroke-width: 1.5px; }

#mermaid-1561796450112 .edgeLabel {
  background-color: white; }

#mermaid-1561796450112 .cluster rect {
  fill: #eaf2fb;
  stroke: #26a;
  stroke-width: 1px; }

#mermaid-1561796450112 .cluster text {
  fill: #333; }

#mermaid-1561796450112 div.mermaidTooltip {
  position: absolute;
  text-align: center;
  max-width: 200px;
  padding: 2px;
  font-family: 'trebuchet ms', verdana, arial;
  font-size: 12px;
  background: #eaf2fb;
  border: 1px solid #26a;
  border-radius: 2px;
  pointer-events: none;
  z-index: 100; }

#mermaid-1561796450112 .actor {
  stroke: #999;
  fill: #eee; }

#mermaid-1561796450112 text.actor {
  fill: #333;
  stroke: none; }

#mermaid-1561796450112 .actor-line {
  stroke: #666; }

#mermaid-1561796450112 .messageLine0 {
  stroke-width: 1.5;
  stroke-dasharray: '2 2';
  stroke: #333; }

#mermaid-1561796450112 .messageLine1 {
  stroke-width: 1.5;
  stroke-dasharray: '2 2';
  stroke: #333; }

#mermaid-1561796450112 #arrowhead {
  fill: #333; }

#mermaid-1561796450112 #crosshead path {
  fill: #333 !important;
  stroke: #333 !important; }

#mermaid-1561796450112 .messageText {
  fill: #333;
  stroke: none; }

#mermaid-1561796450112 .labelBox {
  stroke: #999;
  fill: #eee; }

#mermaid-1561796450112 .labelText {
  fill: #333;
  stroke: none; }

#mermaid-1561796450112 .loopText {
  fill: #333;
  stroke: none; }

#mermaid-1561796450112 .loopLine {
  stroke-width: 2;
  stroke-dasharray: '2 2';
  stroke: #999; }

#mermaid-1561796450112 .note {
  stroke: #777700;
  fill: #ffa; }

#mermaid-1561796450112 .noteText {
  fill: black;
  stroke: none;
  font-family: 'trebuchet ms', verdana, arial;
  font-size: 14px; }

#mermaid-1561796450112 .activation0 {
  fill: #f4f4f4;
  stroke: #666; }

#mermaid-1561796450112 .activation1 {
  fill: #f4f4f4;
  stroke: #666; }

#mermaid-1561796450112 .activation2 {
  fill: #f4f4f4;
  stroke: #666; }


#mermaid-1561796450112 .section {
  stroke: none;
  opacity: 0.2; }

#mermaid-1561796450112 .section0 {
  fill: #80b3e6; }

#mermaid-1561796450112 .section2 {
  fill: #80b3e6; }

#mermaid-1561796450112 .section1,
#mermaid-1561796450112 .section3 {
  fill: white;
  opacity: 0.2; }

#mermaid-1561796450112 .sectionTitle0 {
  fill: #333; }

#mermaid-1561796450112 .sectionTitle1 {
  fill: #333; }

#mermaid-1561796450112 .sectionTitle2 {
  fill: #333; }

#mermaid-1561796450112 .sectionTitle3 {
  fill: #333; }

#mermaid-1561796450112 .sectionTitle {
  text-anchor: start;
  font-size: 11px;
  text-height: 14px; }


#mermaid-1561796450112 .grid .tick {
  stroke: #e6e6e6;
  opacity: 0.3;
  shape-rendering: crispEdges; }

#mermaid-1561796450112 .grid path {
  stroke-width: 0; }


#mermaid-1561796450112 .today {
  fill: none;
  stroke: #d42;
  stroke-width: 2px; }



#mermaid-1561796450112 .task {
  stroke-width: 2; }

#mermaid-1561796450112 .taskText {
  text-anchor: middle;
  font-size: 11px; }

#mermaid-1561796450112 .taskTextOutsideRight {
  fill: #333;
  text-anchor: start;
  font-size: 11px; }

#mermaid-1561796450112 .taskTextOutsideLeft {
  fill: #333;
  text-anchor: end;
  font-size: 11px; }


#mermaid-1561796450112 .task.clickable {
  cursor: pointer; }

#mermaid-1561796450112 .taskText.clickable {
  cursor: pointer;
  fill: #003163 !important;
  font-weight: bold; }

#mermaid-1561796450112 .taskTextOutsideLeft.clickable {
  cursor: pointer;
  fill: #003163 !important;
  font-weight: bold; }

#mermaid-1561796450112 .taskTextOutsideRight.clickable {
  cursor: pointer;
  fill: #003163 !important;
  font-weight: bold; }


#mermaid-1561796450112 .taskText0,
#mermaid-1561796450112 .taskText1,
#mermaid-1561796450112 .taskText2,
#mermaid-1561796450112 .taskText3 {
  fill: white; }

#mermaid-1561796450112 .task0,
#mermaid-1561796450112 .task1,
#mermaid-1561796450112 .task2,
#mermaid-1561796450112 .task3 {
  fill: #26a;
  stroke: #1a4d80; }

#mermaid-1561796450112 .taskTextOutside0,
#mermaid-1561796450112 .taskTextOutside2 {
  fill: #333; }

#mermaid-1561796450112 .taskTextOutside1,
#mermaid-1561796450112 .taskTextOutside3 {
  fill: #333; }


#mermaid-1561796450112 .active0,
#mermaid-1561796450112 .active1,
#mermaid-1561796450112 .active2,
#mermaid-1561796450112 .active3 {
  fill: #eee;
  stroke: #1a4d80; }

#mermaid-1561796450112 .activeText0,
#mermaid-1561796450112 .activeText1,
#mermaid-1561796450112 .activeText2,
#mermaid-1561796450112 .activeText3 {
  fill: #333 !important; }


#mermaid-1561796450112 .done0,
#mermaid-1561796450112 .done1,
#mermaid-1561796450112 .done2,
#mermaid-1561796450112 .done3 {
  stroke: #666;
  fill: #bbb;
  stroke-width: 2; }

#mermaid-1561796450112 .doneText0,
#mermaid-1561796450112 .doneText1,
#mermaid-1561796450112 .doneText2,
#mermaid-1561796450112 .doneText3 {
  fill: #333 !important; }


#mermaid-1561796450112 .crit0,
#mermaid-1561796450112 .crit1,
#mermaid-1561796450112 .crit2,
#mermaid-1561796450112 .crit3 {
  stroke: #b1361b;
  fill: #d42;
  stroke-width: 2; }

#mermaid-1561796450112 .activeCrit0,
#mermaid-1561796450112 .activeCrit1,
#mermaid-1561796450112 .activeCrit2,
#mermaid-1561796450112 .activeCrit3 {
  stroke: #b1361b;
  fill: #eee;
  stroke-width: 2; }

#mermaid-1561796450112 .doneCrit0,
#mermaid-1561796450112 .doneCrit1,
#mermaid-1561796450112 .doneCrit2,
#mermaid-1561796450112 .doneCrit3 {
  stroke: #b1361b;
  fill: #bbb;
  stroke-width: 2;
  cursor: pointer;
  shape-rendering: crispEdges; }

#mermaid-1561796450112 .milestone {
  transform: rotate(45deg) scale(0.8, 0.8); }

#mermaid-1561796450112 .milestoneText {
  font-style: italic; }

#mermaid-1561796450112 .doneCritText0,
#mermaid-1561796450112 .doneCritText1,
#mermaid-1561796450112 .doneCritText2,
#mermaid-1561796450112 .doneCritText3 {
  fill: #333 !important; }

#mermaid-1561796450112 .activeCritText0,
#mermaid-1561796450112 .activeCritText1,
#mermaid-1561796450112 .activeCritText2,
#mermaid-1561796450112 .activeCritText3 {
  fill: #333 !important; }

#mermaid-1561796450112 .titleText {
  text-anchor: middle;
  font-size: 18px;
  fill: #333; }

#mermaid-1561796450112 g.classGroup text {
  fill: #999;
  stroke: none;
  font-family: 'trebuchet ms', verdana, arial;
  font-size: 10px; }

#mermaid-1561796450112 g.classGroup rect {
  fill: #eee;
  stroke: #999; }

#mermaid-1561796450112 g.classGroup line {
  stroke: #999;
  stroke-width: 1; }

#mermaid-1561796450112 .classLabel .box {
  stroke: none;
  stroke-width: 0;
  fill: #eee;
  opacity: 0.5; }

#mermaid-1561796450112 .classLabel .label {
  fill: #999;
  font-size: 10px; }

#mermaid-1561796450112 .relation {
  stroke: #999;
  stroke-width: 1;
  fill: none; }

#mermaid-1561796450112 #compositionStart {
  fill: #999;
  stroke: #999;
  stroke-width: 1; }

#mermaid-1561796450112 #compositionEnd {
  fill: #999;
  stroke: #999;
  stroke-width: 1; }

#mermaid-1561796450112 #aggregationStart {
  fill: #eee;
  stroke: #999;
  stroke-width: 1; }

#mermaid-1561796450112 #aggregationEnd {
  fill: #eee;
  stroke: #999;
  stroke-width: 1; }

#mermaid-1561796450112 #dependencyStart {
  fill: #999;
  stroke: #999;
  stroke-width: 1; }

#mermaid-1561796450112 #dependencyEnd {
  fill: #999;
  stroke: #999;
  stroke-width: 1; }

#mermaid-1561796450112 #extensionStart {
  fill: #999;
  stroke: #999;
  stroke-width: 1; }

#mermaid-1561796450112 #extensionEnd {
  fill: #999;
  stroke: #999;
  stroke-width: 1; }

#mermaid-1561796450112 .commit-id,
#mermaid-1561796450112 .commit-msg,
#mermaid-1561796450112 .branch-label {
  fill: lightgrey;
  color: lightgrey; }

#mermaid-1561796450112 .taskText,#mermaid-1561796450112  .sectionTitle { fo=
nt-family: 'Open Sans'; font-size:15px }#mermaid-1561796450112  .grid .tick=
 text { display:none }#mermaid-1561796450112  .grid .tick:nth-child(2n+1) {=
 display:none }</style><style>#mermaid-1561796450112 {
    color: rgba(0, 0, 0, 0.65);
    font: ;
  }</style><g></g><g class=3D"grid" transform=3D"translate(225, 610)" fill=
=3D"none" font-size=3D"10" font-family=3D"sans-serif" text-anchor=3D"middle=
"><path class=3D"domain" stroke=3D"currentColor" d=3D"M0.5,-600V0.5H722.5V-=
600"></path><g class=3D"tick" opacity=3D"1" transform=3D"translate(0.5,0)">=
<line stroke=3D"currentColor" y2=3D"-600"></line><text fill=3D"#000" y=3D"3=
" dy=3D"1em" stroke=3D"none" font-size=3D"10" style=3D"text-anchor: middle;=
">2019-01-01</text></g><g class=3D"tick" opacity=3D"1" transform=3D"transla=
te(90.5,0)"><line stroke=3D"currentColor" y2=3D"-600"></line><text fill=3D"=
#000" y=3D"3" dy=3D"1em" stroke=3D"none" font-size=3D"10" style=3D"text-anc=
hor: middle;">2019-01-01</text></g><g class=3D"tick" opacity=3D"1" transfor=
m=3D"translate(181.5,0)"><line stroke=3D"currentColor" y2=3D"-600"></line><=
text fill=3D"#000" y=3D"3" dy=3D"1em" stroke=3D"none" font-size=3D"10" styl=
e=3D"text-anchor: middle;">2019-01-02</text></g><g class=3D"tick" opacity=
=3D"1" transform=3D"translate(271.5,0)"><line stroke=3D"currentColor" y2=3D=
"-600"></line><text fill=3D"#000" y=3D"3" dy=3D"1em" stroke=3D"none" font-s=
ize=3D"10" style=3D"text-anchor: middle;">2019-01-02</text></g><g class=3D"=
tick" opacity=3D"1" transform=3D"translate(361.5,0)"><line stroke=3D"curren=
tColor" y2=3D"-600"></line><text fill=3D"#000" y=3D"3" dy=3D"1em" stroke=3D=
"none" font-size=3D"10" style=3D"text-anchor: middle;">2019-01-03</text></g=
><g class=3D"tick" opacity=3D"1" transform=3D"translate(451.5,0)"><line str=
oke=3D"currentColor" y2=3D"-600"></line><text fill=3D"#000" y=3D"3" dy=3D"1=
em" stroke=3D"none" font-size=3D"10" style=3D"text-anchor: middle;">2019-01=
-03</text></g><g class=3D"tick" opacity=3D"1" transform=3D"translate(542.5,=
0)"><line stroke=3D"currentColor" y2=3D"-600"></line><text fill=3D"#000" y=
=3D"3" dy=3D"1em" stroke=3D"none" font-size=3D"10" style=3D"text-anchor: mi=
ddle;">2019-01-04</text></g><g class=3D"tick" opacity=3D"1" transform=3D"tr=
anslate(632.5,0)"><line stroke=3D"currentColor" y2=3D"-600"></line><text fi=
ll=3D"#000" y=3D"3" dy=3D"1em" stroke=3D"none" font-size=3D"10" style=3D"te=
xt-anchor: middle;">2019-01-04</text></g><g class=3D"tick" opacity=3D"1" tr=
ansform=3D"translate(722.5,0)"><line stroke=3D"currentColor" y2=3D"-600"></=
line><text fill=3D"#000" y=3D"3" dy=3D"1em" stroke=3D"none" font-size=3D"10=
" style=3D"text-anchor: middle;">2019-01-05</text></g></g><g><rect x=3D"0" =
y=3D"48" width=3D"984.5" height=3D"35" class=3D"section section0"></rect><r=
ect x=3D"0" y=3D"83" width=3D"984.5" height=3D"35" class=3D"section section=
0"></rect><rect x=3D"0" y=3D"118" width=3D"984.5" height=3D"35" class=3D"se=
ction section0"></rect><rect x=3D"0" y=3D"153" width=3D"984.5" height=3D"35=
" class=3D"section section0"></rect><rect x=3D"0" y=3D"188" width=3D"984.5"=
 height=3D"35" class=3D"section section1"></rect><rect x=3D"0" y=3D"223" wi=
dth=3D"984.5" height=3D"35" class=3D"section section1"></rect><rect x=3D"0"=
 y=3D"258" width=3D"984.5" height=3D"35" class=3D"section section1"></rect>=
<rect x=3D"0" y=3D"293" width=3D"984.5" height=3D"35" class=3D"section sect=
ion1"></rect><rect x=3D"0" y=3D"328" width=3D"984.5" height=3D"35" class=3D=
"section section2"></rect><rect x=3D"0" y=3D"363" width=3D"984.5" height=3D=
"35" class=3D"section section2"></rect><rect x=3D"0" y=3D"398" width=3D"984=
.5" height=3D"35" class=3D"section section2"></rect><rect x=3D"0" y=3D"433"=
 width=3D"984.5" height=3D"35" class=3D"section section2"></rect><rect x=3D=
"0" y=3D"468" width=3D"984.5" height=3D"35" class=3D"section section3"></re=
ct><rect x=3D"0" y=3D"503" width=3D"984.5" height=3D"35" class=3D"section s=
ection3"></rect><rect x=3D"0" y=3D"538" width=3D"984.5" height=3D"35" class=
=3D"section section3"></rect><rect x=3D"0" y=3D"573" width=3D"984.5" height=
=3D"35" class=3D"section section3"></rect></g><g><rect id=3D"ass1" rx=3D"3"=
 ry=3D"3" x=3D"225" y=3D"50" width=3D"181" height=3D"30" transform-origin=
=3D"315.5px 65px" class=3D"task task0 "></rect><rect id=3D"ass2" rx=3D"3" r=
y=3D"3" x=3D"406" y=3D"85" width=3D"180" height=3D"30" transform-origin=3D"=
496px 100px" class=3D"task task0 "></rect><rect id=3D"bss1" rx=3D"3" ry=3D"=
3" x=3D"586" y=3D"120" width=3D"181" height=3D"30" transform-origin=3D"676.=
5px 135px" class=3D"task task0 "></rect><rect id=3D"bss2" rx=3D"3" ry=3D"3"=
 x=3D"767" y=3D"155" width=3D"180" height=3D"30" transform-origin=3D"857px =
170px" class=3D"task task0 "></rect><rect id=3D"asc1" rx=3D"3" ry=3D"3" x=
=3D"225" y=3D"190" width=3D"181" height=3D"30" transform-origin=3D"315.5px =
205px" class=3D"task task1 "></rect><rect id=3D"asc2" rx=3D"3" ry=3D"3" x=
=3D"406" y=3D"225" width=3D"180" height=3D"30" transform-origin=3D"496px 24=
0px" class=3D"task task1 "></rect><rect id=3D"bsc1" rx=3D"3" ry=3D"3" x=3D"=
225" y=3D"260" width=3D"181" height=3D"30" transform-origin=3D"315.5px 275p=
x" class=3D"task task1 "></rect><rect id=3D"bsc2" rx=3D"3" ry=3D"3" x=3D"40=
6" y=3D"295" width=3D"180" height=3D"30" transform-origin=3D"496px 310px" c=
lass=3D"task task1 "></rect><rect id=3D"acs1" rx=3D"3" ry=3D"3" x=3D"225" y=
=3D"330" width=3D"181" height=3D"30" transform-origin=3D"315.5px 345px" cla=
ss=3D"task task2 "></rect><rect id=3D"acs2" rx=3D"3" ry=3D"3" x=3D"225" y=
=3D"365" width=3D"181" height=3D"30" transform-origin=3D"315.5px 380px" cla=
ss=3D"task task2 "></rect><rect id=3D"bcs1" rx=3D"3" ry=3D"3" x=3D"406" y=
=3D"400" width=3D"180" height=3D"30" transform-origin=3D"496px 415px" class=
=3D"task task2 "></rect><rect id=3D"bcs2" rx=3D"3" ry=3D"3" x=3D"406" y=3D"=
435" width=3D"180" height=3D"30" transform-origin=3D"496px 450px" class=3D"=
task task2 "></rect><rect id=3D"acc1" rx=3D"3" ry=3D"3" x=3D"225" y=3D"470"=
 width=3D"181" height=3D"30" transform-origin=3D"315.5px 485px" class=3D"ta=
sk task3 "></rect><rect id=3D"acc2" rx=3D"3" ry=3D"3" x=3D"225" y=3D"505" w=
idth=3D"181" height=3D"30" transform-origin=3D"315.5px 520px" class=3D"task=
 task3 "></rect><rect id=3D"bcc1" rx=3D"3" ry=3D"3" x=3D"225" y=3D"540" wid=
th=3D"181" height=3D"30" transform-origin=3D"315.5px 555px" class=3D"task t=
ask3 "></rect><rect id=3D"bcc2" rx=3D"3" ry=3D"3" x=3D"225" y=3D"575" width=
=3D"181" height=3D"30" transform-origin=3D"315.5px 590px" class=3D"task tas=
k3 "></rect><text font-size=3D"15" x=3D"315.5" y=3D"70.5" text-height=3D"30=
" class=3D" taskText taskText0 ">A.test1() </text><text font-size=3D"15" x=
=3D"496" y=3D"105.5" text-height=3D"30" class=3D" taskText taskText0 ">A.te=
st2() </text><text font-size=3D"15" x=3D"676.5" y=3D"140.5" text-height=3D"=
30" class=3D" taskText taskText0 ">B.test1() </text><text font-size=3D"15" =
x=3D"857" y=3D"175.5" text-height=3D"30" class=3D" taskText taskText0 ">B.t=
est2() </text><text font-size=3D"15" x=3D"315.5" y=3D"210.5" text-height=3D=
"30" class=3D" taskText taskText1 ">A.test1() </text><text font-size=3D"15"=
 x=3D"496" y=3D"245.5" text-height=3D"30" class=3D" taskText taskText1 ">A.=
test2() </text><text font-size=3D"15" x=3D"315.5" y=3D"280.5" text-height=
=3D"30" class=3D" taskText taskText1 ">B.test1() </text><text font-size=3D"=
15" x=3D"496" y=3D"315.5" text-height=3D"30" class=3D" taskText taskText1 "=
>B.test2() </text><text font-size=3D"15" x=3D"315.5" y=3D"350.5" text-heigh=
t=3D"30" class=3D" taskText taskText2 ">A.test1() </text><text font-size=3D=
"15" x=3D"315.5" y=3D"385.5" text-height=3D"30" class=3D" taskText taskText=
2 ">A.test2() </text><text font-size=3D"15" x=3D"496" y=3D"420.5" text-heig=
ht=3D"30" class=3D" taskText taskText2 ">B.test1() </text><text font-size=
=3D"15" x=3D"496" y=3D"455.5" text-height=3D"30" class=3D" taskText taskTex=
t2 ">B.test2() </text><text font-size=3D"15" x=3D"315.5" y=3D"490.5" text-h=
eight=3D"30" class=3D" taskText taskText3 ">A.test1() </text><text font-siz=
e=3D"15" x=3D"315.5" y=3D"525.5" text-height=3D"30" class=3D" taskText task=
Text3 ">A.test2() </text><text font-size=3D"15" x=3D"315.5" y=3D"560.5" tex=
t-height=3D"30" class=3D" taskText taskText3 ">B.test1() </text><text font-=
size=3D"15" x=3D"315.5" y=3D"595.5" text-height=3D"30" class=3D" taskText t=
askText3 ">B.test2() </text></g><g><text x=3D"10" y=3D"120" class=3D"sectio=
nTitle sectionTitle0">(same_thread, same_thread)</text><text x=3D"10" y=3D"=
260" class=3D"sectionTitle sectionTitle1">(same_thread, concurrent)</text><=
text x=3D"10" y=3D"400" class=3D"sectionTitle sectionTitle2">(concurrent, s=
ame_thread)</text><text x=3D"10" y=3D"540" class=3D"sectionTitle sectionTit=
le3">(concurrent, concurrent)</text></g><g class=3D"today"><line x1=3D"3260=
5" x2=3D"32605" y1=3D"25" y2=3D"635" class=3D"today"></line></g><text x=3D"=
511" y=3D"25" class=3D"titleText"></text></svg>
------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://junit.org/junit5/docs/current/user-guide/images/extensions_lifecycle.png

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
n/0Nv9r+WnOAcaCsEWmc3djXJGrqbE5t7jg4/mBri3/Lgd9G/7bjkOWh6sOGh1ccoR4pOTJ4tOho
/zHpsd7jWce7Wqe33jkx6cTVkxNPtp+KOnXmdPjpE23stqNnAs4cOut39uA5n3NN573ON17wvHDg
d8/fD7R7tTde9L7YfMn3UkvHuI4jl4MuH78SeuX0Ve7V89dirnVcT7p+88aUG503BTef3Mq99fx2
we2BOwvvEu6W3dO9V3Hf9H7tvxz/tafTq/Pwg9AHFx4mPLzTxe96+of8jw/dJY/ojyoeWzyue+L+
5FBPeM+lPyf/2f1U+nSgt/Qvvb9qnjk8+/Xv4L8v9E3q634uez74YtlL45c7Xo191dof13//dd7r
gTdlb43f7nzn867tfcr7xwOzPpA+VH50/NjyKerT3cG8wUEpT8ZTHQUw2NDMTABe7IDnhFQAGJfg
+WGy+p6nEkR9N1Uh8J+w+i6oEi8AGmCnPK5zjgGwFza7hfCIDnvlUT0xGKAeHsNNI/JMD3c1Fw3e
eAhvBwdfmgFAagHgo2xwcGDj4ODHbTDYWwAcm6m+XyqFCO8GPwYr0TUjwULwlfwbmTx/3GTkov0A
AAAJcEhZcwAAFiUAABYlAUlSJPAAAAGfaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8eDp4bXBt
ZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA1LjQuMCI+CiAg
IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3lu
dGF4LW5zIyI+CiAgICAgIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICAgICAgICAg
IHhtbG5zOmV4aWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vZXhpZi8xLjAvIj4KICAgICAgICAgPGV4
aWY6UGl4ZWxYRGltZW5zaW9uPjE2NjI8L2V4aWY6UGl4ZWxYRGltZW5zaW9uPgogICAgICAgICA8
ZXhpZjpQaXhlbFlEaW1lbnNpb24+MTU3ODwvZXhpZjpQaXhlbFlEaW1lbnNpb24+CiAgICAgIDwv
cmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgqUb10PAAAAHGlET1QA
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
j12/3McmyJU3LpHfX9pkOb562Q/JeBW4+ot3z9S3dw3drHxeoG2bPOkvx2MS5HBc7lCf8Z7UBy8M
+1ksAX9DYxaeTJsjH3vvm2RZWjCn7n1QxDDY5uekLomtzP5YLb3y4ZUn5I57XlZLGabM2PJ++G4R
uVy3JGNZ3oP75e5/fFh+dKRXE9xJCwrVa230wKxfGiUV2ylP2vFj/TofkuWxgQhNUKjW5vclBX5K
asd4PWJM1huqabr4vHF4TvreRxx9LtQH+YoewPaapxFASQ/++IP/B2S8yUCtb+LqM2ffZvnC32+S
HWNMg+WNevY3uym37edA/T24+YUMnriL88ZLV/svre9oD4hudHjeeFnVylf4d7VA2i8t66DzRpXb
/75beN92eU7658yUKXLxkVdks0yT3/3dZXJzyhK29QtR9orxvVI4d7yOrf65PG+qOZT//1of2jhY
4CyaepqR6lRmgK6QDy8yWfY4cmzlqf+b+rC4np2ky51tCCCAAAIIINA5AgR+OqetOqyktYFCXeBn
nf29MxoDcU2CPr5S7QeJ9se2v4/1X83gZ1oagS/7RjN5avunz/Twv+gfN/6RKuIPlnmzPrKvs5/v
x66/NJhYXt3ml/2kZjA6jN/oI+Ht+memy5q5L3esfEb9IHZUbIM/cNNvdBW9f7g/wLbfKNjmH1UP
/ByqrbM/bnrTAZf6saEH5XlX+8tOOT/p5r21Aaq105JntISKnvAk33mTkGhtc560tccmBHOq+0aW
gUvYt1q0stsx+xKWOuFqfb3AT7GfN+7OyRI+FwKfZzqzyraEZcYS9w+90AiKvDRFF6j2PwsMgz7i
ug/633EmmM8CrtS31labp2sCzgEQ28+BIRz4cXfe1LwDfbu472rxtAOtG37YVueNVzRXfdvxORlo
R+mymJ1/dI/84HuPy+qBiUbnsvazM9yixT2r1OnXkvW3jNNzJ+Bd+HlTnKBVSvXP/mYzMm1SDTg1
DjNY7rixc8Ij/2Id7vOTAMRmBBBAAAEEEKgJEPihK7gR0A5C+D8m42vbNyuE/0PrtMHMj0paqYOS
zXJLej1j4GeM2Q3F/cHzxCvovWLVfkBsnma2JFy9Jv7sht2nMy8J4LeB6VJq9bzr5f619F/SfOZO
6DjvSa3sPx5zaepMq/oPtlgCSRu8m27Plw/deIksSZoJU/vR7bLcsdL5bWw6syyWgLfBP9dsByXV
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
5pq675eB7lJqQbrugfeCObope+ZOJJ574vn9q0W3KZd88sMHL1X+hcy/zhIc6/vli/dtSP4qrgK/
m9z0y1d3VlmTAfeC39ZMhQInql9PLiUvxdaUpN/enSUslq5fL195eJ3GPkFNViqpJ0GbTNvvqNBg
mSJfykv6fUm9bseEEaXNfBf9tl1m/+rbjPYXvrB4Uz7x2SF5dGC+47AnLMQ/CEjqwytsk+o85GPs
x/Jtlsnaanv3+yOb9xsvjRNW26QziD3mLUEpfaHlLH3RZ1r602YS+wXo/rVcB+t1xF579/vA9A9M
Qhn2+/faUp56S2D69Tza/kM2yzz0ysN8ALuC+6Rft8t8BvTZ+bY7pd04flur25bbpN9mTjjLu+nO
3vGLyaQtmIT17ef+m7vduCl2eNvJDS1vxJCQklf4ifTD6+Tqb47Ij4ev15f63rFWdgcz6J09l46d
k4NHzjnLns/P3k9TmaUS/FXa5aItAgg/tshitygBhJ+iBIkPgQoIIPxUALlbk4g8oPoDBf6LQn7h
R3sQIWnQMJG3Oyh0QV4bm3b2BHAflmNv0s6+P7vuXuXsF+Sufe78Pr0m9Qv6IBnTF6tMv/2H8auy
xd8LI0gs68CP+6Esq3SpNz/d66HB3ixfw7978V8V+cITW+XeXrXapv/C7L4UXZDhS5flgLsGu1O2
f/DQ7fL45l6J7tpUjd/hnNaOvcEc7UG5JgPOhYI26iwNNpBVtneVY2nXKuKd1iZLyke5fUmCMJKG
0vA3/bbjGc7sp/wBvnFnPb/Y18Qe/0AEjp/7vivTqKiOeD4Yc/F9T/lrbFPJIZaAtfbu87Z8v7He
Jhu8gn15XPHnM+tEXntPnjlzM3352EZ058hnYut+Zr+9G98fcvSLxvU8wtjwJK3+pJmy1m5CiZr6
ptPeffNptnOUmW9W9bd4u3Gt2qrbttuk47pXV05kLJuqYheIJMr97aIxOqLduC53etuJYq/gzKv7
h6ed5R+WJ+5vmepI0KZXyxe2XZPnDjkz81OXJfU+ajh6S+q7U1Ka9broLgGcd2m6JMtct0EA4ccG
VWyWQQDhpwyK2ICAZQIIP5YBd7N55cur/hfucTTGL0PK9ONWvfPpy7L/pWHZd/ZGQgDFZd0ZAWkv
5gqz2TN+ir04G3MM+Zg/buiFJ2TP/HB+6t5HefwLBjOuL1Ysw1GN300cCr5Qu/bqLAyEm7gTOevt
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
ECDw0wGVRBYRQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAARMBAj8mSqyDAAIIIIAAAggggAAC
CCCAAAIIIIAAAggggAACCHSAAIGfDqgksogAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIImAgQ
+DFRYh0EEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAoAMECPx0QCWRRQQQQAABBBBAAAEEEEAA
AQQQQAABBBBAAAEEEEDARIDAj4kS6yCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACHSBA4KcD
KoksIoAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAImAgR+TJT+f/buPdyOqj74+C/nJCE5JxeB
JFxPrkAuRkxCglxCTAVJeVNeoGKFgli0grWv+FRftPVBW5HH1uLlEd/2xfIqgtLSGkVqUxpEGgIo
JIETMc0FzfVwTQJpLuckIcnJO7P3rNkzs9fMrLmevc/55o+c2bNn1lrzWWvN3rN+e82wDQIIIIAA
AggggAACCCCAAAIIIIAAAggggAACCCDQBAIEfpqgkigiAggggAACCCCAAAIIIIAAAggggAACCCCA
AAIIIGAiQODHRIltEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAIEmECDw0wSVRBERQAABBBBA
AAEEEEAAAQQQQAABBBBAAAEEEEAAARMBAj8mSmyDAAIIIIAAAggggAACCCCAAAIIIIAAAggggAAC
CDSBAIGfJqgkiogAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIImAgQ+DFRYhsEEEAAAQQQQAAB
BBBAAAEEEEAAAQQQQAABBBBAoAkECPw0QSVRRAQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEDA
RIDAj4kS2yCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACTSBA4KcJKokiIoAAAggggAACCCCA
AAIIIIAAAggggAACCCCAAAImAgR+TJTYBgEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBoAgEC
P01QSRQRAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEDARIPBjosQ2CCCAAAIIIIAAAggggAAC
CCCAAAIIIIAAAggggEATCBD4aYJKoogIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAgIkAgR8T
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
QAABBBBAAAEEEEAAAQQQQAABBMoRIPBTjjO5IIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAKF
CxD4KZyYDBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQACBcgQI/JTjTC4IIIAAAggggAACCCCA
AAIIIIAAAggggAACCCCAQOECBH4KJyYDBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQKAcAQI/
5TiTCwIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCBQuACBn8KJyQABBBBAAAEEEEAAAQQQQAAB
BBBAAAEEEEAAAQQQKEeAwE85zuSCAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCBQuQOCncGIy
QAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQTKESDwU44zuSCAAAIIIIAAAggggAACCCCAAAII
IIAAAggggAAChQsQ+CmcmAwQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAgXIECPyU40wuCCCA
AAIIIIAAAggggAACCCCAAAIIIIAAAggggEDhAgR+CicmAwQQQAABBBBAAAEEEEAAAQQQQAABBBBA
AAEEEECgHAECP+U4kwsCCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAgggULgAgZ/CickAAQQQQAAB
BBBAAAEEEEAAAQQQQAABBBBAAAEEEChHgMBPOc7kggACCCCAAAIIIIAAAggggAACCCCAAAIIIIAA
AggULkDgp3BiMkAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEyhEg8FOOM7kggAACCCCAAAII
IIAAAggggAACCCCAAAIIIIAAAoULEPgpnJgMEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAIFy
BAj8lONMLggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIBA4QIEfgonJgMEEEAAAQQQQAABBBBA
AAEEEEAAAQQQQAABBBBAoBwBAj/lOJMLAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIFC4AIGf
wonJAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBAoR4DATznO5IIAAggggAACCCCAAAIIIIAA
AggggAACCCCAAAIIFC5A4KdwYjJAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBMoRIPBTjjO5
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
IPCTgY1OlRFAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQCA9BQj8pGe7UisEEEAAAQQQQAABBBBA
AAEEEEAAAQQQQAABBBDIQAECPxnY6FQZAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEE0lOAwE96
tiu1QgABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAgQwUIPCTgY1OlRFAAAEEEEAAAQQQQAABBBBA
AAEEEEAAAQQQQCA9BQj8pGe7UisEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBDIQAECPxnY6FQZ
AQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEE0lOAwE96tiu1QgABBBBAAAEEEEAAAQQQQAABBBBA
AAEEEEAAgQwUIPCTgY1OlRFAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQCA9BQj8pGe7UisEEEAA
AQQQQAABBBBAAAEEEEAAAQQQQAABBBDIQAECPxnY6FQZAQQQQAABBBBAAAEEEEAAAQQQQAABBBBA
AAEE0lOAwE96tiu1QgABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAgQwUIPCTgY1OlRFAAAEEEEAA
AQQQQAABBBBAAAEEEEAAAQQQQCA9BQj8pGe7UisEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBDI
QAECPxnY6FQZAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEE0lOAwE96tiu1QgABBBBAAAEEEEAA
AQQQQAABBBBAAAEEEEAAgQwUIPCTgY1OlRFAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQCA9BQj8
pGe7UisEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBDIQAECPxnY6FQZAQQQQAABBBBAAAEEEEAA
AQQQQAABBBBAAAEE0lOAwE96tiu1QgABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAgQwUIPCTgY1O
lRFAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQCA9BQj8pGe7UisEEEAAAQQQQAABBBBAAAEEEEAA
AQQQQAABBBDIQAECPxnY6FQZAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEE0lOAwE96tiu1QgAB
BBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAgQwUIPCTgY1OlRFAAAEEEEAAAQQQQAABBBBAAAEEEEAA
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

------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://junit.org/junit5/docs/current/user-guide/images/extensions_DatabaseTestsDemo.png

iVBORw0KGgoAAAANSUhEUgAAA+UAAASVCAYAAADKRn/FAAAgAElEQVR4nOzdd3gU1f4G8AlgECki
XRAv0kSKKCggIiKIXEGk2LAL6lUviuX+sKAmoYUmPUQgNCmCFCmhRpFmIJAQOgnEACmQkBBCSNnd
ZHff3x/7zGFns7szIWUzm/fzPPNAki1nZr5ndt6ZM7MSiIiIiIiIiMgjJE83gIiIiIiIiKiiYign
IiIiIiIi8hCGciIiIiIiIiIPYSgnIiIiIiIi8hCGciIiIiIiIiIPYSgnIiIiIiIi8hCGciIiIiIi
IiIPYSgnIiIiIiIi8hCGciIiIiIiIiIPYSgnIiIiIiIi8hCGciIiIiIiIiIPYSgnIiIiIiIi8hCG
ciIiIiIiIiIPYSgnIiIiIiIi8hCGciIiIiIiIiIPYSgnIiIiIiIi8hCGciIiIiIiIiIPYSgnIiIi
IiIi8hCGciIiIiIiIiIPqRCh3Gw2o6CgACaTCSaTCQaDAXl5eWK6efOmpsn+OQaDQbxeQUEBzGaz
p2ezXNC6LDnpbyrvPL18OHEqy6m88/Ty4cTJ3VTeeXr5cGKNcCr7GvGqUG42mxWh21MryT60V7Sw
7ukOwqn0pvLO08uHE6eynMo7Ty8fTpzcTeWdp5cPJ9YIp7KvEd2GcqvVioKCAhgMBuTk5LhcYDk5
OYXObJvNZsWklePzHM+8q7XDYDCgoKAAVqu1FJeMZ+llY0ba6WWd6qWdRMWhlzrXSzupYtFLXeql
nd5IL8teL+30RgzlsIVio9HoNPzK4VseTm6xWDzWTovFIobLuwrrOTk5MBqNHm1naeBGwvvoZZ3q
pZ1ExaGXOtdLO6li0Utd6qWd3kgvy14v7fRGFTaUWywWGAwGZGdnK0Jtbm4ujEajbs48y2f2jUYj
cnNzFfOSnZ0Ng8HgFQGdGwnvo5d1qpd2EhWHXupcL+2kikUvdamXdnojvSx7vbTTG1W4UF5QUFAo
vBoMBuTn5+sihKuxWq3Iz8+HwWAodLChoKDA0827bdxIeB+9rFO9tJOoOPRS53ppJ1UseqlLvbTT
G+ll2eulnd6owoRyk8mkOCuu95CqleNBiOzsbJhMJk83q8i4kfA+elmnemknUXHopc710k6qWPRS
l3pppzfSy7LXSzu9kdeH8oKCAkUYNxgMXnFGvKjk4fr24VxPByW4kfA+elmnemknUXHopc710k6q
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
GNoGayiXpDlz5mjYsGG67bbb9I1vfEN79uyR1DmUS21H1keOHKl77rlHI0eONK4Dl9pOhR87dqwe
eughPfnkk3r77bc1btw4HT9+XAkJCRo1apTR8Xpaz49//GM5HA5juf322/XKK6/o1KlTxmOWLl2q
sWPH6uGHH9Z9992nkJAQjRkzRsuXL5fL5dKDDz6osWPHqqamxuNjp0yZol//+te64YYbdMMNN2jC
hAnKzs6WJGVmZuqOO+7QAw88oDvuuEMLFizQuHHj9Je//EXNzc369re/rWuuuUbf/e539cADDxgz
qpeWlmry5MkaNWqUxo0bp0mTJhmT2EnSgw8+qM2bNxu39+/fr3vuuaev/p3d1h7KnU6nZs+ebdrW
7qCvBLyPdgZfQ83CDjViRigHPBjMoVySamtrVVRUdFmPrampUVpamukrwNqVlZWptLTUuF1SUiK3
2208R2Nj42Wt53LU19d3OuLc8avH2k8vv5zHNjY26uTJk8a2tmttbVV2drZxSn5DQ4OxXrfbrePH
jysrK6vTtrW2tionJ0cZGRmd1hkaGqrXX3/duP32228bXx/XHzqG8mnTpsnpdCohIaFPTmkHAADA
5SOUAx4M9lCOL05jY6MeeeQRnTt3TjU1NXrooYf67dR1yRzK25eAgIA+OaUdAAAAl49QboEZASER
ytG3du/erc2bN+uTTz7Rli1b+nVbugrlPTmlnb4S8D7aGXwNNQs71IgZodwCkw9A6n0otws+LCwD
fWmv5Z4uAHrP6WRMAt9CzcIONWJGKLdAoUAilLOwEMqB/ud0MiaBb6FmYYcaMSOUW2BGQEicvo7B
yyqEt19XvnXrVjU0NNAGgAGAMQl8DTULO9SIGaEc8IBAgsHKKpTHxcWZZmCnDQAAAHgXoRzwgECC
werSMD5r1iwdPny40+NoAwAAAN5FKLfAjICQCCQYvLo6Vb0rtAGg/zEmga+hZmGHGjEjlFtg8gFI
BBIMXl2dqt4V2gDQ/xiTwNdQs7BDjZgRyi1QKJAIJBi88vLyLutxtAGg/zEmga+hZmGHGjEjlFtg
RkBIBBKANgD0P8Yk8DXULOxQI2aEcsADAgmGOtoAAACAdxHKAQ8IJBjqaAMAAADeRSi3UFVV1d+b
gAGAQIKhjjYA9D/GJPA11CzsUCNmhHILTD4AiUAC0AaA/seYBL6GmoUdasSMUG6BQoFEIAFoA0D/
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
S4vS0tKMo6bbtm0zTv1ut2awqlpQAAAgAElEQVTNGuMobVBQkAoKCiTJdr11dXWaPXu2QkJCFBsb
q9jYWM2cOVMbNmyQ1Da53PTp0+VyuUw/Xyo8PFyZmZnG7aKiIkVFRcnpdCouLk5ZWVmS2oLyjBkz
VFpaaqz/ww8/VGhoqEJDQxUcHGy8tqKiIuODCEmaPXu2cWr+5Vw/XVJSohkzZsjtdmvv3r1avny5
cd+lE8C1nwJfVVWlwMBA1dTU6NSpUwoLCzPVwKFDh4wPG2bMmNHpgwCp7X+9c+dORUZGat68eQoP
D1dYWFiXrz8xMVGffvqpx+dqf1zHyQYPHz5sfPgjtX0A1P5hBgAAALyLUG6BGQEh9TyUHzx40HQ6
cGJionJyciyf58iRI9q8ebOktkm24uPj9fHHHysnJ0dRUVFav369afbdnJwczZo1q1PIT0lJ0fLl
y1VWViY/Pz9jIrP268Db17Fu3TrjGsX4+HjT9YoNDQ2aM2eOKisrVVVVZZpMzm69GzduVGJiok6f
Pm0sSUlJiouLkyRlZGQoNja2088dNTc3y9/fX/n5+cbt9qPYFRUV2rZtm2bPni23263S0lIjKDc3
NyskJER79+41Tj1ftGiRDh06ZPwv2z+IOH/+vPG62q/db1dRUdHljOwHDx5UfHy8pLZJ7Hbu3Gnc
d+zYMdOlBRs2bFBKSorWrl1rnCXwySefaPHixaZ1xsfH6+jRozp9+rT8/PxMlzZkZWUZp6evXr1a
NTU1xv+4/UOEjq9favsAJS8vz+NztT+u/f2V2iYY3LJli3G7PdxfDmaFBryPdgZfwzgadqgRM0K5
BSYfgNTzUB4YGGiEmqKiok4B6VLNzc0KCwszJiXrqKGhQbt37zbNLr5jxw7Fx8ervr5e9fX1Ki8v
1/bt2zVz5kwVFxerurpa/v7+xvrOnz+vsLAw49T28PBw474VK1YoMTHRmLE7OTlZmzZtktQWDKOi
oozn9bTe4uJizZw5s9NXk+3bt884bXrz5s1KTk7u9HNHTU1N8vPzU1lZmSTp1KlTioqKMj4YOHHi
hKKiouR2u3X48GHj6O/JkyeN55HajvZ2XM+6deuMo/9HjhwxHTVesWKFEf4jIyO7/Dqw9evXG38f
GhpqCu7JycnG2QBS25kPkZGRWrBggbHdn332mUJCQozT7k+cOGFM3Nc+IV77GQnp6elavHixGhsb
5efnp3Pnzklqq6XZs2cbZ1V0fP3t/5vGxkaPz9U+W3vHGdqjoqKMMxMaGho0c+ZMXbx4sdN70BUm
oAK8j3YGX8M4GnaoETNCuQUKBVLPQvmBAwc0Z84c4yvREhISjJ89qa6uVlxcnJYuXark5GSlpKQo
KSlJH3zwQaevOFuxYoX8/PyMZfbs2Vq8eLER6qS2oOjn56ewsDAFBQUpPT1dUtvEY06n0zjyUlBQ
oFmzZikoKEihoaFauXKlcd+2bduMgG633tjY2C4HjidPnpSfn58aGhoUHR1tHK3t+HNHbrdb/v7+
RqCsra3V3LlzNWfOHMXExCguLs44XfvkyZOaPn26UlJSVFNTo3nz5iksLEwLFizQ3r17NWfOHG3d
ulVS26n906dPV3Z2tj788EPjzIT2oDt37lzNnz9fn332WZf/n4iICGVlZamurs50Tbf0rwngLn3N
HT9kaZ/Ab/r06YqMjFRkZKTpevo1a9bI399foaGhWrJkifHhxpIlSzR37lxFRERo48aNWrp0qXFq
ecfXf/z4cWPSFE/Pdfz4cdOp6e3fd19RUSGp7QOBjnMI2CEsAN5HO4OvYRwNO9SIGaHcAjMCQuqb
7ynvrqamJhUWFqqioqJb36Hdlerqap09e9b0XeZWz1lcXHzZ38F9uevtqYiICNPXrDU1Nens2bNd
bl9jY6OxHW63W+Xl5cb71tjYaJpFvb6+vsvr+l0uV5fXc/c1l8ul0tJSVVZWdnl/TU1Nl7O+V1RU
GEe23W636Sh2x9ffnefqSlNTk8LDw42AfjmYFRrwPtoZfA3jaNihRswI5YAH/RHK0TY7+L59+/p7
M4aczZs3W35DAAAAALyDUA54QCjvH7W1tV1+fzm85+LFi7znAAAA/YBQbqF9YiUMbYRywLPLveQB
QM/RzuBrGEfDDjViRii3wOQDkAjlgB0moAK8j3YGX8M4GnaoETNCuQUKBRKhHLBDWAC8j3YGX8M4
GnaoETNCuYXIyMj+3gQMAIRywLMDBw709yYAgx7tDL6GcTTsUCNmhHLAA0I5AAAAAG8ilAMeEMoB
AAAAeBOh3AIzAkKyD+VWS/vfAYMdfSXgfbQz+BpqFnaoETNCuQUmH4BEKMfgtnz5ctXV1fXob6ur
q5WQkKB//OMffbxVbfLz87V69WpVVVWZfn/mzBnt2LGj08/ttm7dqsLCQiUlJenixYte2Tbgi8aY
BL6GmoUdasSMUG6BQoFEKMfg5nA4enSZRUtLi66//nr96Ec/0t///ncvbJn02muvyeFwKCwszPT7
+Ph4PfbYY51+lqSSkhJ961vfksvlUlJSkt566y2vbBvwRWNMAl9DzcIONWJGKLfAjICQCOUY3Hoa
ys+cOSOHw6Ha2lqv9JV1dXUaNWqUnn/+eX3nO98x3ecplP/hD39QVFSUJKm1tVX33nuvsrOz+3z7
gC8aYxL4GmoWdqgRM0I54AGhHIOZw+FQeHi47r//ft1888164403VF9fb9wfERGhSZMm6a677tKb
b76p+vp6VVdX61vf+pYcDoe+//3vq7CwUGVlZfr5z3+u66+/XnfccYdmzJghl8slSfLz89PChQv1
6quv6re//a2ktlPTn3vuOd166616/PHH9dFHH5m2a9myZXrggQd06tQpORwOnThxwrjPKpRfvHhR
I0aMUHV1tfHYd955R2+++aZ33jwAAIA+QigHPCCUYzBzOBz6xje+odTUVG3cuFF33XWXcY34okWL
NGHCBG3atEm5ubl67rnn9POf/1xut1u7du2Sw+FQbm6uWlpa9G//9m/64x//qIqKCmVmZmrixIkK
Dg6WJL388ssaPXq03njjDR06dEiNjY1GyM/NzdWaNWv0la98RRkZGcZ2PfHEE5ozZ44k6Vvf+pbe
ffdd4z6rUL5v3z6NHz/e9PoSEhI0YcIE772BAAAAfYBQboEZASERyjG4ORwOLVu2zLg9b948TZw4
UZJ07733av78+cZ9x48f1/Dhw3Xx4kXl5eXJ4WjbfXzyySdyOBw6e/as8diwsDA9/PDDktpC+dNP
P23cl5iYqJtuuknNzc3G71544QW98847ktpOjR82bJhxWn1QUJAmTJig1tZWSdahPCYmRlOmTDG9
vr1798rhcJiOngO+iDEJfA01CzvUiBmh3AKTD0AilGNwczgcKioqMm7v3LlTY8aMkcvl0rBhwzRm
zBjdfPPNxnLVVVcpLy/PFMpfeOGFTkejt2zZoltuuUVSWyj/5z//adzndDo1YsQI03pHjx6t1157
TZI0bdo0XXnllZo0aZJx6rzD4dDOnTslWYfyt956Sy+99JJpO0pLS3t83TwwkDAmga+hZmGHGjEj
lFugUCARyjG4ORwOpaenG7cjIyP1/PPPS5LGjBmj999/37jP5XIpNzdXra2tplD+8ssva+TIkWpo
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
2aK0tDRlZGQoOTlZUVFRKi4uNh7X0tKigIAABQcHKzQ0VPPmzZO/v7+ioqLU0NBg+9rKy8sVFBSk
ZcuW9fJdMjty5IicTqdmzpzZacnKyurxetetW6ft27df1mODg4P1+eef2z4uJCREp0+f7vE2tTt8
+LBiYmIkSXl5eTp48GCP1pOamqpNmzZ1ed/mzZs1b948ZWdn93g7e2rr1q3y8/PTkSNHTL9ftmyZ
goODu72+lJQUVVVV9dXmSZLS09NN/8vAwEAFBgbqvffeU2BgoPz8/LRo0SJdvHixR+uzUlRUpHnz
5vV4u7vD7XZr3rx5xmvz8/PTrFmzjNt79+7t9jp7U6/44jDRG3wN42jYoUbMCOUWKBRIfRPKU1JS
tG/fPklSbW2tFixYoObm5i6fb9OmTUpNTVVzc7OampqMo6YtLS0qLi5WdHS08djCwkIFBASYjqBX
VlbKz89PZ86csX1t27Zt0/r163v83ljZsmWLkpKS+ny9CxYs0MmTJy/rsRcvXrQ9+l9bWyt/f/9O
R397oqmpyfggZP369UpJSenRepYtW6bDhw93+n1DQ4OcTmefB9nLUVZWpsDAQIWHh+uTTz4x3Tdn
zhy9//773VpfdXW1nE6n8SFVXwkNDVVOTo4k6cKFC/Lz81NlZaVxf2VlpcLDw7Vy5cpur8+T/fv3
a9WqVT3b6F6orq6Wn5+fxzMrLkdv6hVfHEI5fA3jaNihRswI5RZWr17d35uAAaC3obympkbh4eFG
cN66davlUak9e/YYA68TJ04oLi5O27dv17Zt27Ro0SJJUnh4uBE29+3bZwrpUttRuxkzZhinsTY0
NCg5OVkxMTFatWqVcaR9x44dCgoKUmRkpBF009PTFR8fr/DwcCUnJxvbXFRUpJSUFB09elRLly6V
2+22XK8kxcTE2B6xS09P18qVKxUbG6uPPvrIFIxPnz6tpUuXKjIyUh999JGamprU2Ngof39/HT16
VKtWrdKiRYss38eCggJt27ZNkowzDT755BPFxMRo5cqVxpHSkydPKjw8XGlpaUpISNDixYuVn59v
rKe8vFxr1qxRdHS0NmzYYJz+3NzcrJUrV6qgoECrVq1SSUmJtm7darxPc+bMUWRkpPLy8iRJp06d
0sqVKxUTE6MdO3aotbXVeI7c3FytWrVKS5cu1fHjxzVnzpxOp6mWl5dryZIlCggI0Lp167p8/qam
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
iUb30t5QXllZqYiICONKcEJCguWVuk2bNhlXTPft26fp06dr7dq1WrVqldHBjoiIaHUbemxsrDZv
3qyvvvrKdFVt/fr1Cg4OVmRkpLZu3aqpU6dq1KhRWrp0qSSptrZWiYmJmjp1qubOnWu6Cp+QkKCs
rCwtX75cO3bsUHZ2tsaOHavGxkbLfXXs2DGtXLlS0dHRio+PV1ZWljGvvLxcCxYsUEREhBYvXmyE
+8TERC1atEirV69WTEyM4uLijCDcUm1trebNm6f6+nrV1tYqLi5O+fn5iouLU0xMjLZt2yap6VZw
X19f7d69W3PnzlVMTIxpf7vdbm3ZskWxsbGKjY3Vnj17LN/zjh07tHPnTu3atUthYWEaP368tm7d
arvvysvLtWjRIs2YMUMbNmzQ3Llzje1r1tjYqPj4ePn5+WnWrFk6fvx4q/VLTVefZ8yYoYiICCUm
Jhp1lJKSopSUFK1bt07Tpk3TqlWrdOLECX311VeKjo7WN998Y/n/JDXVxpdffqnU1FR99tlnpnkh
ISHatm2bvvjiC0VGRio5OdmouZqaGn3zzTdGmM/KytKePXv05ZdfyuFwKDY2VtXV1UpNTVVqaqq+
/vprrVixQpKUk5NjbN+yZctMt8jn5uZq9uzZioyM1OrVq1VfX99qv588eVIOh6PVrfWlpaVyOBwq
LCyUZF2HSUlJGjdunCIjI5WXl2fs3y+//FLTpk3T6tWrjcc/UlNTFRsbq+TkZEVFRWn27Nmm24c9
vZecnBwtWrRIkZGRWrJkifEhmKfaa1ZdXS2Hw2Gqp9LSUi1cuFDR0dFasmSJampqPK6rrXq12iZ0
Hnv37u3oTQDOCP1o2KFGzAjlFhh8AFL7Q/myZcuUlpYmqem50cmTJ7f5bLfT6TTmNV9Nb36eddKk
ScrKypLL5VJkZKTp7zIyMhQWFiaXy6Xk5GRNmTLFmFdYWCg/Pz9lZmaqtLRU8+fP19y5c1VSUiKX
y6Xw8HAlJCQoPz9fSUlJCgoKktvtlsvlUkBAgCIjI7VmzRodP35c69ev1+TJk3XgwAHT1BweXC6X
YmJitGXLFh09elQJCQkKDg6W1BRgP/vsM23ZskWHDx/W559/rlWrVkmSpk+frpCQEG3ZskX79u1T
SEiINmzY0Gr/5OTkKCQkxPi3v7+/4uPjdejQIS1atEj+/v6SmsKdr6+v4uPjdeDAAS1btkyjzMjM
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
TG5ursLDw411N49P0Ozw4cOaOHGiXC6XTp48KZfLJafTqaysLE2aNMlYdty4ccbAhmlpaZo+fbrx
GsXFxQoMDFROTo5cLpdqa2s1atQolZeXa+3ataZl6+vrlZ6ersbGRtN+b2xs1NixY40r2c2OHTum
UaNGqaioyGMdSk1XnZs/BNm2bZsmT55sPAuenZ1tfLBx6NAhBQYGmtbz+eefKzU11eN7cTqdRu2W
lZVp1apVGjt2rNxut8faaykoKMjopGzdutUYQ6J5qqqqUl1dncd1tdxvnpYDAADnD0I54MHZhvKg
oCDjyu7hw4c1c+ZMj+txOp0KCwszDY7WrLa2Vhs2bDANzhQXF2cMoNXSuHHjjFvcIyIijNfbuXOn
Mcp5RUWFfH19jXnHjh1TWFiYEXgiIiJMV8V3796t4OBgVVZWtpqcTqf2799vGixsx44dcjgcKikp
UXFxsRwOh/Gs8Y4dOzRz5kw1NjZq8eLFWrNmjfF3mZmZmjRpUqv31Ly9dXV1xgjyLUdhj4qKUnp6
epvzpkyZYoScSZMmKSkpSY2NjaqurtbcuXONq5KnvufFixcbz70vWrTI+Lenfdd8ZbM5aO/du1e+
vr5tfhJcXV0tPz8/Izyeuv4vvvhCcXFxxntJTEw0bos/db/FxcWZnsOfNm1am6N3b9myRZGRka0C
2dy5czV//nzjtvPmgVeOHz+uGTNmGKOdx8TEGFdZm5/dzszMND60aa7P5cuXKzEx0Xj9VatWGQMQ
NjQ0aNGiRcaV3C1btig0NFSVlZVyuVymD5Ja7vfmwdyOHj2qmpoaVVZWKi0tzfQcuKc6lGQ8qy41
jXrf/IhIZWWloqKijA82Nm/eLD8/Px07dkxut1tpaWmaNGmS3G63x/eSlZWlqKgo4xb1ffv2KSoq
Sm6322PtNSsvL5fD4TDuKklPT9fYsWONO1+ys7MVFBSkEydOeFxXy/3maTkAAHD+IJRbYERASGcX
yrdt22a6chgbG2v825OKigpNnz5ds2fPVmJiopKSkhQfH6/58+fr4MGDxnIHDhzQ2LFjTVfOm0VF
RSkhIUF1dXXy8/Mzltm/f78CAgKMZ4kTExPlcDgUFham4OBgY+Cn5tHLW14Vb162rengwYOqrKxU
SEiIwsLCFB4erm+//Vbjxo0zQsfChQvl6+uriRMnatasWcb3pE+ePNl05XPNmjXGc8kt7d27VxER
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
U9++fXXjjTfq3nvvNYXy119/3bSeX/ziF8YdCdHR0brnnnt09dVXa8SIEUYol5o+sLnvvvvUo0cP
DRs2TPHx8ZI87/+Kigr5+PjowIEDpnX+7W9/65AB5wAAwHeHUG6BEQEhEcph7aOPPtKwYcNMv+vf
v3+rUH7s2DGVlZVJknbv3q1XXnlFw4YNU2NjowYNGmRccZWkbdu26euvv9ann36qn//856bX/vWv
f63o6GjjtTdt2mTalpahvPkWbMkcykeOHKk333zT9LoFBQWqrq7W1KlT9dBDDxm/d7lcio6OVnV1
tcdQfuq58tRQvnr1al188cWqra01lvnss8+MDxhO3d62Qnnzz22F8sbGRt1333369NNPJTUF9Ntv
v11HjhyR1PR8d+/evY3lW4byZ555Rn/605+Mr1ULCAjQM888I6kplDcH9GbXXHON0tLSlJqaqosu
ukjbtm0z9tVFF12k1NRUVVdXGyOmFxYWavz48erVq5fKyso87v+amhr5+Pi0GrH/+eef9/qo9vCe
iIgIpaWltft16JOgs6FmYYcaMSOUW2DwAUiEclhbv369vv/972vt2rWSmhqXtp4pj4+P1/Dhw40B
xJYuXao777xTkvTuu+/qhRdeUGVlpSoqKnTLLbdo7dq12rBhgy688EJt3LhRkpSfn6/LL79cBQUF
xmufTSifNm2aBg4caNyynZSUpEsvvVSFhYUqLS3VJZdcYlyBj46O1sMPPyxJmjx5simwexro7dRQ
fuLECV155ZUKDQ2Vy+VSfX29HnzwQc2ZM6fN7bUL5f/93/+t0tJSlZaWas+ePXrqqad00003qby8
XFLTleVXXnlFUlNYfvnll01Xyvv27Wt8EDJ06FDNnDlTknTs2DHdcccdpivlPXv2VEZGhhobGzVz
5kwNGjRIkjR37lxdf/31crvdkqSoqCj5+Phox44dKioq0pVXXmkE8+LiYvXp00dHjhzxuP8l6bbb
bmv1TPldd9112iPL4/zj7+8vPz8/xcbGtmvAPvok6GyoWdihRswI5RYoFEiEcnj26aefysfHR0OG
DNF9992nxx57rFUodzqduv/++3XZZZfpgQce0G233WYMXJaXl6c77rhDV1xxhfr37288Fy41nYO+
973v6fbbb1efPn1Mt3ifbSh3u93661//qh49euj6669X3759Tc+mjxs3Tj169NCgQYN0zz33GOvY
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
5RaYERASoRywQ18JK1lZWerXr5+2bdsmqflseb9+/ZSVlSXJOpTv3r1bF110kUpLS43Xqq6uNr7n
fT6h/Omnn9bo0aONnywbO3asnn76aUnSX//6V3388cfGY48cOaKkpCRJbSd6ax3KP/jgAw0fPty0
nuzsbF1++eXyeDzn+jadE9oZAg0123slJSXp1KlTnX4dasSMUG6ByQcgEcoBO/SVsJKcnKzBgwcb
ATU2NlZBQUHtninPycnRxRdfrNraWjU2Nmrw4MFyOBxyu906deqUnn76ab355puSrEN5VlaWiouL
TUvLd8pvv/12zZ07V5J08uRJ3XnnncaZ8qVLl2ro0KEqLCyU2+3Wiy++qP/7v/+T5DuUL1y4sM13
ypcuXapf/epXXfk2SqKdIfBQs72Xy+XS+PHjtXHjxk6/Dv6DUG6BQoFEKAfs0FfCSn19vR566CHd
dNNNGjx4sN566y099dRTuvvuuyWZQ3lTU5OGDRtmTAS3ZcsWBQcHKzg4WJdffrn+9Kc/qbKyUpJ1
KG9vefTRRyVJiYmJGjhwoO655x7dfvvtioyM1NVXX63PPvtM9fX1+vOf/6xLLrlEwcHBeuyxx3Ty
5ElJvkN5WVmZ+vTpY5x9l6Tw8HC9+uqrXf5e0s4QaKjZ3svlchlLZGSkioqKzvt18B+EcgsHDx7s
7k1AD0AoB3yjr4SdgoICI7h6vV6VlJRYPra8vNz4d2Njo7Kzs7usxmpra5Wfn2/crqioUG1trXG7
rKxMFRUVHXrNZ599VsnJycbtBx54QJs3b+78xp6FdoZAQ832Xq1DeUhIiFwul5KTkzt8STs1YkYo
B3wglAMArOzfv1+PPPKIJGnz5s3G99QBoLdqHcpbljFjxnTJJe0XMkI54AOhHADgy8yZM1VYWKjp
06ef92WcABAo2gvlXXVJ+4WMUG6h9e+S4sLV2VBu13GxsLCwsLCwsLCw9LalZSx8vsuFhlBuweVi
8gEQyllYWFhYWFhYWFg6uhDKO4ZQbsHlIpSDy9cBO/SVgP/RzhBoqNneq70A3jLhW+vfMGcM3TGE
cgvMCAiJDgWwQ18J+B/tDIGGmu292gvlERERbb5Hzhi6YwjlgA90KAAAAECzliA+ZswYjRs3ThkZ
Ge0+jjF0xxDKAR/oUAAAAIBmLaG89aXq7WEM3TGEcgvMvg6JDgWwQ18J+B/tDIGGmu292rtUvT2M
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
erTNe9AZzAoN+B/tDIGGcTTsUCNmhHLAh86E8ilTpmj//v2Smi/bjouLM4Ll2b755hvjkuz4+HgV
FRWpurpa8fHxysrK0oEDB5SYmGg6y75hwwa5XC7NmjVLs2bNUnR0tBwOh06fPi2p+VLslgnePB6P
QkNDdezYMTU0NCg8PFzh4eGaPHmysTidTrndbm3fvl3z5s0zbZ/duhYtWmScUZ44caLpkuoWOTk5
mjp1qnHb6/UqJSVFoaGhCg8P1+rVq42B5/z5843v4dfW1uqrr75STEyMJk+erOjoaEVFRbXZL0lK
SkrS119/rfz8fEVERFi+361NmDBBR44cUWlpqcaPH296jyMiIozvda9fv15ffPGFPB6PYmJitH//
flVXV2vcuHHG+yA1zzwfEhKi2tpazZw5U1lZWW3W6fF4lJWVpTlz5mjSpEmKi4uTw+Fod/+3bNmi
+fPn265ry5Yt+uyzz4z7Tp06ZfqufXl5uVwul2pra23fEwAAAPxwCOWAD+cbyjMzMxUSEmK8TlJS
ks9Jy7Kzs7Vq1SpJ0u7duzVnzhytW7dO+fn5io2N1fLly00Tp1VUVGjcuHHKyclRYWGhCgsLlZ+f
L4fDYczYvWzZMuOSx2PHjik0NFQej0dlZWVGAPR4PPJ4PKqrqzNef9myZVq/fn2H1jVlyhQVFBSo
srJSISEh7U60tnbtWlPYP3PmjJqamtTY2Ki8vDxNnTrVOCsdFhZmXGa9cOFCLV68WFVVVZKaJ85r
Ocvfer+k5g8EioqKtH79es2ePdtYV0NDg3bv3t0mpJ88eVIhISFyu93KzMw0bV91dbWcTqcRYrOz
s42Q3fJhR2FhoZxOp+k1N2zYoBUrVsjj8cjpdJrOzh86dEjHjh3Ttm3bNH36dONnzvLz802TsLXe
/5ZL/H2tq+VxX331lXHf3r17TV932Lp1qym0AwAAoGcglFs4+7u7uDCdbygPDw/X119/LUk6cuSI
5s6d63M9jY2NioqKavdnxOrq6rR582bTJGVJSUlavXp1m8eGhYUZl7hHR0cbr7dz507ju8ynT5+W
0+k07jt58qSioqKMS6ejo6ONM/znsq6amhrjcvKcnBzL2TTT0tKMS8slaebMmcrJyZHUfIn6zJkz
lZubq1OnTsnhcKihoUENDQ1yOBxGeD1y5IgmTJhgXFXQ3n7V19dr69atioiIUHB7BRwAACAASURB
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
A4qLi5MkPffcc/rkk09UXV2tyy67TLm5uZKsQ3lWVpYuu+wyud1uVVVV6eOPP9Ytt9yi4OBgPfro
o5ah3NdjnU6n/v73v5vW84c//EFRUVGSpLi4ON1777265pprNGLECCOU+3pffv/73+vKK680vZ9X
Xnml5s2bp9OnTysoKEgHDx40rfP111/vlgnnOou+EvA/2hkCDTULO9SIGaHcApMPQOpdofzBBx/U
v//9b+N2bm6ucaY8KipKd9xxh+nxJ06cUHl5uWpqaoyZwY8ePapJkyapf//+Ki8vtw3lv/nNb+R0
Oo3bHo9H/fv314EDByRJS5Ys0e23367k5GT98pe/NB5nFcrfeecd/eY3v5EkRUREaNiwYSopKZHU
/P3uq666ynhs61Du67FOp1MjR440ree6667Trl27lJWVpX79+mnbtm2Sms+W9+vXT1lZWT7fl+ef
f15vvPGG6TWLi4tVU1Oj2tpaBQUFadOmTab7n3vuOU2YMKHNPvtL6++4dwZ9JeB/tDMEGmoWdqgR
M0K5BQoFUu8K5S6XS7fffrvy8vLkdrv1v//7v0Yoz83N1cUXX6z09HRJUkFBgQYNGqRFixaptLRU
V199tRFAjx07ph/96EcqKSlRTk6OLr74YtXW1kpqG8rHjh2rO++805hMbsWKFabvkdfX12vAgAG6
6667NHXqVOPvkyZN0rBhw3TixAmdOHFCBQUF+uSTT3T55ZcbAfn111/XSy+9JKk5LI8aNcp0pvza
a681Lj339Vin06krr7xSOTk58nq9mjt3rn76059KkpKTkzV48GB5PB5JUmxsrIKCgrRjxw6f78us
WbMUHBxs7Hd6erouv/xyHT16VJI0dOjQNt8pv/vuu7V69eoO/q+eP5fLpYSEhE5PLkdfCfgf7QyB
hpqFHWrEjFBugRkBIfWuUF5TU6MnnnhCffr00Y033qiXX35Z119/vREc4+Pjdemll+q2227TpZde
qn/961/Gc99++2316dNHDzzwgIYMGaIxY8ZIag64w4YNMyY/OzuU19TUaOTIkbr44ot1zz336Jpr
rmkTPF977TX169dPJ0+eNP42adIkBQUFGcuPfvQjPf3000pLSzMes3v3bt18880aOnSobr75Zk2b
Nk033HCD3n77bUnSP/7xD/Xv319paWk+H+t0OvXkk0/q5ptvVnBwsC6//HJjhvX6+no99NBDuumm
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

------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://junit.org/junit5/docs/current/user-guide/images/extensions_BrokenLifecycleMethodConfigDemo.png

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
9dcVERGp+ijCAAAgAElEQVRhaR+AC3G8BysRvEywI0IieME63tacrKwsvfjii2rXrp1efPFFDR48
2CV4TZs2Td27d9cdd9yhQYMGqbi4WNLFwau25bKzs9W5c2fVq1dP9913n4qKilRcXKzBgwerbdu2
CgkJ0ZQpUy7qU23B64cfftCzzz6r2267Tb169XI5a7Rt2zY999xzCgoK0oMPPqi9e/fW+t61BS9J
+uijj9S4cWOVlpZKkhYsWKBHH31UwcHBeuGFF5SYmChJeu6551S/fn117NjRuMzyww8/VNeuXXXX
XXfp9ddfV1FRkSTPwWvNmjX63//9X40dO1YhISGSqj8H6OGHH9aNN96o7t27a9WqVcbyv/3tb7Vg
wQL99re/Vfv27TVu3DhFRkbq7rvv1h133KGwsDBj2QuDl1R96eN1112n4cOHG2Oktr7Xtt2ys7P1
2muvqXXr1vr1r3+tESNGGOt9/PHH9fHHH+uxxx5T06ZN9fTTT7v8zmbbUpLmzZunRx99VM2bN9fz
zz/vcjmp2biTpIceekiRkZHG11FRUerWrVut2xmwCsd7sBLBy8Tp06f93QXYAMELVvG25jz11FP6
3e9+p507d2rKlCm6/vrrjeA1e/ZstW3bVl999ZVSUlL07LPP6sUXX5TkGrzMlquoqNC6devUsGFD
paamqqqqSq+88op69+6t2NhYxcbGqn379goPD3fp04XBq7S01DgAT0lJ0YoVK3TTTTdp//79qqqq
UpcuXbRy5UplZ2dr9OjR6tKlS63vbRa8Nm7cqICAAB0+fFh5eXlq3bq1NmzYoNzcXA0ZMkRPPvmk
JCktLU033XSTVqxYoXPnzikmJkY9evRQYmKi0tLS1Lt3b40aNUrST8Fr8uTJ+vLLL41WE9jmzp2r
wMBA/e53v1NkZKRycnJ08803a86cOSosLFRkZKRuvPFG7d27V5LUokULde/eXZs2bdL8+fMVEBCg
e+65R99++63mzZunevXq6cyZM5JqD16S9Mgjj+hPf/qTTp8+bdr32rbbRx99pNdff13p6ek6cOCA
mjVrpu3bt0uqDl633nqrFi1apNjYWP3mN7/RQw89JElut2V6erpatmyppKQkpaSk6E9/+pP+53/+
x+O4q6ysVOPGjZWcnGz8XidOnPDb2UWgBsd7sBLBC3CD4AU7KiwsVMOGDV3OLD355JNG8OrYsaPL
GalDhw6pQYMGOnv2rEvwcrfc+ZetnTp1SvXq1VNCQoKx7PTp09WzZ0+Xfl0YvBYvXqwWLVq4PCDi
j3/8oz744AOVlJSoVatWcjgcKigoUGVlpZKSklRVVXVJlxpKUm5urgICApSQkKCsrCzFxsZKkkpK
SjR79mwFBgYay55/qWFSUpJSU1MlSWfOnNGAAQPUt29fST8Frx49eqhXr15G+/DDDyVVB6+bb75Z
JSUlkqRJkybprrvucunXCy+8oP/93/+VVB28vvzyS+O1G2+80eWekhtuuEG7d+82XqsteP3jH//Q
888/77HvF263HTt2KD8/X1J1+AwJCdGECRMkVQevN954w1g2Li5OAQEBSk9Pd7st4+Li1KhRI61Z
s0ZOp1Nnz57VDz/8IMn9eEpOTlaDBg1UXl5uvF5VVaUbbrhBa9asueh3BoBrEcELcIPgBTtavXq1
br/9dpfvDRs2TP3791dFRYXq16+vpk2bqmXLlka74YYbdPz4cSN4eVru/IP4rVu3KiAgwGW5oKAg
dejQwaUPFwYvh8Ohhg0buvzcLbfcYhzwR0dH67777lP9+vX18MMPa9myZZIu7R4vSYqPj9cNN9yg
8vJyFRYW6uOPP9avfvUrBQcHq1evXqbBKzk5WQMGDFDz5s3Vvn173XvvvRcFL7OzMBdeqjlw4ED9
7W9/c1lmyJAhevnllyVVB69vv/3WeC0oKEjbtm0zvr7xxhuNh2eYBa9+/fpp5MiRHvt+4XbbvHmz
nnrqKTVt2lT33nuv2rRp4xK8Fi1aZCxbUVGhBg0aKDEx0eO2nDhxolq3bq0mTZqoX79+2r9/v8fx
tGbNmovGrCR16tTJ8nvNAMBfCF4mzr/uHj9fBC9YxZuaExUVpeuuu07nzp0zvvenP/3JOOPVtGlT
/ec//zFeq6ioUEpKiqqqqlyCg7vlzj+IT0xMVL169ZSRkWEsW1RUdNHj1S8MXmFhYercubPLMjk5
OcrNzdW5c+eMnz958qQ+++wzBQYGKjc395KD17vvvqtHHnlEUnUY6Nq1q06dOiWp+v6xm266yVj2
/ODVr18/9e/f3/jg1BEjRqhfv36SvA9eH3/8sR5//HGXZX7/+99r1qxZkqqDV83lfVLtwavm69qC
V3Z2tho2bKiNGzcqLCzMbd/P325lZWVq3ry5pk2bZpxl6tOnjyZOnCipOnjVhDCp+uxUUFCQKisr
3W7L06dPKzc3V5J04MABvfbaa3r44YcluR9P69evV8OGDVVRUeHy+13qQ0+AC+3bt88483wlON6D
lQheJrjZEhLBC9bxpubk5+fr1ltv1dixY1VeXq7Dhw+rWbNmRvB69dVX9fTTT+vMmTMqLy/XiBEj
jIcYnB8c3C138OBBNWjQQMXFxXI6nWrXrp1CQ0NVXl6u/Px89evXTwMHDnTp14XB6/Dhw2rQoIFi
YmIkSSkpKWrbtq2WLVumjIwMNW3a1AhfmZmZuvnmm3Xq1CmX95aqg1fXrl2Vk5OjnJwcpaSk6JNP
PlHjxo21Z88eSdLbb7+t1157TVL1Af+rr77qcpamefPmxoM9OnXqpHnz5kmqDhLdunW77DNe27Zt
U8OGDY2zVj/++KNuueUWpaWlSfI+eM2fP185OTnKzMzUN998ow4dOuill15SVVWVHA6H276fv91O
njyp+vXrG5clxsXFqUmTJi5nvLp3766ioiKdO3dOb7/9tv7yl7943JbLli1Tr169jIeRREZGqnv3
7h7HU1ZWlgICAlzu8crLy1O9evWMEAl4w+FwaMyYMdq/f/8VrwewCsHLBDsiJIIXrONtzVm9erWa
NGmi2267TS1atNBbb71lBK/MzEw9/PDDCgwMVKtWrdS9e3fj4OT84OBuuYqKCnXt2lVBQUEqLCzU
zp07FRwcrODgYDVu3FjPPPOM8VCIGrU91TAiIkLXX3+97rzzTl1//fX64IMPjNcGDx6s+vXrq0eP
Hmrfvr2GDx9e63t/9tlnCggIMNrNN9+sfv36acOGDca6EhMT1aZNG3Xp0kVt2rTR1KlT1apVKw0e
PFiS9Pe//12BgYHasGGDFixYoKCgIIWEhKhTp06aNGmSmjZtqkWLFnkdvGr+dr/4xS/UtWtX3Xzz
zcbvIXkfvGp+x3r16ql79+567733jADqcDjc9v3C7TZo0CAFBQWpW7du6tOnj4YMGaJWrVrp0KFD
evzxx/XKK6+oWbNmatasmdq2bavDhw973JZOp1O//vWv1aRJE/Xs2VNdunQxnlTobjxJUteuXbV2
7Vrj6927d+vOO++sdTsDnjgcDuNpn/Pnz3c5I+/tegCrELxMXHhAgZ8nghescjk1p+YhGLV9iHBV
VZWSk5O1f/9+tx9S62m5msvKJMnpdCohIUHHjh3zqp+FhYXau3evy2PHa/zwww/au3evy0MXanvv
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
Tv8Dn1lmrWhMfT0AAAAASUVORK5CYII=

------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://junit.org/junit5/docs/current/user-guide/images/component-diagram.svg

<?xml version=3D'1.0' encoding=3D'UTF-8' standalone=3D'no'?>
<svg xmlns=3D'http://www.w3.org/2000/svg' xmlns:xlink=3D'http://www.w3.org/=
1999/xlink' contentScriptType=3D'application/ecmascript' contentStyleType=
=3D'text/css' height=3D'915px' preserveAspectRatio=3D'none' style=3D'width:=
2150px;height:915px;' version=3D'1.1' viewBox=3D'0 0 2150 915' width=3D'215=
0px' zoomAndPan=3D'magnify'>
  <defs>
    <filter height=3D'300%' id=3D'fg9607g9gcub8' width=3D'300%' x=3D'-1' y=
=3D'-1'>
      <feGaussianBlur result=3D'blurOut' stdDeviation=3D'2.0'/>
      <feColorMatrix in=3D'blurOut' result=3D'blurOut2' type=3D'matrix' val=
ues=3D'0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0'/>
      <feOffset dx=3D'4.0' dy=3D'4.0' in=3D'blurOut2' result=3D'blurOut3'/>
      <feBlend in=3D'SourceGraphic' in2=3D'blurOut3' mode=3D'normal'/>
    </filter>
  </defs>
  <g>
    <!--MD5=3D[423490a38fdf15f9d701d98f9f242cfc]
cluster org.junit.jupiter-->
    <polygon fill=3D'#FFFFFF' filter=3D'url(#fg9607g9gcub8)' points=3D'1217=
,170.5,1332,170.5,1339,195.5654,1890,195.5654,1890,527,1217,527,1217,170.5'=
 style=3D'stroke: #000000; stroke-width: 1.5;'/>
    <line style=3D'stroke: #000000; stroke-width: 1.5;' x1=3D'1217' x2=3D'1=
339' y1=3D'195.5654' y2=3D'195.5654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' font-=
weight=3D'bold' lengthAdjust=3D'spacingAndGlyphs' textLength=3D'109' x=3D'1=
221' y=3D'187.4639'>
      org.junit.jupiter
    </text>
    <!--MD5=3D[899e7549d75556ed53cabbb57638df67]
cluster org.junit.vintage-->
    <polygon fill=3D'#FFFFFF' filter=3D'url(#fg9607g9gcub8)' points=3D'955,=
335,1075,335,1082,360.0654,1143,360.0654,1143,428,955,428,955,335' style=3D=
'stroke: #000000; stroke-width: 1.5;'/>
    <line style=3D'stroke: #000000; stroke-width: 1.5;' x1=3D'955' x2=3D'10=
82' y1=3D'360.0654' y2=3D'360.0654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' font-=
weight=3D'bold' lengthAdjust=3D'spacingAndGlyphs' textLength=3D'114' x=3D'9=
59' y=3D'351.9639'>
      org.junit.vintage
    </text>
    <!--MD5=3D[7eecee75087ecb6f70a379822261fafe]
cluster org.junit.platform-->
    <polygon fill=3D'#FFFFFF' filter=3D'url(#fg9607g9gcub8)' points=3D'22,2=
4,152,24,159,49.0654,931,49.0654,931,743,22,743,22,24' style=3D'stroke: #00=
0000; stroke-width: 1.5;'/>
    <line style=3D'stroke: #000000; stroke-width: 1.5;' x1=3D'22' x2=3D'159=
' y1=3D'49.0654' y2=3D'49.0654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' font-=
weight=3D'bold' lengthAdjust=3D'spacingAndGlyphs' textLength=3D'124' x=3D'2=
6' y=3D'40.9639'>
      org.junit.platform
    </text>
    <!--MD5=3D[677865eb2a24aa7aa108f8e0601d5b44]
cluster JUnit 4-->
    <polygon fill=3D'#FFFFFF' filter=3D'url(#fg9607g9gcub8)' points=3D'1121=
,551,1174,551,1181,576.0654,1239,576.0654,1239,644,1121,644,1121,551' style=
=3D'stroke: #000000; stroke-width: 1.5;'/>
    <line style=3D'stroke: #000000; stroke-width: 1.5;' x1=3D'1121' x2=3D'1=
181' y1=3D'576.0654' y2=3D'576.0654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' font-=
weight=3D'bold' lengthAdjust=3D'spacingAndGlyphs' textLength=3D'47' x=3D'11=
25' y=3D'567.9639'>
      JUnit 4
    </text>
    <!--MD5=3D[310a961075fb7375dfa4f21827c94e35]
cluster org.opentest4j-->
    <polygon fill=3D'#FFFFFF' filter=3D'url(#fg9607g9gcub8)' points=3D'616,=
810,723,810,730,835.0654,740,835.0654,740,903,616,903,616,810' style=3D'str=
oke: #000000; stroke-width: 1.5;'/>
    <line style=3D'stroke: #000000; stroke-width: 1.5;' x1=3D'616' x2=3D'73=
0' y1=3D'835.0654' y2=3D'835.0654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' font-=
weight=3D'bold' lengthAdjust=3D'spacingAndGlyphs' textLength=3D'101' x=3D'6=
20' y=3D'826.9639'>
      org.opentest4j
    </text>
    <!--MD5=3D[8acdc85b3afaf40a8a892cda9d8153cf]
cluster org.apiguardian-->
    <polygon fill=3D'#FFFFFF' filter=3D'url(#fg9607g9gcub8)' points=3D'1914=
,24,2029,24,2036,49.0654,2128,49.0654,2128,311,1914,311,1914,24' style=3D's=
troke: #000000; stroke-width: 1.5;'/>
    <line style=3D'stroke: #000000; stroke-width: 1.5;' x1=3D'1914' x2=3D'2=
036' y1=3D'49.0654' y2=3D'49.0654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' font-=
weight=3D'bold' lengthAdjust=3D'spacingAndGlyphs' textLength=3D'109' x=3D'1=
918' y=3D'40.9639'>
      org.apiguardian
    </text>
    <!--MD5=3D[7639c34473ec179827bcbba76712a2e4]
entity jupiter-->
    <rect fill=3D'#FEFECE' filter=3D'url(#fg9607g9gcub8)' height=3D'39.0654=
' style=3D'stroke: #A80036; stroke-width: 1.5;' width=3D'101' x=3D'1707.5' =
y=3D'208.5'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'1702.5' y=3D'213.5'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'1702.5' y=3D'237.5654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'81' x=3D'1717.5' y=3D'233.4639'>
      junit-jupiter
    </text>
    <!--MD5=3D[ed6f8020ec715bb224e5be01e90531f5]
entity jupiter_api-->
    <rect fill=3D'#FEFECE' filter=3D'url(#fg9607g9gcub8)' height=3D'39.0654=
' style=3D'stroke: #A80036; stroke-width: 1.5;' width=3D'127' x=3D'1452.5' =
y=3D'472'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'1447.5' y=3D'477'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'1447.5' y=3D'501.0654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'107' x=3D'1462.5' y=3D'496.9639'=
>
      junit-jupiter-api
    </text>
    <!--MD5=3D[441ea3cc830cfeb0964e05e1fab31d32]
entity jupiter_engine-->
    <rect fill=3D'#FEFECE' filter=3D'url(#fg9607g9gcub8)' height=3D'39.0654=
' style=3D'stroke: #A80036; stroke-width: 1.5;' width=3D'152' x=3D'1233' y=
=3D'373'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'1228' y=3D'378'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'1228' y=3D'402.0654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'132' x=3D'1243' y=3D'397.9639'>
      junit-jupiter-engine
    </text>
    <!--MD5=3D[0e07f1ea6d76de99774c7466f06ace44]
entity jupiter_params-->
    <rect fill=3D'#FEFECE' filter=3D'url(#fg9607g9gcub8)' height=3D'39.0654=
' style=3D'stroke: #A80036; stroke-width: 1.5;' width=3D'157' x=3D'1679.5' =
y=3D'373'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'1674.5' y=3D'378'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'1674.5' y=3D'402.0654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'137' x=3D'1689.5' y=3D'397.9639'=
>
      junit-jupiter-params
    </text>
    <!--MD5=3D[18ea6b98240b8025530ab9473dcf2373]
entity jupiter_migration_support-->
    <rect fill=3D'#FEFECE' filter=3D'url(#fg9607g9gcub8)' height=3D'39.0654=
' style=3D'stroke: #A80036; stroke-width: 1.5;' width=3D'224' x=3D'1420' y=
=3D'373'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'1415' y=3D'378'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'1415' y=3D'402.0654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'204' x=3D'1430' y=3D'397.9639'>
      junit-jupiter-migrationsupport
    </text>
    <!--MD5=3D[afcb64d8fae65ccf72870f209580e7a2]
entity vintage_engine-->
    <rect fill=3D'#FEFECE' filter=3D'url(#fg9607g9gcub8)' height=3D'39.0654=
' style=3D'stroke: #A80036; stroke-width: 1.5;' width=3D'156' x=3D'971' y=
=3D'373'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'966' y=3D'378'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'966' y=3D'402.0654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'136' x=3D'981' y=3D'397.9639'>
      junit-vintage-engine
    </text>
    <!--MD5=3D[5cb3c982fc9f237863c6af934ec05e1f]
entity commons-->
    <rect fill=3D'#FEFECE' filter=3D'url(#fg9607g9gcub8)' height=3D'39.0654=
' style=3D'stroke: #A80036; stroke-width: 1.5;' width=3D'184' x=3D'731' y=
=3D'688'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'726' y=3D'693'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'726' y=3D'717.0654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'164' x=3D'741' y=3D'712.9639'>
      junit-platform-commons
    </text>
    <!--MD5=3D[5ff5fa45ad236cb7c8993bec112332ca]
entity console-->
    <rect fill=3D'#FEFECE' filter=3D'url(#fg9607g9gcub8)' height=3D'39.0654=
' style=3D'stroke: #A80036; stroke-width: 1.5;' width=3D'170' x=3D'732' y=
=3D'208.5'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'727' y=3D'213.5'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'727' y=3D'237.5654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'150' x=3D'742' y=3D'233.4639'>
      junit-platform-console
    </text>
    <!--MD5=3D[cb028c5091c687ec367cd0cbfd70389f]
entity engine-->
    <rect fill=3D'#FEFECE' filter=3D'url(#fg9607g9gcub8)' height=3D'39.0654=
' style=3D'stroke: #A80036; stroke-width: 1.5;' width=3D'165' x=3D'740.5' y=
=3D'589'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'735.5' y=3D'594'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'735.5' y=3D'618.0654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'145' x=3D'750.5' y=3D'613.9639'>
      junit-platform-engine
    </text>
    <!--MD5=3D[bcc99341bf3209081c0ac0a5db9b8813]
entity jfr-->
    <rect fill=3D'#FEFECE' filter=3D'url(#fg9607g9gcub8)' height=3D'39.0654=
' style=3D'stroke: #A80036; stroke-width: 1.5;' width=3D'134' x=3D'527' y=
=3D'373'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'522' y=3D'378'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'522' y=3D'402.0654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'114' x=3D'537' y=3D'397.9639'>
      junit-platform-jfr
    </text>
    <!--MD5=3D[1cacb5a8490e30b3bd5ac3ecbdc4ac78]
entity launcher-->
    <rect fill=3D'#FEFECE' filter=3D'url(#fg9607g9gcub8)' height=3D'39.0654=
' style=3D'stroke: #A80036; stroke-width: 1.5;' width=3D'179' x=3D'556.5' y=
=3D'472'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'551.5' y=3D'477'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'551.5' y=3D'501.0654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'159' x=3D'566.5' y=3D'496.9639'>
      junit-platform-launcher
    </text>
    <!--MD5=3D[bb652fc1ce3da2060c9c3c7211dc4a65]
entity reporting-->
    <rect fill=3D'#FEFECE' filter=3D'url(#fg9607g9gcub8)' height=3D'39.0654=
' style=3D'stroke: #A80036; stroke-width: 1.5;' width=3D'182' x=3D'733' y=
=3D'373'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'728' y=3D'378'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'728' y=3D'402.0654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'162' x=3D'743' y=3D'397.9639'>
      junit-platform-reporting
    </text>
    <!--MD5=3D[a9fdbcd7a6cbc124882de1da71397e01]
entity runner-->
    <rect fill=3D'#FEFECE' filter=3D'url(#fg9607g9gcub8)' height=3D'39.0654=
' style=3D'stroke: #A80036; stroke-width: 1.5;' width=3D'166' x=3D'525' y=
=3D'208.5'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'520' y=3D'213.5'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'520' y=3D'237.5654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'146' x=3D'535' y=3D'233.4639'>
      junit-platform-runner
    </text>
    <!--MD5=3D[6b063fcff830e1ca44b1211285a7547d]
entity suite-->
    <rect fill=3D'#FEFECE' filter=3D'url(#fg9607g9gcub8)' height=3D'39.0654=
' style=3D'stroke: #A80036; stroke-width: 1.5;' width=3D'152' x=3D'227' y=
=3D'62'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'222' y=3D'67'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'222' y=3D'91.0654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'132' x=3D'237' y=3D'86.9639'>
      junit-platform-suite
    </text>
    <!--MD5=3D[26c3d440917bb993db7e0b4582132327]
entity suite_api-->
    <rect fill=3D'#FEFECE' filter=3D'url(#fg9607g9gcub8)' height=3D'39.0654=
' style=3D'stroke: #A80036; stroke-width: 1.5;' width=3D'178' x=3D'262' y=
=3D'472'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'257' y=3D'477'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'257' y=3D'501.0654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'158' x=3D'272' y=3D'496.9639'>
      junit-platform-suite-api
    </text>
    <!--MD5=3D[6c7eb623c04c1576bcabbf1f754e34c1]
entity suite_commons-->
    <rect fill=3D'#FEFECE' filter=3D'url(#fg9607g9gcub8)' height=3D'39.0654=
' style=3D'stroke: #A80036; stroke-width: 1.5;' width=3D'222' x=3D'270' y=
=3D'373'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'265' y=3D'378'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'265' y=3D'402.0654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'202' x=3D'280' y=3D'397.9639'>
      junit-platform-suite-commons
    </text>
    <!--MD5=3D[49cab50ffccb00f2bdbd500644443b88]
entity suite_engine-->
    <rect fill=3D'#FEFECE' filter=3D'url(#fg9607g9gcub8)' height=3D'39.0654=
' style=3D'stroke: #A80036; stroke-width: 1.5;' width=3D'203' x=3D'274.5' y=
=3D'208.5'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'269.5' y=3D'213.5'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'269.5' y=3D'237.5654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'183' x=3D'284.5' y=3D'233.4639'>
      junit-platform-suite-engine
    </text>
    <!--MD5=3D[fcdac87879aaef72fc0ff5ea6583b90a]
entity testkit-->
    <rect fill=3D'#FEFECE' filter=3D'url(#fg9607g9gcub8)' height=3D'39.0654=
' style=3D'stroke: #A80036; stroke-width: 1.5;' width=3D'160' x=3D'38' y=3D=
'373'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'33' y=3D'378'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'33' y=3D'402.0654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'140' x=3D'48' y=3D'397.9639'>
      junit-platform-testkit
    </text>
    <!--MD5=3D[7d5ade99636a31ce3293aec6f1ccaf79]
entity junit4-->
    <rect fill=3D'#FEFECE' filter=3D'url(#fg9607g9gcub8)' height=3D'39.0654=
' style=3D'stroke: #A80036; stroke-width: 1.5;' width=3D'86' x=3D'1137' y=
=3D'589'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'1132' y=3D'594'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'1132' y=3D'618.0654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'66' x=3D'1147' y=3D'613.9639'>
      junit:junit
    </text>
    <!--MD5=3D[ba030213f11f5a3d5b319bb69903d2f9]
entity opentest4j-->
    <rect fill=3D'#FEFECE' filter=3D'url(#fg9607g9gcub8)' height=3D'39.0654=
' style=3D'stroke: #A80036; stroke-width: 1.5;' width=3D'91' x=3D'632.5' y=
=3D'848'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'627.5' y=3D'853'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'627.5' y=3D'877.0654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'71' x=3D'642.5' y=3D'872.9639'>
      opentest4j
    </text>
    <!--MD5=3D[55218f8824bbe5d39f8ba58cd4b6343d]
entity apiguardian-->
    <rect fill=3D'#FEFECE' filter=3D'url(#fg9607g9gcub8)' height=3D'39.0654=
' style=3D'stroke: #A80036; stroke-width: 1.5;' width=3D'128' x=3D'1957' y=
=3D'62'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'1952' y=3D'67'/>
    <rect fill=3D'#FEFECE' height=3D'5' style=3D'stroke: #A80036; stroke-wi=
dth: 1.5;' width=3D'10' x=3D'1952' y=3D'91.0654'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'14' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'108' x=3D'1967' y=3D'86.9639'>
      apiguardian-api
    </text>
    <path d=3D'M1930.5,161 L1930.5,294.9253 A0,0 0 0 0 1930.5,294.9253 L211=
1.5,294.9253 A0,0 0 0 0 2111.5,294.9253 L2111.5,171 L2101.5,161 L2025,161 L=
2021,101.1 L2017,161 L1930.5,161 A0,0 0 0 0 1930.5,161 ' fill=3D'#FFFFFF' f=
ilter=3D'url(#fg9607g9gcub8)' style=3D'stroke: #A80036; stroke-width: 1.0;'=
/>
    <path d=3D'M2101.5,161 L2101.5,171 L2111.5,171 L2101.5,161 ' fill=3D'#F=
FFFFF' style=3D'stroke: #A80036; stroke-width: 1.0;'/>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'13' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'108' x=3D'1936.5' y=3D'179.895'>
      All artifacts except
    </text>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'13' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'150' x=3D'1936.5' y=3D'197.5986'=
>
      opentest4j and junit:junit
    </text>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'13' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'160' x=3D'1936.5' y=3D'215.3022'=
>
      have a dependency on this
    </text>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'13' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'140' x=3D'1936.5' y=3D'233.0059'=
>
      artifact. The edges have
    </text>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'13' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'138' x=3D'1936.5' y=3D'250.7095'=
>
      been omitted from this
    </text>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'13' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'137' x=3D'1936.5' y=3D'268.4131'=
>
      diagram for the sake of
    </text>
    <text fill=3D'#000000' font-family=3D'Open Sans' font-size=3D'13' lengt=
hAdjust=3D'spacingAndGlyphs' textLength=3D'66' x=3D'1936.5' y=3D'286.1167'>
      readability.
    </text>
    <!--MD5=3D[4009dd525e6f9a7f47142ed360ba0d57]
link jupiter to jupiter_api-->
    <path d=3D'M1785.88,247.79 C1809.04,265.22 1840.32,293.48 1854,327 C187=
2.31,371.85 1885.41,399.12 1854,436 C1820.13,475.76 1673.46,486.62 1584.84,=
489.51 ' fill=3D'none' id=3D'jupiter-&gt;jupiter_api' style=3D'stroke: #A80=
036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'1579.61,489.68,1588.7312,493.3953,1=
584.6075,489.5229,1588.4799,485.3993,1579.61,489.68' style=3D'stroke: #A800=
36; stroke-width: 1.0;'/>
    <!--MD5=3D[b24b86d13fe18d486aee36e6caa1f3c6]
link jupiter to jupiter_params-->
    <path d=3D'M1758,247.64 C1758,277.32 1758,335.26 1758,367.83 ' fill=3D'=
none' id=3D'jupiter-&gt;jupiter_params' style=3D'stroke: #A80036; stroke-wi=
dth: 1.0; stroke-dasharray: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'1758,372.83,1762,363.83,1758,367.83=
,1754,363.83,1758,372.83' style=3D'stroke: #A80036; stroke-width: 1.0;'/>
    <!--MD5=3D[3673af4386eb99ef3e448e853cc2ed05]
link jupiter to jupiter_engine-->
    <path d=3D'M1707.36,237.49 C1636.77,250.53 1505.9,279.14 1403,327 C1378=
.64,338.33 1353.69,355.78 1335.62,369.67 ' fill=3D'none' id=3D'jupiter-&gt;=
jupiter_engine' style=3D'stroke: #A80036; stroke-width: 1.0; stroke-dasharr=
ay: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'1331.64,372.76,1341.2076,370.4231,1=
335.5967,369.7032,1336.3167,364.0923,1331.64,372.76' style=3D'stroke: #A800=
36; stroke-width: 1.0;'/>
    <!--MD5=3D[ab0c9ae47c398095103bf89a3c28c4c9]
link jupiter_api to opentest4j-->
    <path d=3D'M1503.67,511.21 C1480.84,544.42 1428.73,613.75 1368,652 C115=
3.85,786.89 848.69,842.39 728.97,859.86 ' fill=3D'none' id=3D'jupiter_api-&=
gt;opentest4j' style=3D'stroke: #A80036; stroke-width: 1.0; stroke-dasharra=
y: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'723.76,860.61,733.2385,863.2855,728=
.7089,859.8969,732.0975,855.3673,723.76,860.61' style=3D'stroke: #A80036; s=
troke-width: 1.0;'/>
    <!--MD5=3D[c6dba83660e232a3eacf0989abc01e97]
link jupiter_api to commons-->
    <path d=3D'M1491.64,511.02 C1445.27,545.2 1339.92,617.84 1239,652 C1133=
.81,687.6 1006.36,700.13 920.48,704.44 ' fill=3D'none' id=3D'jupiter_api-&g=
t;commons' style=3D'stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7=
.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'915.4,704.69,924.5936,708.2225,920.=
3934,704.4332,924.1827,700.233,915.4,704.69' style=3D'stroke: #A80036; stro=
ke-width: 1.0;'/>
    <!--MD5=3D[5515becd8ae5974390a505b42c5bf28b]
link jupiter_engine to engine-->
    <path d=3D'M1266.72,412.12 C1176.22,451.97 964.31,545.28 869.86,586.87 =
' fill=3D'none' id=3D'jupiter_engine-&gt;engine' style=3D'stroke: #A80036; =
stroke-width: 1.0; stroke-dasharray: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'865.18,588.93,875.0288,588.9615,869=
.7555,586.9139,871.8031,581.6406,865.18,588.93' style=3D'stroke: #A80036; s=
troke-width: 1.0;'/>
    <!--MD5=3D[774fec1a04f57a7fa1a43bd46173ba1b]
link jupiter_engine to jupiter_api-->
    <path d=3D'M1348.91,412.2 C1383.99,428.64 1434.98,452.54 1471.4,469.6 '=
 fill=3D'none' id=3D'jupiter_engine-&gt;jupiter_api' style=3D'stroke: #A800=
36; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'1476.21,471.85,1469.7664,464.4015,1=
471.6849,469.7231,1466.3633,471.6416,1476.21,471.85' style=3D'stroke: #A800=
36; stroke-width: 1.0;'/>
    <!--MD5=3D[03dfa84e06aaa30e604468ad77330edd]
link jupiter_params to jupiter_api-->
    <path d=3D'M1717.59,412.03 C1700.53,419.68 1680.4,428.5 1662,436 C1632.=
87,447.87 1600.09,460.2 1572.97,470.12 ' fill=3D'none' id=3D'jupiter_params=
-&gt;jupiter_api' style=3D'stroke: #A80036; stroke-width: 1.0; stroke-dasha=
rray: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'1567.98,471.95,1577.8058,472.6239,1=
572.6773,470.2367,1575.0645,465.1082,1567.98,471.95' style=3D'stroke: #A800=
36; stroke-width: 1.0;'/>
    <!--MD5=3D[96ef0e985d276c4c20d5e08ddc711db3]
link jupiter_migration_support to jupiter_api-->
    <path d=3D'M1528.92,412.2 C1526.35,427.77 1522.68,450.02 1519.9,466.83 =
' fill=3D'none' id=3D'jupiter_migration_support-&gt;jupiter_api' style=3D's=
troke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'1519.08,471.85,1524.4897,463.6199,1=
519.8927,466.9165,1516.5961,462.3195,1519.08,471.85' style=3D'stroke: #A800=
36; stroke-width: 1.0;'/>
    <!--MD5=3D[4a92a44fd24ddedab72875e8b5ce5922]
link jupiter_migration_support to junit4-->
    <path d=3D'M1502.96,412.17 C1460.15,439.58 1377.44,492.1 1306,535 C1276=
.57,552.67 1242.84,572.04 1217.69,586.3 ' fill=3D'none' id=3D'jupiter_migra=
tion_support-&gt;junit4' style=3D'stroke: #A80036; stroke-width: 1.0; strok=
e-dasharray: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'1213.09,588.9,1222.8905,587.9251,12=
17.4356,586.427,1218.9337,580.9721,1213.09,588.9' style=3D'stroke: #A80036;=
 stroke-width: 1.0;'/>
    <!--MD5=3D[f05aa6405411279f5c68282f5216bc3f]
link console to launcher-->
    <path d=3D'M791.69,247.78 C769,265.82 736.24,294.99 716,327 C688.66,370=
.24 700.6,389.62 679,436 C673.98,446.78 667.35,458.12 661.36,467.65 ' fill=
=3D'none' id=3D'console-&gt;launcher' style=3D'stroke: #A80036; stroke-widt=
h: 1.0; stroke-dasharray: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'658.65,471.89,666.8601,466.4499,661=
.3372,467.6735,660.1136,462.1505,658.65,471.89' style=3D'stroke: #A80036; s=
troke-width: 1.0;'/>
    <!--MD5=3D[959093e92f79cfa82ab2e6d1e4accd10]
link console to reporting-->
    <path d=3D'M817.8,247.64 C819.08,277.32 821.58,335.26 822.98,367.83 ' f=
ill=3D'none' id=3D'console-&gt;reporting' style=3D'stroke: #A80036; stroke-=
width: 1.0; stroke-dasharray: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'823.2,372.83,826.811,363.667,822.98=
59,367.8346,818.8183,364.0095,823.2,372.83' style=3D'stroke: #A80036; strok=
e-width: 1.0;'/>
    <!--MD5=3D[b36ac9ee04bee0cbdb8c8aff1f788bd3]
link launcher to engine-->
    <path d=3D'M674.83,511.23 C706.43,531.76 757.01,564.62 790.12,586.14 ' =
fill=3D'none' id=3D'launcher-&gt;engine' style=3D'stroke: #A80036; stroke-w=
idth: 1.0; stroke-dasharray: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'794.47,588.97,789.0822,580.7255,790=
.2706,586.2561,784.74,587.4445,794.47,588.97' style=3D'stroke: #A80036; str=
oke-width: 1.0;'/>
    <!--MD5=3D[9d585c854521e03ebfb991fc39763367]
link jfr to launcher-->
    <path d=3D'M604.03,412.2 C612.44,427.9 624.51,450.41 633.54,467.26 ' fi=
ll=3D'none' id=3D'jfr-&gt;launcher' style=3D'stroke: #A80036; stroke-width:=
 1.0; stroke-dasharray: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'636,471.85,635.2759,462.0278,633.63=
89,467.4426,628.2241,465.8056,636,471.85' style=3D'stroke: #A80036; stroke-=
width: 1.0;'/>
    <!--MD5=3D[c9628446b22c9a0cc0be936a2c86c68e]
link engine to opentest4j-->
    <path d=3D'M783.87,628.1 C760.01,641.46 730.94,661.74 714,688 C682.72,7=
36.49 677.75,806.57 677.47,842.81 ' fill=3D'none' id=3D'engine-&gt;opentest=
4j' style=3D'stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;=
'/>
    <polygon fill=3D'#A80036' points=3D'677.46,847.91,681.4857,838.9215,677=
.4743,842.91,673.4857,838.8986,677.46,847.91' style=3D'stroke: #A80036; str=
oke-width: 1.0;'/>
    <!--MD5=3D[ea2060f86e85beb92a12609e16c4fe65]
link engine to commons-->
    <path d=3D'M823,628.2 C823,643.77 823,666.02 823,682.83 ' fill=3D'none'=
 id=3D'engine-&gt;commons' style=3D'stroke: #A80036; stroke-width: 1.0; str=
oke-dasharray: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'823,687.85,827,678.85,823,682.85,81=
9,678.85,823,687.85' style=3D'stroke: #A80036; stroke-width: 1.0;'/>
    <!--MD5=3D[41dea4201c585a09229cbd97f511c3cd]
link reporting to launcher-->
    <path d=3D'M789.68,412.2 C759.64,428.57 716.02,452.34 684.74,469.39 ' f=
ill=3D'none' id=3D'reporting-&gt;launcher' style=3D'stroke: #A80036; stroke=
-width: 1.0; stroke-dasharray: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'680.21,471.85,690.0274,471.0631,684=
.6022,469.4608,686.2046,464.0356,680.21,471.85' style=3D'stroke: #A80036; s=
troke-width: 1.0;'/>
    <!--MD5=3D[b71d19b07f9ebff050ec9829c32dc15e]
link runner to suite_commons-->
    <path d=3D'M586.03,247.65 C563.64,266.37 527.67,295.7 495,319 C469.4,33=
7.26 439.35,356.28 416.53,370.25 ' fill=3D'none' id=3D'runner-&gt;suite_com=
mons' style=3D'stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.=
0;'/>
    <polygon fill=3D'#A80036' points=3D'412.06,372.98,421.8257,371.7027,416=
.3271,370.3739,417.6559,364.8753,412.06,372.98' style=3D'stroke: #A80036; s=
troke-width: 1.0;'/>
    <!--MD5=3D[d164b78841eb186049a4bbb03c13ac85]
link runner to junit4-->
    <path d=3D'M623.03,247.74 C641.86,269.57 676.37,304.5 715,319 C737.27,3=
27.36 1125.27,311.16 1143,327 C1216.81,392.94 1197.35,528.86 1185.72,583.74=
 ' fill=3D'none' id=3D'runner-&gt;junit4' style=3D'stroke: #A80036; stroke-=
width: 1.0; stroke-dasharray: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'1184.62,588.79,1190.4329,580.8395,1=
185.6774,583.9031,1182.6138,579.1476,1184.62,588.79' style=3D'stroke: #A800=
36; stroke-width: 1.0;'/>
    <!--MD5=3D[79e1bbf18e6d795e839532f820ced658]
link suite to suite_api-->
    <path d=3D'M288.31,101.24 C277.38,116.4 263.31,138.82 257,161 C223.56,2=
78.57 191.03,330.64 253,436 C261.54,450.52 275.51,461.46 290.26,469.57 ' fi=
ll=3D'none' id=3D'suite-&gt;suite_api' style=3D'stroke: #A80036; stroke-wid=
th: 1.0; stroke-dasharray: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'294.85,471.99,288.7652,464.2457,290=
.4304,469.6519,285.0242,471.3171,294.85,471.99' style=3D'stroke: #A80036; s=
troke-width: 1.0;'/>
    <!--MD5=3D[55df5418132befc8dc7c42efd97129b0]
link suite to suite_engine-->
    <path d=3D'M312.39,101.1 C325.64,127.32 349.81,175.16 364.24,203.72 ' f=
ill=3D'none' id=3D'suite-&gt;suite_engine' style=3D'stroke: #A80036; stroke=
-width: 1.0; stroke-dasharray: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'366.64,208.48,366.1425,198.6437,364=
.3811,204.0194,359.0054,202.258,366.64,208.48' style=3D'stroke: #A80036; st=
roke-width: 1.0;'/>
    <!--MD5=3D[d98d2d5a6cb1ff4431dde43e3ca2f3cc]
link suite_engine to suite_commons-->
    <path d=3D'M376.57,247.64 C377.49,277.32 379.27,335.26 380.27,367.83 ' =
fill=3D'none' id=3D'suite_engine-&gt;suite_commons' style=3D'stroke: #A8003=
6; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'380.43,372.83,384.1713,363.7194,380=
.2872,367.832,376.1746,363.9479,380.43,372.83' style=3D'stroke: #A80036; st=
roke-width: 1.0;'/>
    <!--MD5=3D[d1187ad7565ed98de3259a4d6533692b]
link suite_commons to launcher-->
    <path d=3D'M431.78,412.09 C477.26,428.73 543.81,453.09 590.64,470.24 ' =
fill=3D'none' id=3D'suite_commons-&gt;launcher' style=3D'stroke: #A80036; s=
troke-width: 1.0; stroke-dasharray: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'595.39,471.98,588.3239,465.1193,590=
.6973,470.2541,585.5625,472.6276,595.39,471.98' style=3D'stroke: #A80036; s=
troke-width: 1.0;'/>
    <!--MD5=3D[83e62847c0df3f70f9f4ac50ba2ff0c8]
link suite_commons to suite_api-->
    <path d=3D'M375.22,412.2 C370.4,427.77 363.52,450.02 358.32,466.83 ' fi=
ll=3D'none' id=3D'suite_commons-&gt;suite_api' style=3D'stroke: #A80036; st=
roke-width: 1.0; stroke-dasharray: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'356.77,471.85,363.2585,464.4406,358=
.2524,467.0748,355.6183,462.0687,356.77,471.85' style=3D'stroke: #A80036; s=
troke-width: 1.0;'/>
    <!--MD5=3D[f9a4ffd5dbe47c724a72c261cd0dbcc1]
link testkit to opentest4j-->
    <path d=3D'M122.57,412.26 C131.2,449.33 149,534.67 149,607.5 C149,607.5=
 149,607.5 149,708.5 C149,807.75 495.16,849.82 627.44,862.27 ' fill=3D'none=
' id=3D'testkit-&gt;opentest4j' style=3D'stroke: #A80036; stroke-width: 1.0=
; stroke-dasharray: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'632.44,862.74,623.8441,857.9327,627=
.461,862.2822,623.1115,865.8991,632.44,862.74' style=3D'stroke: #A80036; st=
roke-width: 1.0;'/>
    <!--MD5=3D[a03d5193873264966af50dc3cedb1169]
link testkit to launcher-->
    <path d=3D'M169.69,412.01 C194.61,420.35 225.07,429.71 253,436 C353.61,=
458.65 470.95,473.44 551.05,481.83 ' fill=3D'none' id=3D'testkit-&gt;launch=
er' style=3D'stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;=
'/>
    <polygon fill=3D'#A80036' points=3D'556.27,482.37,547.7433,477.4409,551=
.298,481.8414,546.8975,485.396,556.27,482.37' style=3D'stroke: #A80036; str=
oke-width: 1.0;'/>
    <!--MD5=3D[689563d167406738417b7162b24b4b21]
link vintage_engine to engine-->
    <path d=3D'M1029.34,412.12 C987.77,451.48 891.1,543.01 846.42,585.32 ' =
fill=3D'none' id=3D'vintage_engine-&gt;engine' style=3D'stroke: #A80036; st=
roke-width: 1.0; stroke-dasharray: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'842.78,588.77,852.062,585.477,846.4=
071,585.3285,846.5556,579.6736,842.78,588.77' style=3D'stroke: #A80036; str=
oke-width: 1.0;'/>
    <!--MD5=3D[39cae807274abf57b2b086cda786b46e]
link vintage_engine to junit4-->
    <path d=3D'M1060.4,412.12 C1084.3,451.17 1139.63,541.55 1165.8,584.3 ' =
fill=3D'none' id=3D'vintage_engine-&gt;junit4' style=3D'stroke: #A80036; st=
roke-width: 1.0; stroke-dasharray: 7.0,7.0;'/>
    <polygon fill=3D'#A80036' points=3D'1168.54,588.77,1167.2773,579.0024,1=
165.9403,584.499,1160.4437,583.162,1168.54,588.77' style=3D'stroke: #A80036=
; stroke-width: 1.0;'/>
    <!--MD5=3D[69f03b8883558a4f6fddfd95ec4f459c]
@startuml
skinparam {
    defaultFontName Open Sans
}

package org.junit.jupiter {
    [junit-jupiter] as jupiter
    [junit-jupiter-api] as jupiter_api
    [junit-jupiter-engine] as jupiter_engine
    [junit-jupiter-params] as jupiter_params
    [junit-jupiter-migrationsupport] as jupiter_migration_support
}

package org.junit.vintage {
    [junit-vintage-engine] as vintage_engine
}

package org.junit.platform {
    [junit-platform-commons] as commons
    [junit-platform-console] as console
    [junit-platform-engine] as engine
    [junit-platform-jfr] as jfr
    [junit-platform-launcher] as launcher
    [junit-platform-reporting] as reporting
    [junit-platform-runner] as runner
    [junit-platform-suite] as suite
    [junit-platform-suite-api] as suite_api
    [junit-platform-suite-commons] as suite_commons
    [junit-platform-suite-engine] as suite_engine
    [junit-platform-testkit] as testkit
}

package "JUnit 4" {
    [junit:junit] as junit4
}

package org.opentest4j {
    [opentest4j]
}

package org.apiguardian {
    [apiguardian-api] as apiguardian
    note bottom of apiguardian #white
        All artifacts except
        opentest4j and junit:junit
        have a dependency on this
        artifact. The edges have
        been omitted from this
        diagram for the sake of
        readability.
    endnote
}

jupiter ..> jupiter_api
jupiter ..> jupiter_params
jupiter ..> jupiter_engine

jupiter_api ....> opentest4j
jupiter_api ...> commons

jupiter_engine ...> engine
jupiter_engine ..> jupiter_api

jupiter_params ..> jupiter_api
jupiter_migration_support ..> jupiter_api
jupiter_migration_support ...> junit4

console ..> launcher
console ..> reporting

launcher ..> engine

jfr ..> launcher

engine ....> opentest4j
engine ..> commons

reporting ..> launcher

runner ..> suite_commons
runner ...> junit4

suite ..> suite_api
suite ..> suite_engine

suite_engine ..> suite_commons

suite_commons ..> launcher
suite_commons ..> suite_api

testkit ....> opentest4j
testkit ..> launcher

vintage_engine ...> engine
vintage_engine ..> junit4
@enduml

PlantUML version 1.2020.06(Sun Apr 05 14:38:32 CEST 2020)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.13+8
Operating System: Mac OS X
Default Encoding: UTF-8
Language: en
Country: DE
-->
  </g>
</svg>
------MultipartBoundary--0qsgK3r7yNROEHk3I4NhqNHdAzK5TExCn0YVnh50t3------
